[{"title":"ssh서버가 비밀번호를 거부했습니다. 다시 시도하십시오.","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post99/","content":"<ul>\n<li>출처 : <a href=\"http://dolbak.egloos.com/v/1874068\" target=\"_blank\" rel=\"noopener\">http://dolbak.egloos.com/v/1874068</a></li>\n</ul>\n<h5 id=\"증상\"><a href=\"#증상\" class=\"headerlink\" title=\"증상\"></a>증상</h5><p>root계정으로 ssh로그인 실패.  </p>\n<h5 id=\"원인\"><a href=\"#원인\" class=\"headerlink\" title=\"원인\"></a>원인</h5><p>ssh설정에서 root로그인이 허용되지 않음.</p>\n<h5 id=\"해결법\"><a href=\"#해결법\" class=\"headerlink\" title=\"해결법\"></a>해결법</h5><ol>\n<li>vi /etc/ssh/sshd_config</li>\n<li>PermitRootLogin no 설정부분의 no를 yes로 변경.</li>\n<li>kill -HUP sshd_pid   (ssh프로세스 재시작)</li>\n</ol>\n","categories":["Tip's"],"tags":[]},{"title":"MSSQL IDENTITY값(시퀀스) 초기화","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post98/","content":"<ul>\n<li>출처 : <a href=\"http://jin5.blogspot.kr/2009/01/mssql-identity.html\" target=\"_blank\" rel=\"noopener\">http://jin5.blogspot.kr/2009/01/mssql-identity.html</a></li>\n</ul>\n<p>보통 PK 값으로 사용하는 항목은 자동증가(auto_increment ; identity) 로 지정하는 경우가 많습니다. 테스트용으로 데이타를 넣고 삭제하다 보면 지정된 시작번호(예를 들면, 1) 부터 나오지 않게 됩니다. 이것을 서버에서 그 번호를 관리하고 있기 때문입니다.<br>사실 반드시 1번부터 시작하지 않아도 상관은 없는데 궂이 1부터 나오도록 하고자 하는 욕심이 있습니다. 그럴 경우 다음처럼 하시면 됩니다.  </p>\n<ol>\n<li>일단 모든 데이타를 삭제할 것이고요</li>\n<li>쿼리창에서 다음의 쿼리문을 작성하고 실행시킵니다.<br><code>DBCC CHECKIDENT( [table_name] , RESEED, 0 )</code><br>예를 들어 테이블명이 member 라면<br><code>DBCC CHECKIDENT( member , RESEED, 0 )</code><br>다음부터는 insert 로 들어가는 데이타의 자동증가 항목은 1부터 들어갑니다.<br>‘0’ 을 ‘100’ 으로 주면 다음부터는 101번부터 들어가게 됩니다.</li>\n<li>자동 증가 되는 수치는 다음과 같이 쿼리문 작성 후 실행<br><code>alter table 테이블명 auto_increment=1</code><br>숫자는 시작하고 싶은걸로 하세요.</li>\n</ol>\n","categories":["DB","MSSQL"],"tags":[]},{"title":"window.onload 대신 사용 가능한 jQuery, javascript 함수","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post97/","content":"<p>window.onload의 기본 사용법은 아래와 같음<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   alert(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>jQuery를 사용하는 경우 아래와 같음<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   alert(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>위 2가지 방법으로도 안되는 경우 아래와 같은 함수를 사용해 볼 것<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">window</span>::<span class=\"title\">onload</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">   alert(<span class=\"string\">'test'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"Windows 에서도 tail 명령어를!!","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post96/","content":"<p>기본적인 명령어를 리눅스에서 사용하던대로 쓰면 될 듯~</p>\n<p><a href=\"https://yeop-blog.github.io/downloads/tail.zip\">tail 다운로드</a></p>\n","categories":["Tip's"],"tags":[]},{"title":"input 필드에 숫자만 입력받기","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post95/","content":"<ul>\n<li>출처 : <a href=\"http://webskills.kr/archives/310\" target=\"_blank\" rel=\"noopener\">http://webskills.kr/archives/310</a><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"ko\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>input 필드에 오직 숫자만 입력 받기<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>input 필드에 오직 숫자만 입력 받기<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">onkeydown</span>=<span class=\"string\">'return onlyNumber(event)'</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">'removeChar(event)'</span> <span class=\"attr\">style</span>=<span class=\"string\">'ime-mode:disabled;'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onlyNumber</span>(<span class=\"params\">event</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      event = event || <span class=\"built_in\">window</span>.event;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> keyID = (event.which) ? event.which : event.keyCode;</span></span><br><span class=\"line\"><span class=\"xml\">      if ( (keyID &gt;= 48 &amp;&amp; keyID <span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">57</span>) || (<span class=\"attr\">keyID</span> &gt;</span>= 96 &amp;&amp; keyID <span class=\"tag\">&lt;<span class=\"name\">=</span> <span class=\"attr\">105</span>) || <span class=\"attr\">keyID</span> == <span class=\"string\">8</span> || <span class=\"attr\">keyID</span> == <span class=\"string\">46</span> || <span class=\"attr\">keyID</span> == <span class=\"string\">37</span> || <span class=\"attr\">keyID</span> == <span class=\"string\">39</span> )</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeChar</span>(<span class=\"params\">event</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      event = event || <span class=\"built_in\">window</span>.event;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> keyID = (event.which) ? event.which : event.keyCode;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">if</span> ( keyID == <span class=\"number\">8</span> || keyID == <span class=\"number\">46</span> || keyID == <span class=\"number\">37</span> || keyID == <span class=\"number\">39</span> )</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"javascript\">        event.target.value = event.target.value.replace(<span class=\"regexp\">/[^0-9]/g</span>, <span class=\"string\">\"\"</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","categories":["Language","HTML"],"tags":[]},{"title":"서버단 패스워드 유효성 검증 로직","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post94/","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 패스워드 유효성 검증</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> passwd</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">passwordValidator</span><span class=\"params\">(String passwd)</span></span>&#123;</span><br><span class=\"line\">  String returnValue = <span class=\"string\">\"success\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  Pattern p = Pattern.compile(<span class=\"string\">\"([a-zA-Z0-9].*[!,@,#,$,%,^,&amp;,*,?,_,~])|([!,@,#,$,%,^,&amp;,*,?,_,~].*[a-zA-Z0-9])\"</span>);</span><br><span class=\"line\">  Matcher m = p.matcher(passwd);</span><br><span class=\"line\"></span><br><span class=\"line\">  Pattern p2 = Pattern.compile(<span class=\"string\">\"(\\\\w)\\\\1\\\\1\\\\1\"</span>);</span><br><span class=\"line\">  Matcher m2 = p2.matcher(passwd);</span><br><span class=\"line\"></span><br><span class=\"line\">  Pattern p3 = Pattern.compile(<span class=\"string\">\"([\\\\&#123;\\\\&#125;\\\\[\\\\]\\\\/?.,;:|\\\\)*~`!^\\\\-_+&lt;&gt;@\\\\#$%&amp;\\\\\\\\\\\\=\\\\(\\\\'\\\\\\\"])\\\\1\\\\1\\\\1\"</span>);</span><br><span class=\"line\">  Matcher m3 = p3.matcher(passwd);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(spaceCheck(passwd))&#123;\t<span class=\"comment\">//패스워드 공백 문자열 체크</span></span><br><span class=\"line\">    returnValue = <span class=\"string\">\"비밀번호에 공백문자를 허용하지 않습니다.\"</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(passwd.length() &lt; <span class=\"number\">10</span> || passwd.length() &gt; <span class=\"number\">16</span>)&#123;\t<span class=\"comment\">//자릿수 검증</span></span><br><span class=\"line\">    returnValue = <span class=\"string\">\"비밀번호는 10자 이상, 16자 이하로 구성하세요.\"</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!m.find())&#123;\t<span class=\"comment\">//정규식 이용한 패턴 체크</span></span><br><span class=\"line\">    returnValue = <span class=\"string\">\"비밀번호는 영문,숫자,특수문자(!@$%^&amp;* 만 허용)를\\n조합하여 10~16자로 구성하세요.\"</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(m2.find() || m3.find())&#123;\t<span class=\"comment\">// 동일 문자 4번 입력 시 패턴 체크</span></span><br><span class=\"line\">    returnValue = <span class=\"string\">\"비밀번호에 동일문자를 4번 이상 사용할 수 없습니다.\"</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(continueNumberCheck(passwd))&#123;\t<span class=\"comment\">// 비밀번호 연속 숫자 4자리 체크</span></span><br><span class=\"line\">    returnValue = <span class=\"string\">\"비밀번호에 연속된 숫자를 4자 이상 사용 할 수 없습니다.\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> returnValue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 공백 문자 체크</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> spaceCheck</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">spaceCheck</span><span class=\"params\">(String spaceCheck)</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; spaceCheck.length() ; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(spaceCheck.charAt(i) == <span class=\"string\">' '</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 연속된 숫자 체크</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> numberCheck</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">continueNumberCheck</span><span class=\"params\">(String numberCheck)</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> o = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> d = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n = <span class=\"number\">0</span>;\t\t</span><br><span class=\"line\">  <span class=\"keyword\">int</span> limit = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; numberCheck.length() ; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> tempVal = numberCheck.charAt(i);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span> &amp;&amp; (p = o - tempVal) &gt; -<span class=\"number\">2</span> &amp;&amp; p &lt; <span class=\"number\">2</span> &amp;&amp; (n = p == d ? n + <span class=\"number\">1</span> : <span class=\"number\">0</span>) &gt; limit - <span class=\"number\">3</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    d = p;</span><br><span class=\"line\">    o = tempVal;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Filter 를 이용하여 XSS (크로스 사이트 스크립트) 를 처리하자","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post93/","content":"<ul>\n<li>출처 : <a href=\"http://nestofeagle.egloos.com/1809584\" target=\"_blank\" rel=\"noopener\">http://nestofeagle.egloos.com/1809584</a></li>\n</ul>\n<p>업로드한 파일 2가지를 Java파일로 생성 후 아래 소스 코드를 web.xml에 추가<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>XSS<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>xxx.xxxxx.xxx(패키지경로).CrossScriptingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>XSS<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>위에서 <code>filter-class</code>경로는 자신이 만든 <code>CrossScriptingFilter.java</code>패키지 경로 삽입</p>\n<p><a href=\"https://yeop-blog.github.io/downloads/Filter.zip\">Filter 관련 Java 파일 다운로드</a></p>\n","categories":["Language","Java"],"tags":[]},{"title":"Http Method (GET, POST, HEAD, PUT, DELETE, TRACE) 제한하기","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post92/","content":"<ul>\n<li>출처 : <a href=\"http://jedagi.tistory.com/90\" target=\"_blank\" rel=\"noopener\">http://jedagi.tistory.com/90</a></li>\n</ul>\n<p>보안때문에 GET, POST, HEAD 정도만 사용하고 PUT, DELETE, TRACE는 막아두는데 방법은 WEB-INF\\web.xml에 코드 추가<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">security-constraint</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>openCoss http Auth<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">web-resource-collection</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">web-resource-name</span>&gt;</span>SecureFile<span class=\"tag\">&lt;/<span class=\"name\">web-resource-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;http-method&gt;GET&lt;/http-method&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;http-method&gt;POST&lt;/http-method&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">http-method</span>&gt;</span>HEAD<span class=\"tag\">&lt;/<span class=\"name\">http-method</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">http-method</span>&gt;</span>PUT<span class=\"tag\">&lt;/<span class=\"name\">http-method</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">http-method</span>&gt;</span>DELETE<span class=\"tag\">&lt;/<span class=\"name\">http-method</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">http-method</span>&gt;</span>TRACE<span class=\"tag\">&lt;/<span class=\"name\">http-method</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">web-resource-collection</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">auth-constraint</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">role-name</span>&gt;</span>openCmsAuth<span class=\"tag\">&lt;/<span class=\"name\">role-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">auth-constraint</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>확인 하는 어플은 간단게 만들었다…<br><a href=\"https://yeop-blog.github.io/downloads/httpMethodCheck.zip\">httpMethodCheck 다운로드</a></p>\n","categories":["Tip's"],"tags":[]},{"title":"Only My Railgun 가사","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post91/","content":"<p>放て！心に刻んだ夢を　未?さえ置き去りにして<br><strong>하나테！코코로니 키잔다 유메오 미라이사에 오키자리니 시테</strong><br>쏴버려! 마음에 새긴 꿈을　미래마저도 내버려둔 채로</p>\n<p>限界など知らない　意味無い！<br><strong>겐카이나도 시라나이 이미 나이！</strong><br>한계따윈 몰라, 의미없지!</p>\n<p>この能力(チカラ)が光散らす　その先に?かな想いを<br><strong>코노 치카라가 히카리 치라스 소노 사키니 하루카나 오모이오</strong><br>이 힘이 빛을 뿌리는 그 너머에 있을 머나먼 마음을</p>\n<p>步いてきた　この道を　振り返ることしか<br><strong>아루이테키타 코노 미치오 후리카에루 코토시카</strong><br>걸어왔던 이 길을 돌아보는 것 밖에</p>\n<p>出?ないなら…今ここで全てを?せる<br><strong>데키나이나라…이마 코코데 스베테오 코와세루</strong><br>할 수 없다면…지금 여기서 모든 걸 부숴버리겠어</p>\n<p>暗闇に墜ちる街?み　人はどこまで立ち向かえるの？<br><strong>쿠라야미니 오치루 마치나미 히토와 도코마데 타치무카에루노？</strong><br>칠흑같은 어둠으로 떨어지는 거리에서 사람들은 어디까지 맞서싸울 수 있을까?</p>\n<p>加速するその痛みから　誰かをきっと守れるよ<br><strong>카소쿠스루 소노 이타미카라 다레카오 킷토 마모레루요</strong><br>가속하는 그 고통으로부터 누군가를 반드시 지킬 수 있을거야</p>\n<p><strong>Looking！</strong><br>보라!<br><strong>The blitz loop this planet to search way.</strong><br>반복되는 전격에 잠긴 이 거리를</p>\n<p>Only my RAILGUN can shoot it. 今すぐ<br><strong>Only my RAILGUN can shoot it. 이마 스구</strong><br>나만의 레일건으로 쏠 수 있어, 지금 당장이라도</p>\n<p>身?中を　光の速さで<br><strong>카라다쥬우오 히카리노 하야사데</strong><br>온 몸을 빛의 속도로</p>\n<p>?け巡った　確かな予感<br><strong>카케메굿타 타시카나 요칸</strong><br>훑고 지나간 분명한 예감</p>\n<p>つかめ！望むものなら?さず　輝ける自分らしさで<br><strong>츠카메！노조무 모노나라 노코사즈 카가야케루 지분라시사데</strong><br>붙잡아! 바라는 것이라면 남김없이　나답게 빛날 수 있을거야</p>\n<p>信じてるよ　あの日の誓いを<br><strong>신지테루요　아노 히노 치카이오</strong><br>믿고 있어, 그 날의 맹세를</p>\n<p>この瞳に光る?　それさえも?さになるから<br><strong>코노 히토미니 히카루 나미다 소레사에모 츠요사니 나루카라</strong><br>이 눈동자에 반짝이는 눈물마저도 내 힘이 되어줄테니까</p>\n<p>立ち止まると　少しだけ　感じる切なさに<br><strong>타치도마루토 스코시다케 칸지루 세츠나사니</strong><br>멈춰서면 조금씩 느껴지는 괴로움에</p>\n<p>戶惑う事　無いなんて噓はつかないよ<br><strong>토마도우코토 나이난테 우소와 츠카나이요</strong><br>망설인 적 없다는 거짓말은 하지 않겠어</p>\n<p>宙(そら)に舞うコインが描く　放物線が決める運命<br><strong>소라니 마우 코인가 에가쿠 호오부츠센 가키메루 운메이</strong><br>하늘에 날려진 동전이 그리는 포물선이 정하는 운명</p>\n<p>打ち出した答えが今日も　私の胸を?け巡る<br><strong>우치다시타 코타에가 쿄오모 와타시노 무네오 카케메구루</strong><br>쏘아버린 해답이 오늘도 내 가슴 속을 질주하네</p>\n<p><strong>Sparking！</strong><br>번뜩여라!<br><strong>The shiny lights awake true desire.</strong><br>내 진정한 바램을 깨우는 빛을</p>\n<p>Only my RAILGUN can shoot it. 必ず<br><strong>Only my RAILGUN can shoot it. 카나라즈</strong><br>나만의 레일건으로 쏠 수 있어, 반드시</p>\n<p>貫いてく　途惑うことなく<br><strong>츠라누이테쿠 토마도우 코토 나쿠</strong><br>꿰뚫어버릴거야, 한 치 망설임없이</p>\n<p>傷ついても　走り?ける<br><strong>키즈츠이테모 하시리츠즈케루</strong><br>상처입을지라도 계속 달려나가겠어</p>\n<p>狙え！凜と煌く視線は　狂い無く闇を切り裂く<br><strong>네라이! 우테토 키라메쿠 시세은와 쿠루이 나쿠 야미오 키리사쿠</strong><br>노려라! 휘번뜩이는 시선은 엇나가지 않고 어둠을 찢어발기리</p>\n<p>迷いなんて　吹き飛ばせばいい<br><strong>마요이난테 후키토바 세바이이</strong><br>망설임 같은 건 날려버리면 돼</p>\n<p>この心が叫ぶ限り　誰ひとり邪魔などさせない<br><strong>코노 코코로가 사케부카기리 다레 히토리 쟈마나도 사세나이</strong><br>이 마음이 외치고 있는 한 그 누구도 방해하지 못해</p>\n<p>?く舞う　無?の願いは<br><strong>하카나쿠 마우 무스우노 네가이와</strong><br>덧없이 날리는 수많은 소망들은</p>\n<p>この?手に　績もってゆく<br><strong>코노 료오테니 츠못테유쿠</strong><br>내 양 손에 쌓여만 가</p>\n<p>切り裂く闇に　見えてくるのは<br><strong>키리사쿠 야미니 미에테쿠루노와</strong><br>찢어발긴 어둠 속에서 보이는 건</p>\n<p>重く深く　切ない記憶<br><strong>오모쿠 후카쿠 세츠나이 키오쿠</strong><br>무겁고도 깊은 안타까운 기억</p>\n<p>色褪せてく　現實に?れる<br><strong>이로아세테쿠 겐지츠니 유레루</strong><br>빛이 바래가고 현실에 흔들리는</p>\n<p>絶望には　負けたくない<br><strong>제츠보오니와 마케타쿠나이</strong><br>절망 따위엔 지고 싶지 않아</p>\n<p>私が今　私であること<br><strong>와타시가 이마 와타시데 아루 코토</strong><br>내가 지금 나 자신으로 존재하는 것을</p>\n<p>胸を張って　全て誇れる！<br><strong>무네오 핫테 스베테 호코레루！</strong><br>가슴을 펴고 자신할 수 있어!</p>\n<p><strong>Looking！</strong><br>보라!<br><strong>The blitz loop this planet to search way.</strong><br>반복되는 전격에 잠긴 이 별의 거리를</p>\n<p>Only my RAILGUN can shoot it 今すぐ<br><strong>Only my RAILGUN can shoot it 이마 스구</strong><br>나만의 레일건으로 쏠 수 있어, 지금 당장이라도</p>\n<p>身?中を　光の速さで<br><strong>카라다쥬우오 히카리노 하야사데</strong><br>온 몸을 빛의 속도로</p>\n<p>?け巡った　確かな予感<br><strong>카케메굿타 타시카나 요칸</strong><br>훑고 지나간 분명한 예감</p>\n<p>放て！心に刻んだ夢を　未?さえ置き去りにして<br><strong>하나테！코코로니 키잔다 유메오 미라이사에 오키자리니 시테</strong><br>쏴버려! 마음에 새긴 꿈을　미래마저도 내버려둔 채로</p>\n<p>限界など知らない　意味無い！<br><strong>겐카이나도 시라나이 이미 나이！</strong><br>한계따윈 몰라, 의미없지!</p>\n<p>この能力(チカラ)が光散らす　その先に?かな想いを<br><strong>코노 치카라가 히카리 치라스 소노 사키니 하루카나 오모이오</strong><br>이 힘이 빛을 뿌리는 그 너머에 있을 머나먼 마음을</p>\n","categories":["Ani"],"tags":[]},{"title":"모바일 기기 접속시 모바일 페이지로 이동 스크립트","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post90/","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 모바일 페이지 강제 이동</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//Mobile여부를 구분하기 위함</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uAgent = navigator.userAgent.toLowerCase();</span><br><span class=\"line\"><span class=\"comment\">// 아래는 모바일 장치들의 모바일 페이지 접속을위한 스크립트</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mobilePhones = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"string\">'iphone'</span>, <span class=\"string\">'ipod'</span>, <span class=\"string\">'ipad'</span>, <span class=\"string\">'android'</span>, <span class=\"string\">'blackberry'</span>, <span class=\"string\">'windows ce'</span>,<span class=\"string\">'nokia'</span>, <span class=\"string\">'webos'</span>, <span class=\"string\">'opera mini'</span>, <span class=\"string\">'sonyericsson'</span>, <span class=\"string\">'opera mobi'</span>, <span class=\"string\">'iemobile'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; mobilePhones.length; i++)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (uAgent.indexOf(mobilePhones[i]) != <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">    location.href=<span class=\"string\">\"/mobile/home/main.do\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"텍스트 범위 벗어나면 숨기고 ... 붙이기","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post89/","content":"<ul>\n<li>출처 : <a href=\"http://saybox.tistory.com/70\" target=\"_blank\" rel=\"noopener\">http://saybox.tistory.com/70</a><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100;text-overflow:ellipsis;overflow:hidden\"</span>&gt;</span>abcdefghight1234567890<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>결과</strong> : abcdefghig…<br>IE 6.0 이상에서 적용되며 div 에서 사용시 폭을 벗어난 글자는 숨기고 “…” 처리 해줌.<br>굿이 일일이 php 에서 길이계산후 “…” 처리 안해도 손쉽게 적용 가능</p>\n","categories":["Tip's"],"tags":[]},{"title":"MSSQL update-replace:기존의 데이터 변경하기","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post88/","content":"<ul>\n<li>출처 : <a href=\"http://www.happyjung.com/bbs/board.php?bo_table=lecture&amp;wr_id=1096\" target=\"_blank\" rel=\"noopener\">http://www.happyjung.com/bbs/board.php?bo_table=lecture&amp;wr_id=1096</a></li>\n</ul>\n<p>특정 컬럼의 문자들을 부분적으로 변경하고 싶을때 자바, 오라클, mssql 도 replace함수를 사용합니다.</p>\n<h5 id=\"사용법\"><a href=\"#사용법\" class=\"headerlink\" title=\"사용법\"></a>사용법</h5><p>replace( ‘대상문자열’, ‘기존데이터’, ‘바꿀데이터’)<br>select replace([칼럼명], ‘기존데이터’, ‘바꿀데이터’), * from [테이블명]<br>update [테이블명] set [컬럼명] = replace([컬럼명],’기존데이터’,’바꿀데이터’)</p>\n<p>예1) 일반컬럼<br>subject 라는 칼럼에 ‘345’ 를 ‘asas’ 로 변경<br>변경될 자료 미리 확인<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">replace</span>(subject, <span class=\"string\">'345'</span>, <span class=\"string\">'asas'</span>), * <span class=\"keyword\">from</span> tblBoard <span class=\"keyword\">where</span> bdOptIdx = <span class=\"string\">'68'</span></span><br></pre></td></tr></table></figure></p>\n<p>위에서 변경될 자료를 미리 본후 이상없으면 아래 쿼리 실행<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> tblBoard <span class=\"keyword\">set</span> subject = <span class=\"keyword\">replace</span>(subject, <span class=\"string\">'345'</span>, <span class=\"string\">'asas'</span>) <span class=\"keyword\">where</span> bdOptIdx = <span class=\"string\">'68'</span></span><br></pre></td></tr></table></figure></p>\n<p>예2) 숫자컬럼<br>regDate 라는 datetime 컬럼에 ‘2012-01-17 12:22:35:66’ 의 자료에서<br>2012-01-17 만 2008-03-21 로 변경하고자 할때<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">replace</span>(regDate, <span class=\"string\">'2012-01-17'</span>, <span class=\"string\">'2008-03-21'</span>), * <span class=\"keyword\">from</span> tblBoard <span class=\"keyword\">where</span> bdOptIdx = <span class=\"string\">'68'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">update</span> tblBoard <span class=\"keyword\">set</span> regDate = <span class=\"keyword\">replace</span>(regDate, <span class=\"string\">'2012-01-17'</span>, <span class=\"string\">'2008-03-21'</span>) <span class=\"keyword\">where</span> bdOptIdx = <span class=\"string\">'68'</span></span><br></pre></td></tr></table></figure></p>\n<p>요렇게 하면 변경이 안됩니다.<br>날짜 형식은 저장되는 순서가 다르기 때문에 아래와 같이 convert 함수를 함께 사용해야 합니다.<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> tblBoard <span class=\"keyword\">set</span> regDate = <span class=\"keyword\">replace</span>(<span class=\"keyword\">convert</span>(<span class=\"built_in\">char</span>(<span class=\"number\">10</span>), regDate, <span class=\"number\">112</span>), <span class=\"string\">'20120117'</span>, <span class=\"string\">'20080321'</span>) <span class=\"keyword\">where</span> bdOptIdx = <span class=\"string\">'68'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">update</span> tblBoard <span class=\"keyword\">set</span> regDate = <span class=\"keyword\">replace</span>(<span class=\"keyword\">convert</span>(<span class=\"built_in\">char</span>(<span class=\"number\">10</span>), regDate, <span class=\"number\">20</span>), <span class=\"string\">'2012-01-17 13:50:45'</span>, <span class=\"string\">'2008-03-21 13:50:45'</span>) <span class=\"keyword\">where</span> bdOptIdx = <span class=\"string\">'68'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">update</span> tblBoard <span class=\"keyword\">set</span> regDate = <span class=\"keyword\">replace</span>(<span class=\"keyword\">convert</span>(<span class=\"built_in\">char</span>(<span class=\"number\">10</span>), regDate, <span class=\"number\">20</span>), <span class=\"string\">'2012-11-05'</span>, <span class=\"string\">'2012-07-09'</span>) <span class=\"keyword\">where</span> bdOptIdx =<span class=\"string\">'4'</span> <span class=\"keyword\">and</span> bdidx = <span class=\"string\">'17'</span></span><br></pre></td></tr></table></figure></p>\n<p>결과값이 아래와 같이 보여도 정상변경된것입니다.<br>(186 row(s) affected)</p>\n<p>관련자료<br><a href=\"http://ellieya.tistory.com/66\" target=\"_blank\" rel=\"noopener\">http://ellieya.tistory.com/66</a><br><a href=\"http://blog.naver.com/westlee25/150078828020\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/westlee25/150078828020</a></p>\n","categories":["DB","MSSQL"],"tags":[]},{"title":"윈도우 소켓이 80포트를 물고 있어서 Windows socket error가 발생시","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post87/","content":"<ul>\n<li>출처 : <a href=\"http://allreview.co.kr/130175671911\" target=\"_blank\" rel=\"noopener\">http://allreview.co.kr/130175671911</a></li>\n</ul>\n<p>TCP/IP, 소켓(winsock), DNS 초기화 명령어</p>\n<p>IP주소는 정상으로 할당 받았으나, 인터넷 페이지가 열리지 않거나 특정 프로그램이 인터넷 접근이 안되는 경우.<br>CMD를 관리자 권한으로 실행 후, 아래 명령어를 입력합니다.</p>\n<p><strong>TCP/IP 재 설정</strong> - <a href=\"http://support.microsoft.com/kb/299357\" target=\"_blank\" rel=\"noopener\">http://support.microsoft.com/kb/299357</a><br><code>netsh int ip reset log.txt</code></p>\n<p><strong>winsock 연결 재 설정</strong> - <a href=\"http://support.microsoft.com/kb/811259\" target=\"_blank\" rel=\"noopener\">http://support.microsoft.com/kb/811259</a><br><code>netsh winsock reset</code></p>\n<p><strong>DNS 재 설정</strong><br><code>ipconfig /flushdns</code></p>\n<p>일반적으로 TCP/IP 를 재 설정하면 복구됩니다.<br>작업 진행 전 반드시 시스템 복원 지점을 생성하십시오.</p>\n","categories":["Tip's"],"tags":[]},{"title":"Oracle 트리거 작성시 Exception 에러 발생 확인 방법","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post86/","content":"<ul>\n<li>트리거에서 Exception 발생 에러 확인 하는 방법.<br><code>dbms_output.put_line(&#39;Exception:&#39;||SQLERRM);</code></li>\n</ul>\n","categories":["DB","Oracle"],"tags":[]},{"title":"첨부파일 필수값 체크","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post85/","content":"<p>첨부파일 필수값 체크 관련해서 아래와 같은 스크립트로 체크가 가능하다.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">forUpdate.validator.set(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> $(<span class=\"string\">\"#uploader-input\"</span>) === <span class=\"string\">\"object\"</span> &amp;&amp; $(<span class=\"string\">\"#uploader-input\"</span>).text() ===<span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">  $.alert(&#123;</span><br><span class=\"line\">   message : <span class=\"string\">\"&lt;spring:message code=\"</span>글:X을선택하십시오<span class=\"string\">\"&gt;&lt;/spring:message&gt;\"</span>.format(&#123;<span class=\"number\">0</span>:<span class=\"string\">\"&lt;spring:message code=\"</span>필드:과정:파일<span class=\"string\">\"&gt;&lt;/spring:message&gt;\"</span>&#125;)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"Spring loadUserByUsername 메소드 수정시 주의할 점","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post84/","content":"<p>loadUserByUsername를 다시 꺼내서 사용할 시 주의할 점은<br>해당 메소드를 쓰는 ServiceImpl의 어노테이션 부분이 xml에 설정되어 있는지 확인이 필요.<br>ex) <code>@Service (&quot;UXMemberService&quot;)</code>라고 어노테이션을 선언한 ServiceImpl에 사용한다면<br>context-security.xml 또는 security-context.xml 부분에서 선언이 되어 있는<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;sec:authentication-manager alias=&quot;authenticationManager&quot;&gt;</span><br><span class=\"line\"> &lt;sec:authentication-provider user-service-ref=&quot;UXMemberService&quot;&gt;</span><br><span class=\"line\">  &lt;sec:password-encoder ref=&quot;UIPasswordEncoder&quot;&gt;</span><br><span class=\"line\"> &lt;/sec:password-encoder&gt;&lt;/sec:authentication-provider&gt;</span><br><span class=\"line\">&lt;/sec:authentication-manager&gt;</span><br></pre></td></tr></table></figure></p>\n<p>위 부분에서 <code>authentication-provider user-service-ref</code> 명이 UXMemberSerivce로<br>어노테이션 명칭과 일치해야 정상적으로 내가 설정해서 사용하는 loadUserByUsername메소드를 타고 들어간다.</p>\n","categories":["Framework","Spring"],"tags":[]},{"title":"Form에서 CheckBox 배열 하나로 다중 input 값 선택적 전송하기","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post83/","content":"<ul>\n<li>출처 : <a href=\"http://lab.sjworks.net/244\" target=\"_blank\" rel=\"noopener\">http://lab.sjworks.net/244</a></li>\n</ul>\n<p>form 태그에서 CheckBox를 배열로 사용해서 다음과 같이 작성해서<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chk[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"aaa\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chk[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"bbb\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chk[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"ccc\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chk[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"ddd\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>두번째와 네번째 체크박스를 선택하고 전송하게 되면 다음과 같이 값이 넘어가게 된다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[chk] =&gt; Array</span><br><span class=\"line\">(</span><br><span class=\"line\">[0] =&gt; bbb</span><br><span class=\"line\">[1] =&gt; ddd</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></p>\n<p>그런데 경우에 따라 체크박스의 체크에 따라 다른 input의 값도 선택적으로 보낼 필요가 있다.<br>이런 경우 자바스크립트로 간단히 해결할 수 있다.</p>\n<p>HTML태그와 자바스크립트 작성 예<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">onsubmit</span>=<span class=\"string\">\"_submit(this);\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- row 1 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chk[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"aaa\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"field_a[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"111\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"field_b[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"가가가\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- row 2 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chk[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"bbb\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"field_a[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"222\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"field_b[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"나나나\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- row 3 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chk[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"ccc\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"field_a[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"333\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"field_b[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"다다다\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- row 4 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"chk[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"ddd\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"field_a[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"444\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"field_b[]\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"라라라\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Submit\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Submit\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- ... --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">language</span>=<span class=\"string\">'JavaScript'</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_submit</span>(<span class=\"params\">f</span>)</span></span></span><br><span class=\"line\"><span class=\"undefined\">&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//같이 보낼 값 정리</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span>(f.elements[<span class=\"string\">'chk[]'</span>].length) == <span class=\"string\">'undefined'</span>) <span class=\"comment\">//단일</span></span></span><br><span class=\"line\"><span class=\"undefined\">    &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span> (f.elements[<span class=\"string\">'chk[]'</span>].checked==<span class=\"literal\">false</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            f.elements[<span class=\"string\">'field_a[]'</span>].disabled=<span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            f.elements[<span class=\"string\">'field_b[]'</span>].disabled=<span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">//다중</span></span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>; i&lt;f.elements[<span class=\"string\">'chk[]'</span>].length; i++)</span></span><br><span class=\"line\"><span class=\"undefined\">        &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (f.elements[<span class=\"string\">'chk[]'</span>][i].checked==<span class=\"literal\">false</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">            &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">                f.elements[<span class=\"string\">'field_a[]'</span>][i].disabled=<span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">                f.elements[<span class=\"string\">'field_b[]'</span>][i].disabled=<span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>각 열마다 chk라는 체크박스와 그에 따른 값 field_a와 filed_b가 있다.<br>chk[0] 체크박스의 체크 박스에 따라 field_a[0]과 field_b[0]의 전송 여부가 결정되게 하고자 한다.<br>form태그에 onsubmit 속성을 써주어 전송될때 이벤트를 자바스크립트 함수 _submit 으로 추가 처리하도록 했다.<br><strong>자바스크립트로 chk를 하나씩 반복하며 체크가 안되어있는 열은 input함수에 disabled 속성을 추가해줘 전송하지 않도록 한다.</strong><br>이때 주의해야할점은 위 예제의 경우는 chk[]의 수가 일정하지만 php등으로 페이지를 가공할때를 대비하여 chk[]가 하나일경우를 위해 단일과 다중 부분을 나눠서 코딩해야 한다.</p>\n<p>이렇게 작성하고 역시 두번째와 네번째를 선택후 전송하면<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[chk] =&gt; Array</span><br><span class=\"line\">(</span><br><span class=\"line\">[0] =&gt; bbb</span><br><span class=\"line\">[1] =&gt; ddd</span><br><span class=\"line\">)</span><br><span class=\"line\">[field_a] =&gt; Array</span><br><span class=\"line\">(</span><br><span class=\"line\">[0] =&gt; 222</span><br><span class=\"line\">[1] =&gt; 4444</span><br><span class=\"line\">)</span><br><span class=\"line\">[field_b] =&gt; Array</span><br><span class=\"line\">(</span><br><span class=\"line\">[0] =&gt; 나나나</span><br><span class=\"line\">[1] =&gt; 라라라</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></p>\n<p>위와같이 전송 되게 된다.</p>\n","categories":["Language","HTML"],"tags":[]},{"title":"Javascript text input창에서 엔터 검사->엔터입력시 스크립트 호출","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post82/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/pero80/100063216873\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/pero80/100063216873</a><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"kw\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>  <span class=\"attr\">onkeypress</span>=<span class=\"string\">\"javascript : if (event.keyCode == 13) key();\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"슈피겐SGP 아이폰5s/5 골드에디션 케이스 체험단 - 네오하이브리드EX 리뷰","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post81/","content":"<p>안녕하세요. 이번에 네오하이브리드EX 케이스가 당첨되어 리뷰를 쓰게 된 ‘소심한옆이군’입니다.</p>\n<p>리뷰를 엄청나게 화려하게.. 잘 쓸 자신은 없으나.. 그래도..</p>\n<p>보시는 분들로 하여금 이 상품을 구매했을때 어떤 장점이 있으며, 단점이 있는지에 대해 최대한 열심히 설명드리도록 하겠습니다 ㅎㅎ</p>\n<p>* 올리는 사진은 케이스를 씌운 아이폰 사진 외에는 전부 아이폰 5S로 찍은 사진입니다.<br>아직 5S 구매안하신 분들은 사진 화질도 어떤지 확인하실 수 있는 기회이지 않을까 싶습니다 :)<br><img src=\"/images/post_images/old-blog-post81-1.jpg\" title=\"첫번째 이미지\"></p>\n<p>- 택배 박스 안을 열어보니 위와 같이 네오하이브리드EX 케이스 상자와 동시에 사은품으로 주는 슈피겐SGP 아이폰 강화유리 슈타인하일 글라스tR 나노슬림 케이스 상자가 같이 가지런히 들어있었습니다. 어차피 케이스 상자 자체가 보호를 해주다 보니 굳이 뽁뽁이가 없어도 되었겠지만, 뽁뽁이까지 같이 해서 포장해주셨다면 좀 더 좋지 않았을까 생각이 드네요 ^^<br><img src=\"/images/post_images/old-blog-post81-2.jpg\" title=\"두번째 이미지\"></p>\n<p>- 상자에서 꺼낸 두 케이스 상자입니다. SGP 제품은 보면 케이스 부터 뭔가 참 뽀대가 나는거 같습니다 :)<br><img src=\"/images/post_images/old-blog-post81-3.jpg\" title=\"세번째 이미지\"></p>\n<p>- 우선 네오하이브리드EX 케이스 사진입니다. 케이스 자체는 플라스틱으로 구성이 되어 있어서 딱 봐도 맘에 드는 디자인이더군요 ^^<br><img src=\"/images/post_images/old-blog-post81-4.jpg\" title=\"네번째 이미지\"></p>\n<p>- 저 모자이크 된 부분은 혹시 몰라서 처리를 해 두었습니다. 케이스 뒷면입니다. 각 나라 언어에 맞는 간단한 케이스 설명이 써있군요. ‘이중시스템의 강력한 보호. 슬림한 그립감. 뛰어난 일체감’ 이라고 되어 있는데.. 과연 정말로 그럴지 기대가 됩니다 ㅋ<br><img src=\"/images/post_images/old-blog-post81-5.jpg\" title=\"다섯번째 이미지\"></p>\n<p>- 그리고 같이 온 두 번째 케이스.. 슈타인하일 글라스tR 나노슬림 케이스 입니다. 0.23mm라는 타 얇은 두께를 자랑하는 강화유리와 못지 않게 얇은 두께를 자랑하는게 특징인 이 케이스는 기존 같은 강화유리 종류인 글라스t와 차이점이라고 한다면 ‘강화유리 가장자리 부분이 라운딩 처리가 되었다’는 점입니다. 이 부분 때문에 가격이 조금 나가긴 합니다만.. SGP 제품군을 좋아하는 분들이라면 요즘 많이 구매하는 제품이라고 합니다. 물론 표면강도는 9H이상입니다.<br><img src=\"/images/post_images/old-blog-post81-6.jpg\" title=\"여섯번째 이미지\"></p>\n<p>- 슈타인하일 글라스tR 나노슬림 케이스의 뒷면입니다. 역시 강화유리에 대한 간단한 특징과 설명이 되어 있습니다. 또한 어떤 구성으로 제품이 되어 있는지도 하단에 표시가 되어있습니다. 이 제품군은 관련 제품에 대한 다른 리뷰를 보시는것이 좀 더 상세하고 확실할 것이라 생각되어 생략하도록 하겠습니다. (이미 받아보신 다른 분들 중에서도 해당 제품에 대한 리뷰가 있으시기도 하니 그걸 참고하시는게 더 도움이 되시리라 생각이 듭니다 ^^ 저는 이런 필름이나 강화유리 붙이는데만큼은 자신이 없어서요 하하하 ㄱ-;;;)<br><img src=\"/images/post_images/old-blog-post81-7.jpg\" title=\"일곱번째 이미지\"></p>\n<p>- 자 이제 해당 리뷰의 메인인 ‘네오하이브리드EX’제품을 살펴보기로 하겠습니다. 열어보면 본 제품인 케이스 제품과 아이폰을 가볍게 닦을 수 있는 수건(?), SGP 정품을 나타내는 작은 인증서, SGP 관련 제품인 ULTRA CRYSTAL 필름, 아이폰 뒤에 부착하는 뒷면 필름. 이렇게 구성이 되어 있습니다.만약에 강화유리를 구매할 생각이 없으신 분들이라면 해당 케이스 제품만 구매하셔도 공짜(?)로 필름을 얻을 수 있습니다 ^^<br><img src=\"/images/post_images/old-blog-post81-8.jpg\" title=\"여덟번째 이미지\"></p>\n<p>- 좀 더 자세히 보면 요렇게 구성 되어 있습니다 ㅎㅎ<br><img src=\"/images/post_images/old-blog-post81-9.jpg\" title=\"아홉번째 이미지\"></p>\n<p>- 아까 말씀드렸던 ULTRA CRYSTAL 필름입니다. 예전에는 필름 자체만으로도 가격이 좀 있었는데.. 이제는 이렇게 주는거 보면.. 참 좋은 세상이지 않나 싶습니다 :) (머래 ㄱ-;;)<br><img src=\"/images/post_images/old-blog-post81-10.jpg\" title=\"열번째 이미지\"></p>\n<p>- 이제 본 제품인 케이스입니다. 케이스 자체는 이렇게 2가지로 구성이 되어 있습니다. 금색 비슷한 범퍼 케이스 + 범퍼 케이스 안에 끼우는 흰색 고무 케이스입니다. 저는 기존 범퍼 케이스가 딱딱한거로만 되어 있는걸 봐서 이번에도 그러겠거니.. 하고 있었는데.. 전혀 아니어서 놀랐습니다.<br><img src=\"/images/post_images/old-blog-post81-11.jpg\" title=\"열한번째 이미지\"></p>\n<p>- 케이스 장착 순서는 먼저 하얀색 범퍼 케이스를 아이폰에 씌웁니다. (물론 장착은 본인이 편하신대로 하는게 가장 좋죠 ㅎㅎ)<br><img src=\"/images/post_images/old-blog-post81-12.jpg\" title=\"열두번째 이미지\"></p>\n<p>- 케이스 좌측 면을 보면 벨/진동으로 바꿀 수 있는 부분이 뚫려져 있고, 볼륨키 부분이 따로 고무재질로 되어 있습니다. 이 부분이 상당히 만져봤을때 촉감도 좋고.. 씌웠을때 볼륨키 역시 잘 눌리게끔 되어 있습니다~<br><img src=\"/images/post_images/old-blog-post81-13.jpg\" title=\"열세번째 이미지\"></p>\n<p>- 상단 부분은 아이폰 전원키 눌리는 부분 역시 볼륨키와 동일하게 고무재질로 되어 있으며 누르는 감 역시 볼륨키와 동일하게 나쁘지 않습니다 ^^</p>\n<p>- 하단 부분인 마이크, 사운드 부분.. 그리고 이어폰 꼽는 연결 부분역시 사용하기 편하게끔 뚫려있습니다.  </p>\n<p>- 하얀 속 범퍼 케이스를 씌운 그 외곽 부분에 이제 금색 범퍼 케이스 부분을 씌워본 모습입니다. 하얀 속 케이스와 금색 케이스가 서로 잘 어울리는 모습이 좋더군요 ㅎㅎ +_+ 좌측 부분 입니다~<br><img src=\"/images/post_images/old-blog-post81-14.jpg\" title=\"열네번째 이미지\"></p>\n<p>- 상단 부분 입니다 ㅎㅎ<br><img src=\"/images/post_images/old-blog-post81-15.jpg\" title=\"열다섯번째 이미지\"></p>\n<p>- 하단 부분 입니다 ㅎㅎ<br><img src=\"/images/post_images/old-blog-post81-16.jpg\" title=\"열여섯번째 이미지\"></p>\n<p>- 전부 씌웠을때 정면 모습입니다. 샴페인 골드에 맞는 색상이라 그런지.. 너무 잘 어울리더군요 ^^<br><img src=\"/images/post_images/old-blog-post81-17.jpg\" title=\"열일곱번째 이미지\"></p>\n<p>- 아이폰 뒷면 입니다.<br><img src=\"/images/post_images/old-blog-post81-18.jpg\" title=\"열여덟번째 이미지\"></p>\n<p>- 마지막으로 다시 한번 화면을 띄우고 정면 샷으로 찍은 사진입니다 ^-^<br><img src=\"/images/post_images/old-blog-post81-19.jpg\" title=\"열아홉번째 이미지\"></p>\n<p>&lt;&lt; 간략한 리뷰 후기 &gt;&gt;</p>\n<p>외곽 모습의 경우에는 사진에서 보시다시피 아시겠지만, 샴페인골드 아이폰 기종과 너무 잘 어울리는 모습을 보여줬습니다. 물론 케이스 뒷면에서 말하는 ‘이중시스템의 강력한 보호. 슬림한 그립감. 뛰어난 일체감’.. 중에서 슬림한 그립감, 뛰어난 일체감 이 부분만큼은 확실히 공감이 갈 정도였습니다. 그치만 이중 시스템이라고 거창하게 말할거까지야 ^^;; 그건 좀 약간 오바이지 않나 싶긴 합니다. 그러나 범퍼 케이스의 장점은 어찌됐든 아이폰 자체의 앞과 뒤에 공간을 만들어주어 아이폰 자체를 보호해주는 역할이 가장 중요한 역할이라 생각하고.. 이 ‘네오하이브리드EX’케이스는 그 역할을 충분히 해줄거라 생각합니다. 아래 장,단점을 간략하게 적어보니, 이 부분을 참고 하시고 이 제품을 차후 구입하실분들에게 도움이 되기를 바래봅니다~~</p>\n<h5 id=\"장점\"><a href=\"#장점\" class=\"headerlink\" title=\"장점\"></a>장점</h5><p>1) 범퍼 케이스만의 장점 of 장점인.. 슬립한 그립감.<br>2) 휘어지는 부드러운 재질임에도 불구하고 딱 붙는 일체감.<br>3) 만져봤을때 느껴지는 부드러우면서 기분 좋은 촉감.(이 부분은 참 말로 설명하기 힘드네요 ㅋㅋ)<br>4) 샴페인골드와 잘 어울리는 케이스 외곽 색상.</p>\n<h5 id=\"단점\"><a href=\"#단점\" class=\"headerlink\" title=\"단점\"></a>단점</h5><p>1) 이중으로 구성이 되어 있어도 상당히 얇게 구성이 되어 있다는 점.<br>(덕분에 슬립한 부분이긴 합니다만..^^ 양날의 검이라는 생각이 드는군요)<br>2) 안 케이스 부분인 하얀색 범퍼 케이스 부분이.. 쉽게 때가 타지 않을까 하는 우려가 되더군요 ^^;<br>물론 이 부분은 어디까지나 제 개인적으로 단점에 가깝게 생각하는 부분입니다. 실제 사용을 좀 더 해봐야 알겠죠~  </p>\n<p>이렇게 쓰고 보니 단점은 뭐… 없는거 같네요 ㅋㅋㅋㅋㅋㅋㅋㅋ</p>\n<p>아무튼 도움이 되기를 바래보며.. 간략한 리뷰를 마치겠습니다 ^-^;</p>\n","categories":["Life","Doodle"],"tags":[]},{"title":"테이블 td에서 글이 늘어났을때 자동으로 줄바꿈 하게끔","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post80/","content":"<ul>\n<li>출처 : <a href=\"http://cafe.naver.com/domfam/1172\" target=\"_blank\" rel=\"noopener\">http://cafe.naver.com/domfam/1172</a></li>\n</ul>\n<p><code>style=&quot;word-break:break-all;&quot;</code><br>아 저거 오늘 완전 유용한 소스네요~</p>\n<p>테이블 width 값을 모두 줬음에도 불구하는 저 늘어나는 테이블때문에 어찌할바를 몰라 쩔쩔매며 div를 사용해서 해보기도 하고 별의별 방법을 찾던중 윌리님 덕분에 오늘 유용한 소스 하나 얻어가네요.</p>\n<p>저렇게 영문을 td안에 넣었을 경우 주체할수 없이 늘어나는 저 테이블..</p>\n<p>그럴땐 고민고민하지 마시고<br><code>&lt;td style=&quot;word-break:break-all;&quot;&gt;</code>이걸 넣어주세요~<br>그러면 정해준 width값을 벗어나지 않는답니다.</p>\n","categories":["Tip's"],"tags":[]},{"title":"개인적인 사이트 모음","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post79/","content":"<p><a href=\"http://e.ggtimer.com/\" target=\"_blank\" rel=\"noopener\">http://e.ggtimer.com/</a><br>타이머 사이트. 라면 끓일때 사용하면 좋은 사이트 ^^</p>\n<p><a href=\"http://baekhorang.tistory.com/275\" target=\"_blank\" rel=\"noopener\">http://baekhorang.tistory.com/275</a><br>디자인에 유용한 웹사이트 모음. 관심있는 분이라면 한번</p>\n<p><a href=\"http://www.youefo.com/film\" target=\"_blank\" rel=\"noopener\">http://www.youefo.com/film</a><br>독립영화를 무료로 볼 수 있다.</p>\n<p><a href=\"http://www.taaz.com/virtual-makeover#tab=hairstyle&amp;piano=red\" target=\"_blank\" rel=\"noopener\">http://www.taaz.com/virtual-makeover#tab=hairstyle&amp;piano=red</a><br>내 사진에 헤어스타일과 메이크업을 바꿔 볼 수 있는 재밌는 사이트</p>\n<p><a href=\"http://www.funshop.co.kr/vs/home.aspx\" target=\"_blank\" rel=\"noopener\">http://www.funshop.co.kr/vs/home.aspx</a><br>어른들의 장난감 놀이터, 하루종일 보고 있어도 재밌는 사이트</p>\n","categories":["Life","Doodle"],"tags":[]},{"title":"동현이형이랑 스터디 내용 정리","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post78/","content":"<h5 id=\"Java-type\"><a href=\"#Java-type\" class=\"headerlink\" title=\"Java type\"></a>Java type</h5><ul>\n<li>primitive type : 8개</li>\n<li>byte &gt; Byte = 8bit</li>\n<li>boolean &gt; Boolean</li>\n<li>char &gt; Character</li>\n<li>int &gt; Integer</li>\n<li>short &gt; Short</li>\n<li>long &gt; Long</li>\n<li>double &gt; Double</li>\n<li>float &gt; Float</li>\n<li>primitive type 하고 wrapper type은 다르다는 점을 인지하고 넘어가는것이 좋다.</li>\n<li>primitive type의 예로 int가 있고, wrapper type의 예로 Integer가 있다.</li>\n</ul>\n<h5 id=\"깔끔하면서도-성능이-좋은-코드\"><a href=\"#깔끔하면서도-성능이-좋은-코드\" class=\"headerlink\" title=\"깔끔하면서도 성능이 좋은 코드?\"></a>깔끔하면서도 성능이 좋은 코드?</h5><ul>\n<li>반복문 형태는 for, while, do-while, 재귀호출이 있다.</li>\n<li>재귀호출의 경우 성능상 좋지 않기 때문에 많이 쓰이지 않는다.(메소드를 호출하는 경우 리소스가 많이 잡는다)</li>\n<li>.하고.. 붙는 경우 연산을 한번 더 하게 된다. (ex:list.size())</li>\n<li>list.size()보다는 밖에 변수에다가 int size = list.size()로 밖에다가 선언해서 사용.</li>\n</ul>\n<h5 id=\"encaptulation-캡슐화\"><a href=\"#encaptulation-캡슐화\" class=\"headerlink\" title=\"encaptulation(캡슐화)\"></a>encaptulation(캡슐화)</h5><ul>\n<li>일반적으로 private로 선언해서 사용하는것이 좋다.</li>\n<li>public은 공개적으로 사용해야 하는 경우에만.. 예들 들어 interface의 경우에는 public으로.. default로 public이 되어 있지만 public으로 선언하는것이 좋다.</li>\n</ul>\n<h5 id=\"변수의-종류\"><a href=\"#변수의-종류\" class=\"headerlink\" title=\"변수의 종류\"></a>변수의 종류</h5><ul>\n<li>공용변수 : static으로 선언되서 모든 Java단에서 사용하는 변수</li>\n<li>전역변수 : class안에 선언되서 해당 Class안에서 사용하는 변수</li>\n<li>지역변수 : method안에 선언되서 그 method안에서만 사용하는 변수<br>Util에서 다른 부분에서 많이 사용을 하는데 인자값만 달리 들어오는 경우 static으로 메소드를 선언해서 사용하는것이 좋다.(ex:Stringutils)</li>\n</ul>\n<h5 id=\"if-else\"><a href=\"#if-else\" class=\"headerlink\" title=\"if~else\"></a>if~else</h5><ul>\n<li>if(xxx){} 문에서 xxx안에 들어가는 !(not)을 쓰지 않는 것이 좋은습관이다.</li>\n<li>만약에 not을 써야 하는 경우가 꼭 있다면 메소드로 따로 빼서 사용하는것으로..<br>ex: <code>!(a&lt;list.size())</code>라고 if문 안에 들어가는 조건을 isUpperSize()라는 메소드를 만들어서 그 안에 사용하는것이 보기에도 좋다.(명확한 정도)</li>\n<li>연산자 방향이 일관성있게 하는것이 보기에 좋다.<br>ex : <code>a &lt; b &amp;&amp; c &lt; d</code> 이런식으로..</li>\n</ul>\n<h5 id=\"String-StringBuffer-StringBuilder\"><a href=\"#String-StringBuffer-StringBuilder\" class=\"headerlink\" title=\"String / StringBuffer / StringBuilder\"></a>String / StringBuffer / StringBuilder</h5><ul>\n<li>성능(속도) : StringBuilder &gt; StringBuffer &gt; String</li>\n<li>안전성 : StringBuffer &gt; StringBuilder &gt; String</li>\n<li>StringBuilder와 StringBuffer의 차이점은 Thread가 싱글이냐 멀티냐의 차이.</li>\n<li>StringBuilder, StringBuffer에서 추가를 할 경우에는 + 식으로 하는게 아니라 append 시켜야 한다.</li>\n<li>StringBuilder나 StringBuffer를 str로 선언을 했을때 리턴 받을 경우에는 return str이 아닌 return str.toString()으로 해야 한다.</li>\n<li>String str = “a” + “b” + “c”; 이런식으로 사용해도 된다. (Java버전 1.5나 1.6에서 StringBuilder에 append시켜줘서 처리를 하기 때문에 상관없다)</li>\n</ul>\n<h5 id=\"Framework\"><a href=\"#Framework\" class=\"headerlink\" title=\"Framework\"></a>Framework</h5><ul>\n<li>IOC, DI(이 2가지 부분에 대한 개념 정리 한번 더 필요)</li>\n<li>IOC : Class의 매직넘버를 방지하기 위해 사용.<br>(IOC,DI - ApplicationContext의 Bean이 등록이 되어 있으면 가져다 사용할 수 있는 관계를 생각해볼것)</li>\n<li>매직넘버 : 계속적으로 반복해서 사용하는 상수를 지칭.</li>\n<li>토비 스프링 1장부분에서 해당 개념부분에 대해서 한번 읽어보면 도움이 됨.</li>\n</ul>\n<h5 id=\"Thread\"><a href=\"#Thread\" class=\"headerlink\" title=\"Thread\"></a>Thread</h5><ul>\n<li>session의 경우 Thread pool의 지역변수.</li>\n<li>Java초기에는 Thread의 pool의 환경을 설정을 생각해주면서 코딩을 했지만, 지금은 따로 해주지 않아도 되는 부분 때문에 신경쓰지 않고 코딩.</li>\n<li>DB pool도 마찬가지로 Thread로 되어 있다.</li>\n<li>Concurrent -&gt; Thread safe?</li>\n<li>ConcurrentHashMap의 경우 Thread의 제한을 두게끔 하는 부분????</li>\n<li>Iterator, static의 경우 예를 들어 다시 한번 생각.</li>\n<li>MultiThread를 생각할때는 Concurrent라는 키워드를 기억하고 있으면 된다.</li>\n<li>Syncronized 선언에 대한 시점도 생각을 해봐야 한다. 지금 현재 사용하는 곳은 static쓰는 부분에서만.</li>\n<li>Reverse AJAX 에서 살펴보면 폴링, 롱폴링에 대해서 알고 있어야 하는데 이 폴링하고 롱폴링이 Thread의 예제로 생각해볼 수 있다.</li>\n<li>Reverse AJAX는 최초 오는 req를 받고 res를 받으면 바로 다시 req를 보내주는 방식으로 알아서 계속 res를 보내주는 방식.<br>그냥 AJAX는 req를 사용자가 계속 보낼때마다 그 때 그 때 res를 보내주는 식이라고 생각을 하면 된다.<br>즉, AJAX와 Reverse AJAX의 차이는 req와 res의 순서가 역전이 되기에 그렇게 명칭이 붙여졌다고 생각하면 쉽지 않을까?</li>\n</ul>\n","categories":["Tip's"],"tags":[]},{"title":"DB 작업시 알아두면 좋은 팁","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post77/","content":"<ol>\n<li>DB는 쪼갤수록 좋다.<br><br></li>\n<li>null대신 빈값으로.<br><br></li>\n<li>여유 컬럼을 하나,두개 두는것이 좋다.<br><br></li>\n<li>index잡아주는 작업은 다 끝나면 버릇처럼 해줘야한다.</li>\n</ol>\n","categories":["Tip's"],"tags":[]},{"title":"이클립스(Eclipse) PermGen space 오류 관련 해결법","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post76/","content":"<p>이클립스 ini파일 내용중에서 -vmargs 아래줄 부터 아래와 같이 추가한다.</p>\n<p>-Xverify:none<br>-XX:+UseParallelGC<br>-XX:PermSize=256M<br>-XX:MaxPermSize=512M<br>-XX:MaxNewSize=128M<br>-XX:NewSize=128M<br>-Xmx1024M</p>\n<p>이클립스 실행후에 서버 설정을 마치면 아래 순서로 진행한다.  </p>\n<ol>\n<li>Servers의 톰캣 더블 클릭.</li>\n<li>Overview의 General information에서 Open launch configuration 을 클릭.</li>\n<li>Argument 탭에 VM Argument 부분에 아래와 같이 추가로 입력한다.<br>&lt; 추가안 1 &gt;<br>-Xms1024m -Xmx1024m<br>-XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m<br>-XX:MaxPermSize=256m<br>&lt; 추가안 2 &gt;<br>-XX:MaxPermSize=256m -Xms512m -Xmx512m</li>\n</ol>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"밴드마스터 > 구 자료.. 한복이벤트 참여","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post75/","content":"<p>이벤트 기간동안 한복을 입고 돌아다니면서..<br>여러군데 스크린샷을 찍고 돌아다녔습니다..<br>그런데 자격조건을 보니 3명이상이라는 단어가 후덜덜..=ㅅ=<br>그래서 어찌저찌 하다 보니 3장의 사진만 건지게 되더군요 ^^<br>저랑 같이 스샷 찍는답시고 참여. 협조 해준 유저분들..<br><strong>딸기공주, 츠바메, 꼼이, Pink♬, 테너</strong>님과.. 특별출연 <strong>네가믿는널믿어♪</strong>님까지..<br>다들 감사드리며, 앞으로도 밴마 꾸준히 같이 할 수 있기를 바랍니다.<br>밴마 화이팅~^-^<br>- P.S : <strong>아래 나오는 대화는 전부 <span style=\"color: red;\">픽션</span>임을 참고해 주시기 바랍니다..=ㅅ=</strong>  </p>\n<p>&lt; 작품명 : 전문 모델꾼(?)들 딸기공주님과 츠바메님과의 한 컷 &gt;<br><img src=\"/images/post_images/old-blog-post75-1.jpg\" class=\"img leftimg\" title=\"첫번째 이미지\"></p>\n<p>&lt; 작품명 : 테터님과 꼼이님의 신혼여행(?) 꼽사리 한 컷 &gt;<br><img src=\"/images/post_images/old-blog-post75-2.jpg\" class=\"img leftimg\" title=\"두번째 이미지\"></p>\n<p>&lt; 작품명 : 본성 드러내는 꼼이님과 Pink♬님의 협박 현장에서 한 컷 &gt;<br><img src=\"/images/post_images/old-blog-post75-3.jpg\" class=\"img leftimg\" title=\"세번째 이미지\"></p>\n","categories":["Life","Game's"],"tags":[]},{"title":"자바 성능을 결정짓는 코딩 습관 튜닝 이야기 요약","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post74/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/moonko1/90107818181\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/moonko1/90107818181</a></li>\n</ul>\n<p>자바 성능을 결정짓는 코딩 습관 튜닝 이야기 요약</p>\n<ol>\n<li>너무나 많은 패턴을 사용하지 말라<br>- 꼭 필요한 패턴만 사용하라<br><br></li>\n<li>데이터 처리할때 TO(Transfer Object)패턴(vo패턴)을 사용하고, 아니면 Collection 관련 클래스 이용하라.<br><br></li>\n<li>서비스 로케이터(Service Locator)패턴은 적용하면 대기시간을 줄수 있다.<br><br></li>\n<li>명명 규칙을 잘 지켰는가?<br><br></li>\n<li>필요한 부분에 예외 처리는 되어 있는가?<br><br></li>\n<li>예외 화면은 지정되어 있는가?<br><br></li>\n<li>예외처리를 e.printStackTrace()해서 서버에 부하를 주지 말자<br><br></li>\n<li>System.gc()메소드를 이용해서 가비지콜렉션을 지운다고 서버를 다운시키지말라<br><br></li>\n<li>System.exit()메소드를 사용해서 프로세스를 죽이는 일이 없도록 하자<br><br></li>\n<li>String클래스로 문자열을 코딩을 하지 말고 StringBuffer, StringBuilder로 클래스를 만들어서 사용하자<br><br></li>\n<li>무한 루프로 빠질수 있는 코드가 있는지 확인해보자(While)<br><br></li>\n<li>Static 남발하지 말자(모르면 쓰지 말자)<br><br></li>\n<li>필요없는 Synchronized블록을 사용하지 말자(성능저하 원인)<br><br></li>\n<li>IO가 계속발송하도록 개발되는지 확인해보자(NIO로 변경하자)<br><br></li>\n<li>필요없는 로그 파일은 제거하자(System.out, DEBUG, LOG)<br><br></li>\n<li>jsp에 정적인 include를 사용하자(동적인 include는 사용하지 말자)<br><br></li>\n<li>자바 빈즈를 너무 많이 사용하지 말자(TO패턴으로 변경하자)<br><br></li>\n<li>태그 라이브러리는 너무 많이 사용하지 말자<br><br></li>\n<li>EJB는 적정하게 사용하라<br><br></li>\n<li>이미지 서버를 사용할수 있는 환경인지 확인해보라<br><br></li>\n<li>사용중인 프레임웍은 검증되었는지 확인해보라<br><br></li>\n<li>적절한 JDBC 드라이버를 사용해라<br><br></li>\n<li>DB Connection, Statement, ResultSet은 Close()되었는지 확인하라<br>- finally 구문에 반드시 close()해야 한다<br><br></li>\n<li>DB Connection Pool을 잘 사용해야 한다.<br><br></li>\n<li>ResultSet.last() 메소드를 사용하지 말라<br><br></li>\n<li>statement보다는 PreparedStatements 사용하는 것이 더 좋다.</li>\n</ol>\n","categories":["Tip's"],"tags":[]},{"title":"iBatis (followed by either attribute specifications, \">\" or \"/>\".","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post73/","content":"<ul>\n<li>출처 : <a href=\"http://blog.daum.net/_blog/BlogTypeView.do?blogid=0MxYQ&amp;articleno=8167305#ajax_history_home\" target=\"_blank\" rel=\"noopener\">http://blog.daum.net/_blog/BlogTypeView.do?blogid=0MxYQ&amp;articleno=8167305#ajax_history_home</a></li>\n</ul>\n<p>XXXDaoMap.xml:27:39: Element type “result” must be followed by either attribute specifications, “&gt;” or “/&gt;”.</p>\n<p>뭔가 하고 한참을 들어여 보았더니<br><code>&lt;result property=&quot;kkk&quot; column=&quot;KKK&quot;javaType=&quot;java.lang.String&quot; jdbcType=&quot;CHAR&quot; /&gt;</code><br>에서 <code>column=&quot;KKK&quot;</code>와 바로 다음 <code>javaType=&quot;java.lang.String&quot;</code>이 바로 붙어 있어서 제대로 읽지를 못해서였다.</p>\n<p><code>&lt;result property=&quot;kkk&quot; column=&quot;KKK&quot; javaType=&quot;java.lang.String&quot; jdbcType=&quot;CHAR&quot; /&gt;</code><br>이렇게 해주니 에러는 바로 해결…</p>\n<p>지금까지중 가장 어이 없는 에러…</p>\n","categories":["Framework","iBatis"],"tags":[]},{"title":"href=\"javascript:void(0)\" 또는 href=\"javascript:;\" 또는 href=\"#\"에 관한 고찰","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post72/","content":"<ul>\n<li>출처 : <a href=\"http://youreme.blog.me/110083067934\" target=\"_blank\" rel=\"noopener\">http://youreme.blog.me/110083067934</a></li>\n</ul>\n<p>소스를 까면 다 나오겠지만,</p>\n<p>굳이 일반 유저에게 해당 액션에 대한 상세한 정보들까지 보여주고 싶지 않을 때 사용하는 방법으로 <code>&lt;A href=&quot;#&quot; onclick=&quot;함수()&quot;&gt;</code>를 많이 사용하는 거 같다.</p>\n<p>그런데,, 요즘엔..<br><code>&lt;a href=&quot;javascript&lt;x style=&quot;color: rgb(95, 94, 66); text-align: justify;&quot;&gt;:;&quot;&gt;</code><br>요거를 요즘 많이 보게된다.</p>\n<p>두개의 차이점이 뭘까요? ㅡㅡ;</p>\n<p><code>&lt;a href=&quot;#&quot;&gt;</code>는 #이 현재페이지를 가리키기 때문에..<br>브라우저의 상황표시줄에는 현재페이지#이라는 URL로 나타나고, 깔끔하게 해결한 듯 하다.<br>그런데, 호출 했을때 페이지가 길다면 호출하면 페이지의 하단을 바라보고 있던 화면이 페이지 상단으로 올라가버리게 되는 이슈가 있다.</p>\n<p>그래서 요즘엔..<br><code>&lt;a href=&quot;javascript&lt;x&gt;:;&quot;&gt;</code>요런걸 사용하던구요.<br>클릭해도 아무것도 안한다는 거죠~~<br><code>&lt;a href=&quot;javascript&lt;x&gt;:void(0);&quot;&gt;</code>요런것도 귀찮으니까 저렇게 하는거 같습니다.<br>물론 브라우저 상황표시줄엔 <code>javascript&lt;x&gt;:;</code>요렇게 나타나겠지만..(개인적으론 덜깔끔함.) 열심히 밑에까지 읽었는데.. 위로 올라가버리는 짜증스러운 상황을 만들진 않겠죠..</p>\n<p>유저를 생각하는 마음이 듬뿍 느껴진다고 할까나..<br>물론.. 신경쓰는 사람은 별로 없겠지만..<br>네이버 메일도.. 다음 메일도 요렇게 쓰고 있답니다.</p>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"iframe 관련 '사용 권한이 없습니다' 라는 오류가 있을시","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post71/","content":"<p>iframe에서 append가 되지 않는 부분이 있어서 div로 처리를 하면 에러가 해결이 된다.<br>아래 예를 보고 차후 다시 한번 이 부분에 대한 공부가 필요.  </p>\n<ul>\n<li><p>Javascript 부분</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">forViewCount = $.action(<span class=\"string\">\"ajax\"</span>);</span><br><span class=\"line\">forViewCount.config.formId      = <span class=\"string\">\"FormViewCount\"</span>;</span><br><span class=\"line\">forViewCount.config.type        = <span class=\"string\">\"html\"</span>;</span><br><span class=\"line\">forViewCount.config.containerId = <span class=\"string\">\"blankArea\"</span>;  <span class=\"comment\">//여기가 포인트 부분!!</span></span><br><span class=\"line\">forViewCount.config.url         = <span class=\"string\">\"&lt;c:url value=\"</span>/library/update/viewCount/ajax.do<span class=\"string\">\"/&gt;\"</span>;</span><br><span class=\"line\">forViewCount.config.fn.complete = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  forDownload.run();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>HTML 부분</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"blankArea\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: none;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span> //ID값을 맞춰줄것!!</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","categories":["Tip's"],"tags":[]},{"title":"Cookie값을 이용해 게시물 조회수 중복처리가 안되게끔 하는 방법","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post70/","content":"<ul>\n<li>아래 부분을 컨트롤단에 넣어서 활용하면 된다.<br>다만, 현재 방법으로써는 계속 bbsSeq값 관련된 쿠키값이 늘어난다는 단점이 있다. 이 부분에 대한 개선이 필요하다.<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int countCheck = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">Cookie[] cookies = req.getCookies();</span><br><span class=\"line\">  if (cookies != null) &#123;</span><br><span class=\"line\">   for (int i = 0; i &lt; cookies.length; i++) &#123;</span><br><span class=\"line\">    if(cookies[i].getName().equals(&quot;bbsSeq&quot;+bbs.getBbsSeq()))&#123;</span><br><span class=\"line\">     countCheck = 0;</span><br><span class=\"line\">     break;</span><br><span class=\"line\">    &#125;else&#123;</span><br><span class=\"line\">     Cookie cookie = new Cookie(&quot;bbsSeq&quot;+bbs.getBbsSeq(), String.valueOf(bbs.getBbsSeq()));</span><br><span class=\"line\">     cookie.setMaxAge(60*60*24);</span><br><span class=\"line\">     cookie.setPath(&quot;/&quot;);</span><br><span class=\"line\">     res.addCookie(cookie);</span><br><span class=\"line\"></span><br><span class=\"line\">     countCheck += 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //상세정보 조회시 카운트 증가</span><br><span class=\"line\">  if(countCheck &gt; 0)&#123;</span><br><span class=\"line\">   bbsService.updateBbsViewCount(bbs);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","categories":["Language","JSP"],"tags":[]},{"title":"HTML for문 안에서 radio버튼 사용시 name이 같을 경우 해결책","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post69/","content":"<p>for문 안에서 radio버튼 사용시 name이 같으면 for문이 아무리 돌아도 radio버튼이 하나만 체크가 되어 나온다.<br>그럴 경우에는 radio버튼에 해당하는 name값을 for문이 돌 때 마다 각기 다르게 들어가게 해준다.<br>ex) <code>type=&quot;radio&quot; name=&quot;tests[${i.index}]&quot;</code><br>위와 같이 되면 test0, test1, test2 이런식으로 name값이 정해진다.<br>여기서 중요한 점은 radio에 해당하는 값을 받는 변수는 List나 배열로 선언을 해주고 사용을 해야 한다.<br>ex) <code>ArrayList&lt;String&gt; tests 또는 String[] tests</code><br>그렇게 List나 배열로 선언을 해주고 컨트롤단에서 제대로 값을 받는지 확인을 한 후 제대로 들어온다면 List나 배열에서 실제 그 값을 활용하는 곳에다가 for문을 돌리면서 값을 꺼내서 셋팅을 해준다.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ex) for(int i = 0; i<span class=\"tag\">&lt;<span class=\"name\">tests.size();</span> <span class=\"attr\">i</span>++)&#123;</span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">test.set</span>(<span class=\"attr\">tests.get</span>(<span class=\"attr\">i</span>));</span></span><br><span class=\"line\"><span class=\"tag\">    &#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>* <strong>결론 : name이 같으면 제대로 radio값을 입력할 수 없으므로 변수명을 달리해서 List나 배열로 받아 처리한다.</strong></p>\n","categories":["Language","HTML"],"tags":[]},{"title":"이클립스(Eclipse) @author 부분 변경 방법","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post68/","content":"<ul>\n<li>Window - Preferences - Java - Code Style - Code Templates - Comments - Types를 Edit버튼을 눌러서 편집한 후 적용하면 다음번에 생성시에 편집된 내용으로 바뀐걸 볼 수 있다.​</li>\n</ul>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"윈도우서비스 제거 및 생성 방법","url":"https://yeop-blog.github.io/2017/10/02/2017-10-02-old-blog-post67/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/kodoi486?Redirect=Log&amp;logNo=70025256677\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/kodoi486?Redirect=Log&amp;logNo=70025256677</a></li>\n</ul>\n<p>대부분은 경우를 보면 윈도우 서비스를 추가하거나 제거하는 방법을 잘 몰라서 그냥 방치를 하거나 불필요한 서비스인 경우는 중지만 해놓고 있는 경우가 많다.</p>\n<p>인터넷에서 윈도우 서비스를 관리 할 수 있는 유틸리티를 받아서 관리를 하는 분도 있기도 하지만 만약 해킹으로 인하여 인터넷이 불가능한 상황이라면 인터넷에서 이런 유틸리티를 받을수도 없다.</p>\n<p>하지만 Windows Control (이하 SC)를 이용하면 윈도우 서비스를 쉽게 생성 할수도 있고, 사용하지 않는 서비스는 삭제 할 수있다.<br><img src=\"/images/post_images/old-blog-post67-1.jpg\" class=\"img leftimg\" title=\"첫번째 이미지\"></p>\n<p>사용법도 무지 간단하다</p>\n<p><strong>서비스를 삭제를 하고자 하는 경우에는 아래와 같이 입력하면 된다.</strong></p>\n<p>sc delete 서비스명<br>ex) <code>sc delete msdtc</code></p>\n<p><strong>서비스에 대한 정보를 보고자 할 경우에는 아래와 같이 입력하면 된다.</strong></p>\n<p>sc query 서비스명<br>ex) <code>sc query msdtc</code></p>\n<p><strong>서비스 Start Stop은 아래와 같다</strong></p>\n<p>sc start 서비스명<br>ex) <code>sc start abel</code></p>\n<p>sc stop 서비스명<br>ex) <code>sc stop abel</code></p>\n<p><strong>서비스 설정을 바꾸고자 할때에는 config를 입력하면 된다.(그림 참고)</strong><br><img src=\"/images/post_images/old-blog-post67-2.jpg\" class=\"img leftimg\" title=\"두번째 이미지\"></p>\n<p><strong>윈도우 서비스를 생성하고자 하는 경우에는 추가적으로 실행해주는 옵션이 많은데, 친절하게 옵션 설명이 나오므로 참고 하면 되겠다.</strong><br><img src=\"/images/post_images/old-blog-post67-3.jpg\" class=\"img leftimg\" title=\"세번째 이미지\"></p>\n","categories":["Tip's"],"tags":[]},{"title":"Oracle windows7 64bit에서 오라클11g 설치시 WFMLRSVCApp.ear 파일 not found 메시지 뜰 때","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post66/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/bring_out?Redirect=Log&amp;logNo=150133837951\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/bring_out?Redirect=Log&amp;logNo=150133837951</a></li>\n</ul>\n<p>[2012/03/11] windows7 64bit에서 오라클11g 설치시 WFMLRSVCApp.ear 파일 not found 메시지 뜰 때</p>\n<p>oracle 홈페이지에서 받은 파일 두개를 한 폴더에 압축풀고</p>\n<p>c:\\폴더\\파일1 압축본<br>c:\\폴더\\파일2 압축본</p>\n<p>파일2의 파일을 파일1 압축 푼 하위에 덮어쓰기함 (같은 이름의 파일이 존재함)</p>\n<p>일단 덮어쓰기 한 후 인스톨해보면 file not found 메시지 안뜸….</p>\n","categories":["DB","Oracle"],"tags":[]},{"title":"MSSQL PROCEDURE(프로시저)와 CURSOR(커서)의 활용","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post65/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/kbk9879/120126027566\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/kbk9879/120126027566</a></li>\n</ul>\n<p>set ANSI_NULLS ON<br>set QUOTED_IDENTIFIER ON<br>go<br><span style=\"color: red;\">–  실행문<br>–  EXEC TEST_PROCEDURE ‘강길동’, ‘05600000’<br>–  현재의 DATABASE에 아래에서 선언한 내용이 없기 때문에 프로시저를 생성하면 오류 발생하므로<br>–  아래의 구문에 맞게 DATABASE를 생성하거나 이미 만들어 놓은 DATABASE에 맞게 아래의 PROCEDURE내용을 바꿔야 함</span><br>CREATE PROCEDURE [dbo].[TEST_PROCEDURE] – 프로시저를 생성할 때 사용(생성하고 또 실행하게 될 경우 이미 존재했다면서 오류 발생)<br>ALTER PROCEDURE [dbo].[TEST_PROCEDURE]  – 프로시저의 내용을 변경할 때 사용(CREATE를 한번 실행한 후 계속 ALTER로 사용하면 됨)<br><span style=\"color: red;\">–프로그램에서 넘겨 받을 변수선언</span><br>@strName    VARCHAR(10)   = ‘’,   <span style=\"color: red;\">– 1. 이름</span><br>@strNumber  VARCHAR(10)   = ‘’,   <span style=\"color: red;\">– 2. 번호</span><br><span style=\"color: red;\">–프로그램으로 넘겨줄 변수선언</span><br>@Rtn INT = 0 OUTPUT, <span style=\"color: red;\">– 3. 리턴 값(숫자)</span><br>@Msg VARCHAR(255) = ‘’ OUTPUT <span style=\"color: red;\">– 4. 리턴 값(문자)</span><br>AS<br>BEGIN<br>DECLARE @strTEL VARCHAR(11); <span style=\"color: red;\">– 일반 변수</span>  </p>\n<p><span style=\"color: red;\">– 변수 초기화(SET명령어는 해당 변수에 값을 넣어준다)</span><br>SET @Msg = ‘프로시저를 시작했습니다.’<br><span style=\"color: red;\">– 이처럼 SELECT문의 결과를 SET명령어를 사용하여 변수에 저장할 수 있음</span><br>SET @strTEL = (SELECT HACKBUN<br>FROM   STUDENT<br>WHERE  STUDENT_NAME = @strName<br>AND    STUDENT_NUMBER = @strNumber)<br><span style=\"color: red;\">– CURSOR 생성</span><br>DECLARE CURSOR_NAME CURSOR FOR<br><span style=\"color: red;\">– CURSOR안에서 사용할 값을 SETTING</span><br>SELECT STUDENT_TEL<br>FROM   STUDENT<br>WHERE  STUDENT_NAME = @strName<br>AND    SEQ = @strNumber<br>OPEN CURSOR_NAME <span style=\"color: red;\">–CURSOR_NAME은 임시로 만든 이름으로 사용자에 맞게 변경해주어도 된다<br>–다만 FETCH문도 동일하게 바꿔주어야 하며, CLOSE, DEALLOCATE문에도 같은 이름을 사용해야 한다</span><br>FETCH NEXT FROM CURSOR_NAME INTO @strTEL <span style=\"color: green;\">—————– 1</span></p>\n<p><span style=\"color: red;\">– FETCH_STATUS의 값이 성공(0)일때 WHILE문 실행</span><br>WHILE @@FETCH_STATUS = 0 BEGIN<br>INSERT INTO ADDRESS (STUDENT_NAME, ADDRESS, TEL)<br>VALUES (@strName, ‘대한민국’, @strTEL);<br><span style=\"color: red;\">– 이 부분에 새로운 CURSOR를 생성해서 사용해도 된다<br>– 즉, 다중 CURSOR문이 가능<br>– 이 안에 CURSOR를 생성하게 되면 결과는<br>– 첫번째 CURSOR에서 생성되는 값을 두번째 CURSOR에서 또 사용할 수 있어서 후처리를 할 때 편하다</span><br>FETCH NEXT FROM CURSOR_NAME INTO @strTEL <span style=\"color: green;\">——————2</span><br>END;<br><span style=\"color: red;\">– <span style=\"color: green;\">1, 2번</span>의 INTO뒤에 있는 변수는 CURSOR를 생성할 때 받는 값을 저장할 변수로써,<br>– 생성 부분의 SELECT문의 결과 개수와 1, 2의 FETCH문의 개수가 일치해야 됨<br>– <span style=\"color: green;\">1, 2번</span>은 똑같아야 한다.</span><br>CLOSE CURSOR_NAME <span style=\"color: red;\">– CURSOR 닫기</span><br>DEALLOCATE CURSOR_NAME <span style=\"color: red;\">– CURSOR 해체</span><br>SET @Msg = ‘정상적으로 처리가 되었을까요??’<br>END</p>\n","categories":["DB","MSSQL"],"tags":[]},{"title":"이클립스(Eclipse) HotSwap기능이 있는 JRebel 무료 사용법. (Java단을 Tomcat 재시작 없이 확인 가능)","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post64/","content":"<p><span style=\"color: red; font-weight: bold;\">※ 글 작성에 앞서 아래 jRebel은 기업 및 기업에서 개인이 사용시에는 반드시 유료로 구매하셔서 사용하셔야 하는 프로그램임을 먼저 명시하고 알려드립니다.<br>이를 무시하고 사용시 당하는 불이익에 대해서는 책임이 없으니 이 점 유념해주시기 바랍니다.</span></p>\n<p>1) 아래 사이트에 접속합니다.<br>- <a href=\"https://my.jrebel.com/\" target=\"_blank\" rel=\"noopener\">https://my.jrebel.com/</a></p>\n<p>2) 접속하면 아래와 같은 화면이 뜨는데 여기서 회원가입을 우선 해야 합니다.<br>- <strong>여기서 가입은 무조건 SNS계정으로 가입해야 합니다.</strong><br>(SNS 계정을 통해 차후 free결제를 진행해야 하기 때문에 SNS계정이 없는 분은 하나 만들어 두면 여러모로 편합니다~)<br><img src=\"/images/post_images/old-blog-post64-1.png\" title=\"첫번째 이미지\"></p>\n<p>3) 여기서는 트위터로 진행을 하도록 하겠습니다. (페이스북 사용자 역시 비슷한 과정으로 진행하시면 됩니다) 위 화면에서 Connect w/ Twitter버튼을 클릭하면 아래와 같은 화면이 나오고 해당 화면에서 자신이 만든 계정 혹은 가지고 있는 계정의 이메일주소와 비밀번호를 입력후 애플리케이션 승인 버튼을 누릅니다.<br><img src=\"/images/post_images/old-blog-post64-2.png\" title=\"두번째 이미지\"></p>\n<p>4) 승인 버튼을 누르고 인증 절차에 따라 진행 된후 아래와 같은 화면이 나오는데 간단하게 자신의 이름과 이메일주소, 직업 등을 입력하는 란입니다. 아래와 같이 간단하게 적어주시고.. SIGN UP 버튼을 클릭해주세요.<br><img src=\"/images/post_images/old-blog-post64-3.png\" title=\"세번째 이미지\"></p>\n<p>5) SIGN UP 버튼을 누르면 위에서 적은 자신의 이메일 계정으로 승인 메일이 날라오게 됩니다. 혹시나 계속 기다렸는데 안오면 아래 request it again 버튼을 한번 더 눌러주세요. 그렇게 해서 승인 메일이 도착하고 확인해 보면 2번째 화면과 같이 링크 부분이 있습니다. 그 부분을 클릭 또는 클릭이 안되면 복사후 인터넷 주소창에 붙여넣고 엔터를 쳐주세요.<br><img src=\"/images/post_images/old-blog-post64-4.png\" title=\"네번째 이미지\"><br><img src=\"/images/post_images/old-blog-post64-5.png\" title=\"다섯번째 이미지\"></p>\n<p>6) 제대로 인증이 되었다면 아래와 같은 화면이 나옵니다. 여기서 Social 부분의 SUBSCRIBE 버튼을 클릭.<br><img src=\"/images/post_images/old-blog-post64-6.png\" title=\"여섯번째 이미지\"></p>\n<p>7) 클릭하시면 Social Plan이라는 화면과 함께 아래와 같은 화면이 나오는데 여기서 자신이 만든 SNS계정에 속하는 부분의 Click here라고 표시된 부분을 클릭하면 됩니다.<br><img src=\"/images/post_images/old-blog-post64-7.png\" title=\"일곱번째 이미지\"></p>\n<p>8) 클릭하면 아래와 같은 화면이 나오고 여기서 승인 버튼 클릭.<br><img src=\"/images/post_images/old-blog-post64-8.png\" title=\"여덟번째 이미지\"></p>\n<p>9) 인증 절차후 다시 아래와 같은 화면이 나오면 SUBSCRIBE 클릭.<br><img src=\"/images/post_images/old-blog-post64-9.png\" title=\"아홉번째 이미지\"></p>\n<p>10) 보시면 0$ 결제 보이실겁니다. 그 아래 간단한 연락처 기재 부분이 있는데 적당히 적고 COMPLETE ORDER 클릭.<br><img src=\"/images/post_images/old-blog-post64-10.png\" title=\"열번째 이미지\"></p>\n<p>11) 클릭하셔서 여기까지 나오시면 우선 jRebel 구매는 완료가 되신겁니다. 이제 자신이 쓰는 IDE에 jRebel설치 후 라이센스 코드를 입력하여 사용하면 끝입니다. IDE설치부터 jRebel Activate License사용까지에 대해서는 타 블로그에서 자세히 설명된 부분이 있으니 그 블로그 페이지를 참고해주시기 바랍니다. (해당 블로그는 아래 링크를 걸어두겠습니다.)<br><img src=\"/images/post_images/old-blog-post64-11.png\" title=\"열한번째 이미지\"></p>\n<p><strong>&lt; jRebel 사용법 및 이클립스 설치 과정에서 라이센스 등록까지.. 참고 블로그 주소들 &gt;</strong><br>- 보시면 아시겠지만 설치 과정에서 화면이 틀릴 수 있지만 기본적인 내용은 거의 비슷하기 때문에 문제는 없으실거라 생각 됩니다.<br>저 역시 아래 블로그 참고해서 설치 마무리 한 사람이니깐요 ^^;;</p>\n<p>1.이클립스 jRebel 설치 공식 튜토리얼 -  <a href=\"http://zeroturnaround.com/software/jrebel/eclipse-jrebel-tutorial/\" target=\"_blank\" rel=\"noopener\">http://zeroturnaround.com/software/jrebel/eclipse-jrebel-tutorial/</a></p>\n<p>2.<a href=\"http://belong2jesus.tistory.com/44\" target=\"_blank\" rel=\"noopener\">http://belong2jesus.tistory.com/44</a><br>(개인적으로는 이 블로그를 위주로 참고하여 설치 진행하였습니다.)</p>\n<p>3.<a href=\"http://blog.naver.com/PostView.nhn?blogId=rcnboys&amp;logNo=20115400550&amp;parentCategoryNo=44&amp;viewDate=&amp;currentPage=1&amp;listtype=0\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/PostView.nhn?blogId=rcnboys&amp;logNo=20115400550&amp;parentCategoryNo=44&amp;viewDate=&amp;currentPage=1&amp;listtype=0</a></p>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"Oracle SQL 제약조건 삭제방법","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post63/","content":"<p><code>alter table member drop column id cascade constraints</code><br>그리고 이어서<br><code>drop table member</code></p>\n<ul>\n<li><p>MEMBER</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> <span class=\"keyword\">member</span> <span class=\"keyword\">drop</span> <span class=\"keyword\">column</span> <span class=\"keyword\">id</span> <span class=\"keyword\">cascade</span> <span class=\"keyword\">constraints</span>;</span><br><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> <span class=\"keyword\">member</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>BBS</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> bbs <span class=\"keyword\">drop</span> <span class=\"keyword\">column</span> <span class=\"keyword\">no</span> <span class=\"keyword\">cascade</span> <span class=\"keyword\">constraints</span>;</span><br><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> bbs;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>BBS_COMMENT</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> bbs_comment;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>휴지통 비우기<br><code>purge recyclebin;</code></p>\n</li>\n</ul>\n","categories":["DB","Oracle"],"tags":[]},{"title":"Oracle ALTER 사용법 및 HINT 사용법","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post62/","content":"<ol>\n<li><p><strong>테이블 primary key drop</strong><br>alter table 테이블명 drop primary key;<br>ex) <code>alter table bbs drop primary key;</code></p>\n</li>\n<li><p><strong>해당 테이블 primary key 값 변경</strong><br>alter table 테이블명 add constraint 인덱스명 primary key(인자1, 인자2, 인자3);<br>ex) <code>alter table bbs add constraint bbs_no_pk primary key(no);</code></p>\n</li>\n<li><p><strong>오라클 SQL 힌트 사용법</strong>  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"comment\">/*+FIRST_ROWS(page_size)*/</span> BONE_TAB.ROW_NUM, FLESH_TAB.*</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ( <span class=\"keyword\">SELECT</span> <span class=\"comment\">/*+INDEX_DESC(table_name index_name)*/</span></span><br><span class=\"line\"><span class=\"keyword\">ROWNUM</span> <span class=\"keyword\">AS</span> ROW_NUM, <span class=\"keyword\">ROWID</span> <span class=\"keyword\">AS</span> ROW_ID</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">ROWNUM</span> &lt; page_num * page_size + <span class=\"number\">1</span> ) BONE_TAB</span><br><span class=\"line\"><span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> table_name FLESH_TAB</span><br><span class=\"line\"><span class=\"keyword\">ON</span> BONE_TAB.ROW_ID   = FLESH_TAB.ROWID</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> BONE_TAB.ROW_NUM &gt; ( page_num - <span class=\"number\">1</span> ) * page_size</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> *</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ( <span class=\"keyword\">SELECT</span> <span class=\"comment\">/*+ INDEX_DESC(테이블명 인덱스명)  */</span></span><br><span class=\"line\">article_id,</span><br><span class=\"line\">title,</span><br><span class=\"line\"><span class=\"built_in\">date</span></span><br><span class=\"line\"><span class=\"keyword\">ceil</span>( <span class=\"keyword\">rownum</span> / 한화면당 갯수 ) <span class=\"keyword\">as</span> page</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> articles</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> 조건들....</span><br><span class=\"line\">) <span class=\"keyword\">WHERE</span> page = 출력하고 싶은 페이지번호</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ul>\n<li>예제 쿼리  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"comment\">/*+ INDEX_ASC(bbs bbs_no_pk) */</span></span><br><span class=\"line\"><span class=\"keyword\">rownum</span>,</span><br><span class=\"line\"><span class=\"keyword\">no</span>,</span><br><span class=\"line\">title,</span><br><span class=\"line\"><span class=\"keyword\">name</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> bbs</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","categories":["DB","Oracle"],"tags":[]},{"title":"인텔리J(IntelliJ) 간략 사용법","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post61/","content":"<ul>\n<li>출처 : <a href=\"http://tutle79.tistory.com/entry/%EC%9D%B8%ED%85%94%EB%A6%ACJ-%EC%82%AC%EC%9A%A9%EB%B2%95-%EA%B0%84%EB%9E%B5%EC%84%A4%EB%AA%85\" target=\"_blank\" rel=\"noopener\">http://tutle79.tistory.com/entry/%EC%9D%B8%ED%85%94%EB%A6%ACJ-%EC%82%AC%EC%9A%A9%EB%B2%95-%EA%B0%84%EB%9E%B5%EC%84%A4%EB%AA%85</a></li>\n</ul>\n<h4 id=\"Subversion\"><a href=\"#Subversion\" class=\"headerlink\" title=\"Subversion\"></a>Subversion</h4><ol>\n<li><p>프로젝터 드개 띄우기<br>FILE -&gt; REOPEN</p>\n</li>\n<li><p>신규 파일/폴더<br>=&gt; totris svn 통한 추가<br>=&gt; 커밋</p>\n</li>\n<li><p>소스 변경<br>=&gt; totris svn 통한 update 먼저<br>=&gt; 커밋</p>\n</li>\n<li><p>삭제<br>=&gt; totris svn 통한 삭제</p>\n</li>\n<li><p>버전처리 안받아 질때<br>=&gt; clean up</p>\n</li>\n</ol>\n<h4 id=\"Intelli-J\"><a href=\"#Intelli-J\" class=\"headerlink\" title=\"Intelli J\"></a>Intelli J</h4><ol>\n<li><p>ctrl+shift+n =&gt; 소스찾기<br>ctrl+shift+f=&gt; 내용으로 찾기</p>\n</li>\n<li><p>로그 보기</p>\n</li>\n<li><p>소스 비교/한줄삭제</p>\n</li>\n<li><p>소스 추적<br>=&gt; ctrl + 마우스 왼쪽</p>\n</li>\n<li><p>주석 처리<br>=&gt; ctrl + /<br>=&gt; ctrl + shitf + /</p>\n</li>\n<li><p>alt+enter<br>=&gt; import 클래스</p>\n</li>\n<li><p>ctrl + alt + L<br>=&gt; 라인 정렬</p>\n</li>\n<li><p>local history<br>오른쪽 버튼 =&gt; show history<br>FILE=&gt;Setting =&gt; Live Templete =&gt; User 등록</p>\n</li>\n<li><p>자주 쓰는 문구 등록<br>ctrl + J =&gt; short cut</p>\n</li>\n<li><p>수정했던 파일로 이동<br>ctrl + shitf + &lt;-</p>\n<p>블럭을 만들고 선택한 부분을 위,아래로 이동<br>ctrl + shitf + 위(아래)</p>\n</li>\n<li><p>&lt;- / -&gt; 사용<br>ctrl + alt + 왼쪽/오른쪽 화살표</p>\n</li>\n<li><p>한줄 지우기<br>ctrl + &lt;-</p>\n</li>\n<li><p>템플릿 정의</p>\n</li>\n<li><p>선택한 소스를 바로 밑에 복사하기<br>ctrl + D</p>\n</li>\n<li><p>커서 선택 열모드로 전환하기<br>shift+alt+insert (되돌리기는 한번 더)</p>\n</li>\n</ol>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"MSSQL 간단하게 테이블 백업, 복구하기","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post60/","content":"<ul>\n<li>출처 : <a href=\"http://jajking.tistory.com/5\" target=\"_blank\" rel=\"noopener\">http://jajking.tistory.com/5</a></li>\n</ul>\n<h4 id=\"백업\"><a href=\"#백업\" class=\"headerlink\" title=\"백업\"></a>백업</h4><p>회사에서 중요한 데이터 베이스 작업을 앞두고 긴장하는 경우가 많은데요<br>이럴때는 간단하게 필요한 정보만 백업 해 두고싶은욕구가 생기죠..<br>바로 이런 경우에 요긴하게 쓰일 수 있는 게 바로  </p>\n<p><span style=\"color: #5c7fb0; font-weight:bold;\">SELECT INTO 구문입니다.</span></p>\n<p>select into 구문은  create table 와 insert ~ select 구문을<br>합쳐 놓은거 라고 생각하지면 되겠습니다.</p>\n<p>예로 회사 상용디비에 업뎃을 걸거나 삭제를 날려야 할때 예상치 못한 결과를 대비해서<br>미리 테이블 자체를 백업을 하는것이 가능합니다.<br>(저는 간떨려서 꼭 해 둡니다…ㅋㅋㅋ)</p>\n<p><span style=\"color: #801fbf; font-weight:bold;\">USE 사용할 데이터베이스<br>SELECT * INTO newtable FROM oldtable</span></p>\n<p>이렇게 해두면 상당한 크기의 테이블이라도 단 몇초만에 백업가능합니다.<br>(한 레코드  100byte 정도의 100만건이라도 1분을 안 넘깁니다.)</p>\n<p>하지만 주의점은 어디까지나 임시 백업용이라는점을 잊지마세요.<br>테이블의 데이터만 완전 백업을 받을 수 있는거지, <strong>기존 테이블에 걸려있는<br>각종 키정보나 제약 정보는 아무것도 따라오는것이 아니랍니다.</strong></p>\n<p>중요 업뎃 날리실때 꼭 테이블 백업 하시고 가벼운 맘으로 where 구문없이 ..ㅋㅋ (농담요.ㅋ)</p>\n<p>대한민국 개발자 여러분 홧팅하세요..^^</p>\n<p>참고로 MSSQL 기준으로 작성된 글 입니다.<br>아마도 oracle 에서는 <code>CREATE TABLE newtable AS SELECT * FROM oldtable</code> 이라는 구문을 사용하실수 있을겁니다.</p>\n<h4 id=\"복구\"><a href=\"#복구\" class=\"headerlink\" title=\"복구\"></a>복구</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> IDENTITY_INSERT [복구테이블] <span class=\"keyword\">ON</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> [복구테이블](컬럼<span class=\"number\">1</span>, 컬럼<span class=\"number\">2</span>, 컬럼<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> (컬럼<span class=\"number\">1</span>,컬럼<span class=\"number\">2</span>,컬럼<span class=\"number\">3</span>) <span class=\"keyword\">FROM</span> [백업테이블]</span><br><span class=\"line\"><span class=\"keyword\">SET</span> IDENTITY_INSERT [복구테이블] <span class=\"keyword\">OFF</span></span><br></pre></td></tr></table></figure>\n","categories":["DB","MSSQL"],"tags":[]},{"title":"MSSQL ALTER 명령어","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post59/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/soo02da/150094175853\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/soo02da/150094175853</a></li>\n</ul>\n<ol>\n<li><p>테이블 필드 수정하기<br>alter table [테이블명] alter column [칼럼명] [형식] [기타 제약 조건];  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> user_mstr <span class=\"keyword\">alter</span> <span class=\"keyword\">column</span> user_nm <span class=\"built_in\">varchar</span>(<span class=\"number\">200</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>필드 삭제 하기<br>alter table [테이블명] drop column [칼럼명];</p>\n</li>\n<li><p>필드 추가하기<br>alter table [테이블명] add [칼럼명] [형식] [기타 제약 조건];  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> user_mstr <span class=\"keyword\">add</span> user_pw_old <span class=\"built_in\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>필드 이름수정<br>sp_rename ‘테이블명.[칼럼명]’, 바뀔칼럼명’, ‘COLUMN’  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sp_rename 'bbs_article.[thumb]', 'thumb_nm', 'COLUMN'</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","categories":["DB","MSSQL"],"tags":[]},{"title":"Ctrl+C,Ctrl+V, F5 복사방지 스크립트","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post58/","content":"<h4 id=\"IE-Chrome에서-사용-가능\"><a href=\"#IE-Chrome에서-사용-가능\" class=\"headerlink\" title=\"IE, Chrome에서 사용 가능\"></a>IE, Chrome에서 사용 가능</h4><ul>\n<li>키보드<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">textbox_KeyDown = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">if</span>(event.keyCode == <span class=\"number\">86</span> &amp;&amp; event.ctrlKey) &#123;</span><br><span class=\"line\">  event.keyCode = <span class=\"number\">0</span>;</span><br><span class=\"line\">  event.cancelBubble = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  $.alert(&#123;<span class=\"attr\">message</span> : <span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">\"</span>&#125;);</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.event.returnValue = <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.keyCode == <span class=\"number\">67</span> &amp;&amp; event.ctrlKey)&#123;</span><br><span class=\"line\">  event.keyCode = <span class=\"number\">0</span>;</span><br><span class=\"line\">  event.cancelBubble = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  $.alert(&#123;<span class=\"attr\">message</span> : <span class=\"string\">\"\"</span>&#125;);</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.event.returnValue = <span class=\"literal\">false</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"FF에서-사용-가능\"><a href=\"#FF에서-사용-가능\" class=\"headerlink\" title=\"FF에서 사용 가능\"></a>FF에서 사용 가능</h4><ul>\n<li>FF에서 Ctrl키값 방지<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"> $(<span class=\"string\">\"input:text\"</span>).keydown(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(evt.keyCode==<span class=\"number\">17</span>)&#123;</span><br><span class=\"line\">   evt.keyCode = <span class=\"number\">0</span>;</span><br><span class=\"line\">   evt.cancelBubble = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"IE-Chrome-FF에서-사용-가능\"><a href=\"#IE-Chrome-FF에서-사용-가능\" class=\"headerlink\" title=\"IE, Chrome, FF에서 사용 가능\"></a>IE, Chrome, FF에서 사용 가능</h4><ul>\n<li><p>마우스 우클릭 방지</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clickIE = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.all) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;  </span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">clickNS = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.layers || (<span class=\"built_in\">document</span>.getElementById &amp;&amp; !<span class=\"built_in\">document</span>.all)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.which==<span class=\"number\">2</span> || e.which==<span class=\"number\">3</span>) &#123;   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;   </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//layer로 감싼 경우는 if문이 들어간다. layer가 아닌 경우 if문 제외하고 captureEvents도 삭제한후 사용.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.layers) &#123;</span><br><span class=\"line\"> <span class=\"built_in\">document</span>.captureEvents(Event.MOUSEDOWN);</span><br><span class=\"line\"> <span class=\"built_in\">document</span>.onmousedown=clickNS;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.onmouseup=clickNS;</span><br><span class=\"line\"> <span class=\"built_in\">document</span>.oncontextmenu=clickIE;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.oncontextmenu=<span class=\"keyword\">new</span> <span class=\"built_in\">Function</span>(<span class=\"string\">\"return false\"</span>);</span><br><span class=\"line\">또는</span><br><span class=\"line\"><span class=\"built_in\">document</span>.onmousedown=clickNS;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.onmouseup=clickNS;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.oncontextmenu=clickIE;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.oncontextmenu=<span class=\"keyword\">new</span> <span class=\"built_in\">Function</span>(<span class=\"string\">\"return false\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>키보드 방지</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">LockF5</span>(<span class=\"params\">e</span>)</span>&#123;   </span><br><span class=\"line\">    <span class=\"keyword\">var</span> key = (e) ? e.keyCode : event.keyCode;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(key==<span class=\"number\">8</span> || key==<span class=\"number\">116</span> || key==<span class=\"number\">78</span> || key==<span class=\"number\">82</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(e)&#123;   <span class=\"comment\">//표준</span></span><br><span class=\"line\">         e.preventDefault();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span>&#123; <span class=\"comment\">//익스용</span></span><br><span class=\"line\">         event.keyCode = <span class=\"number\">0</span>;</span><br><span class=\"line\">         event.returnValue = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.onkeydown = LockF5;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","categories":["Tip's"],"tags":[]},{"title":"Access restriction 해결 방법","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post57/","content":"<ul>\n<li>출처 : <a href=\"http://rosaria1113.blog.me/63117105\" target=\"_blank\" rel=\"noopener\">http://rosaria1113.blog.me/63117105</a></li>\n</ul>\n<p>“Access restriction: Class is not accessible due to restriction on required library” 이란 에러가 발생했을때…</p>\n<ul>\n<li><p>상황</p>\n<ul>\n<li>A plugin에서 B plunin에 대한 접근에 제한이 존재.</li>\n<li>컨트롤 클릭으로 쫓아가지는 상태이나 에러로 인해 빌드가 안됨.</li>\n</ul>\n</li>\n<li><p>해결</p>\n<ul>\n<li>Windows -&gt; Preferences -&gt; Java -&gt; Compiler -&gt; Errors/Warnings</li>\n</ul>\n</li>\n</ul>\n<img src=\"/images/post_images/old-blog-post57-1.png\" title=\"첫번째 이미지\">\n","categories":["Tip's"],"tags":[]},{"title":"The content of elements must consist of well-formed character data or markup","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post56/","content":"<p>iBatis 는 XML 형식이기 때문에 부등호가 들어간 쿼리를 사용할때 에러가 발생한다.<br>The content of elements must consist of well-formed character data or markup.<br>이럴때에는 부등호가 들어간 쿼리를 <strong>&lt;![CDATA[ 쿼리 ]]&gt;</strong> 로 감싸줘야 한다.<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">  <span class=\"keyword\">ROWNUM</span>, no2, writer2, title2,</span><br><span class=\"line\">  regdate2, hit2, contents2, upfile2,</span><br><span class=\"line\">  password2, recommend2, category2</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">  (<span class=\"keyword\">select</span></span><br><span class=\"line\">      <span class=\"keyword\">ROWNUM</span>, no2, writer2, title2, to_char(regdate2,<span class=\"string\">'yyyy-mm-dd'</span>) <span class=\"keyword\">as</span> regdate2,</span><br><span class=\"line\">      hit2, contents2, upfile2, password2, recommend2, category2</span><br><span class=\"line\">   <span class=\"keyword\">from</span> twice_board</span><br><span class=\"line\">   <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> hit2 <span class=\"keyword\">DESC</span></span><br><span class=\"line\">  )</span><br><span class=\"line\"><span class=\"keyword\">where</span> &lt;![CDATA[<span class=\"keyword\">ROWNUM</span>&lt;=<span class=\"number\">3</span>]]&gt;</span><br></pre></td></tr></table></figure></p>\n","categories":["Framework","iBatis"],"tags":[]},{"title":"JSP, Javascript에서 공백 제거시 쓰이는 부분","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post55/","content":"<p>공백 제거가 필요한 value값 뒤에 <code>.replace(/^\\s*|\\s*$/g, &quot;&quot;)</code>를 사용하면 된다.​</p>\n","categories":["Tip's"],"tags":[]},{"title":"이클립스(Eclipse) 단축키 모음","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post54/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/glasslego?Redirect=Log&amp;logNo=30130613006\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/glasslego?Redirect=Log&amp;logNo=30130613006</a></li>\n</ul>\n<h4 id=\"Java-Editor-단축키\"><a href=\"#Java-Editor-단축키\" class=\"headerlink\" title=\"Java Editor 단축키\"></a>Java Editor 단축키</h4><p>Ctrl + Shift + M : 특정 클래스 Import 시키기<br>Ctrl + Shift + O : 자동으로 Import 시키기<br><span style=\"color: #7820b9\"><br>Ctrl + L : 특정 줄 번호로 가기<br>Ctrl + 마우스커서(혹은 F3) : 클래스나 메소드 혹은 멤버를 상세 검색<br>ALT + Left , ALT + Right : 이전, 이후 작업 화면<br>Ctrl + Shift + G : 특정 메소드나 필드를 Reference하고 있는 곳을 검색<br>Ctrl + , or  : 다음 annotation(에러, 워닝, 북마크 가능)으로 점프<br>Ctrl + T : hierarchy 팝업 창 띄우기(인터페이스 구현 클래스간 이동 시 편리)<br>F4 : hierachy view 퍼스펙티브 생성<br>Ctrl + O : 메소드나 필드 이동하기<br>Ctrl + Shift + Down : 클래스 내에서 다음 멤버로 이동<br>F2 : 컴파일 에러의 빨간 줄에 커서를 가져다가 이 키를 누르면 에러의 원인에 대한 힌트를 제공<br>Ctrl + 0 : 클래스 구조를 트리로 보기<br>Ctrl + Shift + T : 클래스 찾기<br>Ctrl + Shift + Space : 메소드의 파라미터 목록 보기<br>(메소드의 괄호 안에 커서를 놓고 이 키를 누르면 파라미터 타입 힌트를 볼 수 있음)<br></span></p>\n<p>Ctrl + K : 찾고자 하는 문자열을 블럭으로 설정한 후 키를 누른다<br>Ctrl + Shift + K : 역으로 찾고자 하는 문자열을 찾아간다<br>Ctrl + J : Incremental find 이클립스 하단 상태 표시줄에 Incremental find 라고 표시되어 한 글자자씩 누를 때 마다 코드내의 일치하는 문자열로 이동, 다시 Ctrl + J 를 누르면 그 문자열과 일치 하는 부분을 위/아래 방향키로 탐색이 가능<br>Ctrl + PageUp , Ctrl + PageDown : Edit 창 좌우 이동 (Edit 창이 여러 개 띄워져 있을 경우 Edit 창간의 이동)</p>\n<p>Ctrl + Shift + F : 코드 자동 정리<br>Ctrl + 1 : Quick Fix 에러가 발생했을 경우 Quick Fix를 통해 쉽게 해결이 가능함<br>Ctrl + Shift + / : 블록 주석<br>Ctrl + Shift + \\ : 블록 주석 제거<br>Ctrl + / : 여러 줄이 한꺼번에 주석 처리됨 (주석 해제하려면 반대로 하면 됨)<br>Alt + Up(Down) : 위(아래)줄과 바꾸기<br>Alt + Shift + UP : 커서를 기준으로 토큰단위 블럭지정<br>Alt + Shift + DOWN : 커서를 기준으로 토큰단위 블럭해제<br>Alt + Shift + 방향키 : 블록 선택하기<br>Alt + Shift + R : Refactoring (이름변경) - Refactoing 으로 전체 소스에서 이름변경에 의한 참조 정보를 변경해 준다<br>Alt + Shift + J : 자동으로 주석 달기 (메소드나 멤버변수에 포커스 두고 실행)<br>Alt + Shift + Z : Surround With 메뉴 (try / catch 문이나 for , do , while 등을 해당 블록에 감싸주는 메뉴가 나타남)<br>Ctrl + Space : 입력 보조장치(Content Assistance) 강제 호출 → 입력하는 도중엔 언제라도 강제 호출 가능함<br>Ctrl + D : 한 줄 삭제<br>Ctrl + W : 파일 닫기<br>Ctrl + I : 들여쓰기 자동 수정<br>Ctrl + Shift + X : 대문자로 변환<br>Ctrl + Shift + Y : 소문자로 변환<br>Ctrl + Shift + L : 모든 단축키의 내용을 표시<br>Ctrl + Shift + B : 현재 커서 라인에 Break point 설정</p>\n<p>Ctrl + F6 : 창간 전환, UltraEdit 나 Editplus 의 Ctrl + Tab 과 같은 기능<br>Ctrl + Shift + F4 : 열린 파일 모두 닫기<br>Ctrl + M : 전체화면 토글<br>Ctrl + Alt + Up(Down) : 한 줄(블럭) 복사</p>\n<p>템플릿 수정 → 환경설정/자바/편집기/템플릿</p>\n<h4 id=\"Window-이동\"><a href=\"#Window-이동\" class=\"headerlink\" title=\"Window 이동\"></a>Window 이동</h4><p>F10 : 메뉴창을 활성화<br>Ctrl + F8 : 다음 Perspective로 이동<br>Ctrl + N : 새로운 파일 및 프로젝트 생성<br>Ctrl + Shift + Down : Java Editor에서 다음 member로 이동<br>Ctrl + F7 : 다음 View로 이동<br>Ctrl + Shift + F7 : 이전 View로 이동<br>Alt + ← : 이전 작업 화면<br>Alt + → : 다음 작업 화면<br>F12 : 컴파일 중 에러 등으로 포커스가 다른 곳으로 갔을 때 Editor 로 커서 이동<br>Ctrl + 1 : 컴파일 에러가 발생한 곳에서 Ctrl + 1을 누를 경우 컴파일 에러에 대한 해결책을 제시</p>\n<h4 id=\"디버깅-단축키\"><a href=\"#디버깅-단축키\" class=\"headerlink\" title=\"디버깅 단축키\"></a>디버깅 단축키</h4><p>Ctrl + Shift + B : 현 커서의 위치에 브레이크 포인터 설정/해제<br>F11 : 디버깅 시작<br>F8 : 디버깅 계속<br>F6 : 한 줄씩 실행(Step Over)<br>F5 : 한 줄씩 실행하되 함수일 경우 그 함수 내부로 들어감(Step Into)<br>Ctrl + R : 현재 라인까지 실행(Run to Line)<br>Ctrl + F11 : 이전에 실행되었던 Run 파일 실행</p>\n<h4 id=\"메소드-쉽게-생성하기\"><a href=\"#메소드-쉽게-생성하기\" class=\"headerlink\" title=\"메소드 쉽게 생성하기\"></a>메소드 쉽게 생성하기</h4><p>Ctrl + Space 하면 템플릿 (환경설정/자바/편집기/템플릿 에서 편집 가능)<br>클래스의 멤버를 일단 먼저 생성한다<br>override 메소드를 구현하려면, 소스→메소드대체/구현 에서 해당 메소드를 체크한다<br>기타 클래스의 멤버가 클래스의 오브젝트라면, 소스→위임메소드 생성에서 메소드를 선택한다</p>\n<h4 id=\"Organize-import\"><a href=\"#Organize-import\" class=\"headerlink\" title=\"Organize import\"></a>Organize import</h4><p>자바파일을 여러 개 선택한 후 소스→가져오기 체계화 해주면 모두 적용됨</p>\n<h4 id=\"소스-코드-형식-및-공통-주석-설정\"><a href=\"#소스-코드-형식-및-공통-주석-설정\" class=\"headerlink\" title=\"소스 코드 형식 및 공통 주석 설정\"></a>소스 코드 형식 및 공통 주석 설정</h4><p>환경설정 → 자바 → 코드 스타일 → 코드 포맷터 → 가져오기 → 프로파일.xml<br>환경설정 → 자바 → 코드 스타일 → 코드 템플릿 → 가져오기 → 템플릿.xml<br>다수의 자바파일에 프로파일을 적용하려면 패키지 탐색기에서 패키지를 선택한 후 소스 → 형식화를 선택하면 됨</p>\n<h4 id=\"에디터-변환\"><a href=\"#에디터-변환\" class=\"headerlink\" title=\"에디터 변환\"></a>에디터 변환</h4><p>에디터가 여러 파일을 열어서 작업 중 일 때 Ctrl + F6 키를 누르면 여러 파일명이 나오고 F6키를 계속 누르면 아래로 Ctrl + Shift + F6 키를 누르면 위로 커서가 움직임<br>Ctrl + F7 : 뷰간 전환<br>Ctrl + F8 : 퍼스펙티브간 전환<br>F12 : 에디터로 포커스 위치</p>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"INNER JOIN시 값이 여러개 나와서 문제일 경우 EXISTS 이용하자.","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post53/","content":"<p>예를 들어..<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> A a</span><br><span class=\"line\"><span class=\"keyword\">inner</span> <span class=\"keyword\">join</span> B b</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<p>일 경우 같은 데이터의 값이 여러개 나와서 문제가 된다면..<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> A a</span><br><span class=\"line\"><span class=\"keyword\">and</span> <span class=\"keyword\">exists</span> (<span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> B b);</span><br></pre></td></tr></table></figure></p>\n<p>이런식으로 해결을 하면 된다.</p>\n","categories":["Tip's"],"tags":[]},{"title":"Tomcat SSL 적용하기","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post52/","content":"<ul>\n<li>출처 : <a href=\"http://devhome.tistory.com/64\" target=\"_blank\" rel=\"noopener\">http://devhome.tistory.com/64</a></li>\n</ul>\n<h4 id=\"TOMCAT-SSL-적용\"><a href=\"#TOMCAT-SSL-적용\" class=\"headerlink\" title=\"TOMCAT SSL 적용\"></a>TOMCAT SSL 적용</h4><p>JDK에 포함된 keytool을 이용하여 Tomcat에 SSL을 적용하는 방법을 소개한다.</p>\n<ol>\n<li><strong>JDK bin 폴더라 이동한다.</strong><br>- %JAVA_HOME%\\bin<br>Ex) Win7의 경우 ‘C:\\Program Files (x86)\\Java\\jdk1.6.0_32\\bin’ 경로에 존재한다. (버전에 따라 상이하다)<br><br></li>\n<li><strong>JDK를 이용해 Tomcat 인증서를 생성한다.</strong><br>- keytool -genkey -alias tomcat -keyalg RSA  <img src=\"/images/post_images/old-blog-post52-1.png\" title=\"첫번째 이미지\">\n<br></li>\n<li><strong>생성된 .keystore 파일 확인</strong><br>- 사용자 홈 폴더에 .keystore 파일이 생성되어 있음<br>- Ex) Win7의 경우 ‘C:\\Users\\사용자계정.keystore’ 위치에 생성되어 있음<br><br></li>\n<li><strong>Tomcat server.xml 설정</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;connector sslprotocol=&quot;TLS&quot; clientauth=&quot;false&quot; keystorepass=&quot;passwd&quot;</span><br><span class=\"line\">keystorefile=&quot;$&#123;user.home&#125;/.keystore&quot; secure=&quot;true&quot; scheme=&quot;https&quot; maxthreads=&quot;150&quot;</span><br><span class=\"line\">sslenabled=&quot;true&quot; protocol=&quot;HTTP/1.1&quot; port=&quot;8443&quot;&gt;&lt;/connector&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><br></p>\n<ol start=\"5\">\n<li><strong>Tomcat 시작 및 SSL 적용확인</strong><br>- https로 개발된 페이지를 접근해 보면됨<br>- Ex) <a href=\"https://localhost:8443\" target=\"_blank\" rel=\"noopener\">https://localhost:8443</a></li>\n</ol>\n","categories":["Server","Apache/Tomcat"],"tags":[]},{"title":"이클립스(Eclipse)에서 SVN ID 변경하는 방법.","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post51/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/ambion/50144389388\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/ambion/50144389388</a></li>\n</ul>\n<p>&lt;첫번째 방법&gt;<br>C:\\Users\\<span style=\"color: #0075c8; font-weight: bold;\">본인컴퓨터이름</span>\\AppData\\Roaming\\Subversion 에 가서 하위 파일들을 지우고 이클립스를 재시작.</p>\n<p>&lt;두번째 방법&gt;<br>통째로 받은 eclipse\\configuration\\org.eclipse.core.runtime 폴더를 보면 .keyring이라는 파일을 삭제후 이클립스 재시작.</p>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"MySQL order by 튜닝(조금 더 실행속도 부분에 있어서 개선)","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post50/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/PostView.nhn?blogId=parkjy76&amp;logNo=30119980421\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/PostView.nhn?blogId=parkjy76&amp;logNo=30119980421</a></li>\n</ul>\n<p>MySQL에서ORDER BY를 하면 실행하는데 시간이 많이 걸립니다.<br>왜 그럴까라고 생각한적이 있을겁니다.<br>저도 ORDER BY에 고민한적이 많습니다.<br>이번에ORDER BY에 대한 튜닝방법을 소개하고싶습니다.</p>\n<p>그 방법은 서브쿼리를 이용하여 소트가 된 테이블을 결합하여 개선하는 방법입니다.</p>\n<p>예를 들어 아래와 같은 SQL문이 있습니다.<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  t1.col1, t2.col2</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  table1 t1,</span><br><span class=\"line\">  table2 t2</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  t1.col1=t2.col1 <span class=\"keyword\">AND</span> t1.col2 = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> t1.col1 <span class=\"keyword\">DESC</span></span><br><span class=\"line\"><span class=\"keyword\">LIMIT</span> <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure></p>\n<p>이것을 아래처럼 t1을 서브쿼리로 소트해서 결합하는 형태입니다.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">  t1.col1, t2.col2</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">  (<span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> table1 <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> col1 <span class=\"keyword\">DESC</span>) t1,</span><br><span class=\"line\">  table2 t2</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">  t1.col1=t2.col1 <span class=\"keyword\">AND</span> t1.col2 = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">LIMIT</span> <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n<p>이와 같은 튜닝이 유효하기 위해서는 다양한 조건이 있기때문에 항상 효과가 있다고는 말할수 없습니다만<br>제가 테스트한 쿼리에서는 using filesort가 없어져 꽤 효과가 있었습니다.<br>효과의 정도가 크다고는 말할수 없지만 수백배였습니다.(진짜?)</p>\n<p>이글을 읽고 느낀점은 mysql의 플래너는 역시 머리가 나쁘다이다.<br>물론 인덱스를 정상적으로 설정했다는 가정에서 말하는거지만 버전에 따라 다를수도 있지만</p>\n<p>postgresql에 비해 역시 플래너가 -_-</p>\n","categories":["DB","MySQL"],"tags":[]},{"title":"sqlplus 에서 자주 쓰는 명령어 모음","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post49/","content":"<ul>\n<li><p>테이블이 어떤것이 있는지 확인할 때</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> tab;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>page와 line사이즈 조절 할때</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> pagesize <span class=\"number\">1500</span>;</span><br><span class=\"line\"><span class=\"keyword\">set</span> linesize <span class=\"number\">1500</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>sqlplus를 이용해 오라클XE 포트번호 변경을 하는 방법</p>\n<ol>\n<li>SQL Plus 실행 : sqlplus /nolog</li>\n<li>Database 접속 : CONNECT SYSTEM/설치할 때 입력한 패스워드</li>\n<li>Port 변경 명령 수행 : EXEC DBMS_XDB.SETHTTPPORT(5000);</li>\n<li>SQL Plus 종료 : exit</li>\n</ol>\n</li>\n</ul>\n","categories":["DB","Oracle"],"tags":[]},{"title":"이클립스 Eclipse Decompiler(JadClipse) 설치","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post48/","content":"<ul>\n<li>출처 : <a href=\"http://sooin01.tistory.com/44\" target=\"_blank\" rel=\"noopener\">http://sooin01.tistory.com/44</a></li>\n</ul>\n<ol>\n<li><p>jad.exe 다운로드<br><a href=\"http://www.varaneckas.com/jad\" target=\"_blank\" rel=\"noopener\">http://www.varaneckas.com/jad</a></p>\n</li>\n<li><p>net.sf.jadclipse_x.x.x.jar (현재 3.3.0 버전이 최신)<br><a href=\"http://sourceforge.net/projects/jadclipse/\" target=\"_blank\" rel=\"noopener\">http://sourceforge.net/projects/jadclipse/</a></p>\n</li>\n<li><p>..\\eclipse\\plugins 폴더 안으로<br>net.sf.jadclipse_3.3.0.jar 파일을 복사 시킨후에 이클립스 다시 껐다가 실행한다.</p>\n</li>\n<li><p>jad 설정<br>Window - Preferences - Java - JadClipse 클릭  </p>\n<img src=\"/images/post_images/old-blog-post48-1.jpg\" title=\"첫번째 이미지\">  \n<p>만약에 Path to decompiler 설정에서 Path에 jad.exe가 잡혀있다면 jad만 쓰면 되지만 그렇지 않은 경우에는 jad.exe 파일이 있는 절대경로를 위와 같이 써줘야 한다.</p>\n</li>\n<li><p>Apply -&gt; OK를 하고 .class파일을 보게 되면 이클립스내에서 .class파일을 확인할 수 있다.</p>\n</li>\n<li><p>추가<br>이클립스 설정은 workspace(소스폴더) 안에 .metadata 이 폴더에 저장되어진다.<br>나중에 이클립스가 버전업되서 이클립스만 바꾸게 되면 jad가 작동안 할 수도 있다.</p>\n</li>\n</ol>\n<p>원인은 결국 못찾았고 새로운 workspace를 생성하여 설정다시 해주면 잘 된다.</p>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"이클립스 JSP 오픈시 페이지 아래 나타나는 visual/source source preview 없애는 법","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post46/","content":"<ul>\n<li>출처 : <a href=\"http://okhun.tistory.com/55\" target=\"_blank\" rel=\"noopener\">http://okhun.tistory.com/55</a></li>\n</ul>\n<p>해결법 :<br>Window -&gt; Preference -&gt; General -&gt; Editors -&gt; File accosiations 에서 *.jsp 선택하시고 JSP Editor 를 default 로 설정</p>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"사용자정의 태그에 관한 예제","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post47/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/judge41?Redirect=Log&amp;logNo=140105480130\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/judge41?Redirect=Log&amp;logNo=140105480130</a></li>\n</ul>\n<p>JSTL로 하려고 했는데, 일단 이거 먼저 ㅎ</p>\n<p>접두어 : extag<br>태그 : copyright<br>출력 내용 : 취업하게 해주세요…제발…<br>TLD 파일 : TestTag.tld<br>태그 핸들러 클래스 : TestTagHandler.java<br>태그 지시어 사용 : exam.jsp  </p>\n<p>[TestTagHandler.java]<br>태그 핸들러 클래스는 태그의 실제 기능을 가진 자바 클래스 파일이다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> taglib;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.jsp.tagext.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//TagSupport 클래스를 상속받아 Handler 클래스를 만든다.</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestTagHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">TagSupport</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//doStartTag() 를 오버라이딩한 메서드로 JSP에서 시작 태그를 만날 때 호출된다.</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">doStartTag</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> JspException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//pageContext로 모든 내장객체를 가져올 수 있다.</span></span><br><span class=\"line\">      JspWriter out = pageContext.getOut();</span><br><span class=\"line\">      out.println(<span class=\"string\">\"취업하게 해주세요...제발...\"</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span>(IOException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//태그에 본문이 없는 경우기 때문에 SKIP_BODY를 리턴한다.</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> SKIP_BODY;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>[TestTag.tld]<br>이클립스를 사용하여 개발할 때 new메뉴를 통해 tld파일을 만들고자 한다면 결코 찾을 수 없을 것이다. 밑에서 설명할께…</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE taglib PUBLIC &quot;-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN&quot;</span><br><span class=\"line\">&quot;http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd&quot; &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;taglib&gt;</span><br><span class=\"line\">&lt;tlib-version&gt;1.2&lt;/tlib-version&gt;</span><br><span class=\"line\">&lt;jsp-version&gt;1.2&lt;/jsp-version&gt;</span><br><span class=\"line\">&lt;short-name&gt;jspbook&lt;/short-name&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;tag&gt;</span><br><span class=\"line\">&lt;name&gt;copyright&lt;/name&gt;</span><br><span class=\"line\">&lt;tag-class&gt;taglib.TestTagHandler&lt;/tag-class&gt;</span><br><span class=\"line\">&lt;body-content&gt;empty&lt;/body-content&gt;</span><br><span class=\"line\">&lt;/tag&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/taglib&gt;</span><br></pre></td></tr></table></figure>\n<p>[exam.jsp]<br><code>&lt;extag:copyright/&gt;</code>이 부분을 작성할 때 반드시 붙여써야 한다.<br> <code>&lt;extag : copyright/&gt;</code>이런 식으로 띄워쓰면 화면에 결과가 나타나지 않는다.<br>(콜론 사이를 항상 띄워쓰는 버릇이 있어 처음에는 결과가 안나오더라…버릇이 무서워 ㄷㄷ)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=&quot;text/html; charset=EUC-KR&quot;%&gt;</span><br><span class=\"line\">&lt;%@ taglib uri=&quot;WEB-INF/tld/TestTag.tld&quot;  prefix=&quot;extag&quot;%&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;사용자 정의 태그&lt;/title&gt;</span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;center&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;h2&gt;&lt;extag:copyright/&gt;&lt;/h2&gt;</span><br><span class=\"line\">    &lt;/center&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>결과화면<br><img src=\"/images/post_images/old-blog-post47-1.jpg\" title=\"첫번째 이미지\"></p>\n","categories":["Tip's"],"tags":[]},{"title":"Union으로 테이블(Table) 결합하여 조회하기","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post45/","content":"<ul>\n<li>출처 : <a href=\"http://lab.cliel.com/284\" target=\"_blank\" rel=\"noopener\">http://lab.cliel.com/284</a></li>\n</ul>\n<p>Union은 두개 이상의 Table을 결합하여 마치 하나의 Table처럼 조회할 수 있도록 합니다. Table을 결합한다는 의미에서는 Join과 비슷하지만 Join과는 전혀 다른 개념이 적용되므로 주의하시기 바랍니다.</p>\n<h3 id=\"Union\"><a href=\"#Union\" class=\"headerlink\" title=\"Union\"></a>Union</h3><p>먼저 다음 두개의 Table을 살펴보겠습니다.<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Select</span> * <span class=\"keyword\">From</span> Person.BusinessEntityAddress</span><br><span class=\"line\"><span class=\"keyword\">Select</span> * <span class=\"keyword\">From</span> Person.BusinessEntityContact</span><br></pre></td></tr></table></figure></p>\n<img src=\"/images/post_images/old-blog-post45-1.jpg\" title=\"첫번째 이미지\">\n<p>위의 두 Table에서 BusinessEntityID열만을 조회하여 보도록 하겠습니다. 이때 Union문을 통해 두 Table을 결합합니다.<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Select</span> BusinessEntityID</span><br><span class=\"line\"><span class=\"keyword\">From</span> Person.BusinessEntityAddress</span><br><span class=\"line\"><span class=\"keyword\">Union</span></span><br><span class=\"line\"><span class=\"keyword\">Select</span> BusinessEntityID</span><br><span class=\"line\"><span class=\"keyword\">From</span> Person.BusinessEntityContact</span><br></pre></td></tr></table></figure></p>\n<img src=\"/images/post_images/old-blog-post45-2.jpg\" title=\"두번째 이미지\">\n<p>위에서 처럼 Union을 통해 각각의 Table을 결합하여 조회하려면 조회하고자 하는 Table의 열 형식이 같아야 합니다.(열의 이름은 상관없습니다.) 단, 형식이 같아야 한다는 조건은 조회하고자 하는 열에만 해당합니다. 조회대상이 아닌 열은 포함되지 않아도 됩니다.<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Select</span> MakeFlag</span><br><span class=\"line\"><span class=\"keyword\">From</span> Production.Product</span><br><span class=\"line\"><span class=\"keyword\">Union</span></span><br><span class=\"line\"><span class=\"keyword\">Select</span> FolderFlag</span><br><span class=\"line\"><span class=\"keyword\">From</span> Production.Document</span><br></pre></td></tr></table></figure></p>\n<img src=\"/images/post_images/old-blog-post45-3.jpg\" title=\"세번째 이미지\">\n<p>이때 조회될때 표시되는 열 이름은 첫번째 Table의 열이름으로 정해지게 됩니다.</p>\n<p>또한 Union사용시 Data정렬순서를 지정하고자 한다면 Union대상의 Table마다 일일이 Order By를 지정해 줄 필요없이 마지막 Table에만 Order By를 지정해 주시면 됩니다.</p>\n<p>위 예제에서 Person.BusinessEntityAddress Table의 행은 19614행이고 Person.BusinessEntityContact Table은 909행이었으나 Union된 결과는 19579행입니다. 결과가 이렇게 되는 이유는 Union을 통해 Table이 결합되면 열값이 같은 경우(조회 대상이 열에 한하여) 중복해서 표시하지 않기 때문입니다.</p>\n<h3 id=\"Union-All\"><a href=\"#Union-All\" class=\"headerlink\" title=\"Union All\"></a>Union All</h3><p>Union을 통해 Table결합하여 조회하는 경우 중복값은 생략하고 결과를 표시하였습니다. 반면 Union All은 모든 테이블의 데이터를 생략없이 전부 조회하게 됩니다.<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">Select</span> BusinessEntityID</span><br><span class=\"line\"><span class=\"keyword\">From</span> Person.BusinessEntityAddress</span><br><span class=\"line\"><span class=\"keyword\">Union</span> <span class=\"keyword\">All</span></span><br><span class=\"line\"><span class=\"keyword\">Select</span> BusinessEntityID</span><br><span class=\"line\"><span class=\"keyword\">From</span> Person.BusinessEntityContact</span><br><span class=\"line\"><span class=\"keyword\">Order</span> <span class=\"keyword\">By</span> BusinessEntityID</span><br></pre></td></tr></table></figure></p>\n<img src=\"/images/post_images/old-blog-post45-4.jpg\" title=\"네번째 이미지\">\n","categories":["Tip's"],"tags":[]},{"title":"백업 임시 테이블 생성시 쿼리문","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post44/","content":"<p>* Create Table <strong>AS</strong> …<br>ex) Create ExamTable AS Select(<del>~</del>);<br>: 실제 운영서버에서 테스트를 해볼시 본 DB를 갖고 update, delete 등을 했다간 큰일나므로.. 같은 열의 이름과 내용을 가진 테이블을 하나 더 만들어 처리를 한다.<br>- 뒤에 Where 1 = 0; 을 추가하면 열만 복사되고 내용은 빈 값으로 만들어진다.</p>\n","categories":["Tip's"],"tags":[]},{"title":"이클립스 Properties Editor 한글 사용 (eclipse 3.7.2)","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post43/","content":"<ul>\n<li>출처 : <a href=\"http://kdarkdev.tistory.com/37\" target=\"_blank\" rel=\"noopener\">http://kdarkdev.tistory.com/37</a></li>\n</ul>\n<p>이클립스의 기본 Properties Editor는 한글로 바로 표현이 안되고 유니코드로 표현되므로 유니코드를 한글로 인식시킬수있는 플러그인이 필요합니다.<br>테스트는 이클립스 3.7.2에서 했으며 이전에 사용하던 3.4, 3.5에서도 이상없이 동작 했습니다.</p>\n<ol>\n<li>이클립스 메뉴의 Help-&gt;Install New Software 클릭</li>\n<li>상단의 Add버튼 클릭후 Name에는 아무이름이나 정하고 Location에는 <a href=\"http://propedit.sourceforge.jp/eclipse/updates\" target=\"_blank\" rel=\"noopener\">http://propedit.sourceforge.jp/eclipse/updates</a> 입력하고 OK 클릭</li>\n<li>목록에 Pending이라는 글이 뜨고 잠시 기다리면 저장소에서 검색된 목록이 뜨는데<br>목록중 가장하단의 PropertiesEditor에 체크하고 next누르고 다음단계에서도 Next누르면서 설치.</li>\n<li>만약 이클립스 3.6이상을 사용중이라면 이클립스 marketplace를 이용하면 더 편하게 설치 할 수 있는데<br>방법은 이 블로그의 <a href=\"http://kdarkdev.tistory.com/36에서\" target=\"_blank\" rel=\"noopener\">http://kdarkdev.tistory.com/36에서</a> find항목의 검색어만 변경하면 되는데 검색어는 properties editor 이고 세번째에 있는 ‘Pe’ 라는 로고를 가진 플러그인을 선택하면 된다.</li>\n</ol>\n<p>- 설치후 이클립스 재시작 후 에도 Properties Editor가 설정 안될경우<br>이클립스 메뉴의 window-preferences-general-Editors-File Associations의 *.properties 찾아서 하단의 Associated editors에 PropertiesEditor를 default로 설정한다.</p>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"자바스크립트의 클로저 (JavaScript's Closure)","url":"https://yeop-blog.github.io/2017/10/01/2017-10-01-old-blog-post42/","content":"<ul>\n<li>출처 : <a href=\"http://blog.javarouka.me/2012/01/javascripts-closure.html\" target=\"_blank\" rel=\"noopener\">http://blog.javarouka.me/2012/01/javascripts-closure.html</a></li>\n</ul>\n<p>자바스크립트를 조금 공부하다보면 바로 맞딱뜨리는 개념중 하나가 클로저 (Closure)라는 개념입니다.<br>클로저는 하늘에서 뚝 떨어진 용어도 아니고 프로그래밍 언어에 있는 용어중 하나로서, 언어마다 조금씩 다른 구현과 특성을 가지고 있는 재미있는 개념이죠.<br>최근엔 자바 7에도 클로저가 추가되었다고 들었네요.</p>\n<p>클로저에 대해 간단히 먼저 정의부터 내려보면, 일종의 어휘적 유효범위(lexical scope)라고 할 수 있는데요.</p>\n<ul>\n<li><strong>코드가 쓰여진 그 상황에 대한 유효범위를 가지는 코드 블록.</strong></li>\n<li><strong>처음 정의되는 시점에서 볼 수 있는 변수들을 실행 위치가 바뀌어도 참조가능.</strong></li>\n<li><strong>생성 당시의 환경을 간직한 있는 코드 블록.</strong></li>\n<li><strong>자신을 생성해준 객체의 변수 유효범위를 사용할 수 있는 코드 블록.</strong></li>\n</ul>\n<p>글로 쓰게 되니 더욱 어렵습니다.<br>위 문장들은 결과적으로는 다 같은 뜻입니다.</p>\n<p>그럼 예제 코드를 보죠.<br>클로저의 예를 들때 많이 예시가 되는 시퀀스 함수입니다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sequencer = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ++s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">seq 함수는 이런 구조를 가지고 반환될 것입니다</span></span><br><span class=\"line\"><span class=\"comment\">function seq() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">    return ++s;</span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> seq = sequencer();</span><br><span class=\"line\"></span><br><span class=\"line\">seq(); <span class=\"comment\">// 1</span></span><br><span class=\"line\">seq(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">seq(); <span class=\"comment\">// 3</span></span><br></pre></td></tr></table></figure>\n<p>보통의 언어라면 말도 안되는 코드입니다.<br>이미 sequencer 내부의 s 변수는 다른 언어로 치면 유효범위를 벗어난 쓸 수 없는 변수입니다. 자바같은 가비지 컬렉터를 가진 언어에서는 바로 가비지 컬렉팅의 대상이 되겠지요.</p>\n<p>그러나 자바스크립트에서는 다릅니다.</p>\n<p>내부 함수는 자신이 선언된 환경에 대해 연결을 갖습니다.<br>그래서 위 예제에서 반환된 함수는 자신이 선언될 때의 환경인 sequencer 의 유효범위에 대한 연결을 갖게 되며, 호출하게 되면 그 연결을 통해 s 변수에 <strong>“직접”</strong> 접근합니다.</p>\n<p>여기서!!!<br>변수를 절대 복사하는게 아님을 유의하세요.<br>변수가 있는 객체( - Variable Object 라고 부릅니다)를 참조하는 것입니다.</p>\n<p>만일 s 변수를 복사했다면 반환되는 값은 항상 1이어야할 것입니다.<br>복사된 변수는 0일테고, 그것에 대해 1이 증가한 값을 반환할 테니까요.</p>\n<p>잘 이해가 안되시면 클로저 설명시 자주 언급되는 함수 그 두번째인 클릭시 자신의 순서를 반환하는 핸들러를 붙이는 예제를 봅시다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 모든 LI 태그를 가져와서,</span></span><br><span class=\"line\"><span class=\"comment\">// 클릭시 자신의 순번을 표시하는 예제(?)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> items = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"li\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; items.length; i++) &#123;</span><br><span class=\"line\">    items[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">\"My Sequence is \"</span> + (i+<span class=\"number\">1</span>)); <span class=\"comment\">// 자신의 순번 출력</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>여기서 프로그래머가 기대한 값은 <code>&lt;LI&gt;</code>태그를 클릭할 때 자신이 문서에 사용된 순서를 출력하는 것일 겁니다. 그러나 여기서 출력하는 값은 LI의 제일 제일 마지막 순번의 값에 1을 더한 값만이 출력됩니다.</p>\n<p>만일 문서의 LI 태그가 4개라면 5만을 출력할 것입니다.</p>\n<p>값이 복사된 것이 아닌 <strong>변수에 직접 접근</strong> 하고 있기 때문입니다.<br>for문이 종료되는 시점의 i값은 4이며, 핸들러들은 그것에 직접 접근하여 1을 더한 값만을 출력하게 되는 것이죠.</p>\n<p>위의 함수가 제대로 동작하도록 고쳐봅시다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> items = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"li\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; items.length; i++) &#123;    </span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;   <span class=\"comment\">// 새로운 스코프 선언</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> idx = i; <span class=\"comment\">// 클로저가 접근할 변수 선언</span></span><br><span class=\"line\">        items[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">\"My Sequence is \"</span> + (idx+<span class=\"number\">1</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>이렇게 고쳐 쓰면 원하는대로 동작합니다.<br>이벤트 함수인 클로저가 참조하는 대상이 i가 아닌 새로운 스코프의 idx가 되었기 때문이죠.<br>(어렵게 말한다면, 실행 컨텍스트의 스코프 체인 탐색 방법에 따라 참조 순위에서 변수 i는 뒤로 밀립니다)</p>\n<p>익명 함수를 쓰는게 좀 어색해 보일 수 있겠지만 자바스크립트에서는 저것이 명시적으로 블럭 스코프를 선언하는 방법입니다.</p>\n<p>클로저가 막강한 문법이긴 하나, 주의할 점이 있습니다.<br>함수가 메서드로 호출될 때, 외부 함수의 특수한 변수들인 <strong>this</strong>와 <strong>arguments</strong>에는 정상적인 접근이 되지 않습니다.<br>정확히는 접근이 되나 저 둘에 대해서는 메서드를 소유한 객체의 <strong>this</strong> 에 연결되지 못합니다.</p>\n<p>아래 코드를 봅시다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.name = <span class=\"string\">\"window\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> object = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"object\"</span>,</span><br><span class=\"line\">    getName: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">findName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"my name is \"</span> + <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> findName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">object.getName(); <span class=\"comment\">// my name is window.</span></span><br></pre></td></tr></table></figure>\n<p>위의 코드는 의도와는 다른 동작을 보입니다.<br><span style=\"color: red; font-weight: bold;\">my name is object</span> 가 아닌 <span style=\"color: red; font-weight: bold;\">my name is window</span> 가 출력됩니다.</p>\n<p>메서드 내부의 함수가 실행될 때 this가 메서드를 소유한 객체에 연결된 것이 아닌, 글로벌 객체에 연결되었기 때문입니다. 난감한 결과입니다.</p>\n<p>더글라스 크락포드는 이러한 동작을 보고 아래처럼 한마디 했죠.</p>\n<blockquote>\n<p>이건 명백히 설계상의 실수라고 할 수 있습니다.<br> - 더글라스 크락포드</p>\n</blockquote>\n<p>내부 함수가 외부 함수를 돕지 못하다니…<br>하지만 걱정하지 않아도 됩니다. 보통 이런 경우 관습적으로 사용하는 용법이 있습니다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 위 코드에서 getName 부분입니다</span></span><br><span class=\"line\">getName: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>; <span class=\"comment\">// this를 따로 변수에 할당해둬 내부 함수가 접근 가능하도록 한다.</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">findName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"my name is \"</span> + that.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> findName();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>이렇게 this를 따로 변수에 할당해 두는 방법입니다.<br>이렇게 하면 자신의 이름이 잘 출력됩니다.</p>\n<p>여기까지 읽고 머리가 좋으시거나, 자바스크립트의 스코프에 잘 이해하고 계신 분이라면 한가지를 알 수 있을거라 생각합니다.</p>\n<p>그렇습니다.</p>\n<p><strong>자바스크립트의 모든 함수는 클로저입니다.</strong></p>\n<p>클로저를 잘 익히고 사용할 줄 알아야 자바스크립트를 좀더 유연하게 다룰 수 있습니다.<br>언어적 특성을 잘 이해하고 다룰 수 있으면 자바스크립트 코딩이 더욱 재미있어질 거라고 생각합니다.</p>\n<p>…<br>…<br>…  </p>\n<p>이대로 끝내긴 좀 아쉬우니 클로저에 대해 한마디 덧붙입니다.<br>클로저는 이러한 유연성과 활용의 유연성 등 많은 강점을 가지고 있지만, 그것에 가려진 안좋은 점도 상당합니다.</p>\n<p>클로저의 안좋은 점에 대해서는 <a href=\"http://blog.javarouka.me/2012/01/closure.html\" target=\"_blank\" rel=\"noopener\">다음 포스팅</a>에 하도록 해보겠습니다.</p>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"브라우저 \"닫기\" 버튼 만들기 (window.close, self.close 관련)","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post41/","content":"<ul>\n<li>출처 : <a href=\"http://happyjung.com/gnuboard/bbs/board.php?bo_table=lecture&amp;wr_id=608&amp;sca=JavaScript\" target=\"_blank\" rel=\"noopener\">http://happyjung.com/gnuboard/bbs/board.php?bo_table=lecture&amp;wr_id=608&amp;sca=JavaScript</a></li>\n</ul>\n<p>홈페이지에서 공지사항이나 이벤트와 같은 창이 열리고, 그 창에서 “닫기” 버튼을 클릭하면 창이 사라지는 기능입니다.</p>\n<ol>\n<li><p>History 활용<br>정상 : IE 11<br>작동안함 : FireFox 36.0, Chrome 4.0.22  </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">&lt;!--</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">closeWin</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">var</span> nvua = navigator.userAgent;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">if</span> (nvua.indexOf(<span class=\"string\">'MSIE'</span>) &gt;= <span class=\"number\">0</span>)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">if</span>(nvua.indexOf(<span class=\"string\">'MSIE 5.0'</span>) == <span class=\"number\">-1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">top.opener = <span class=\"string\">''</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"javascript\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nvua.indexOf(<span class=\"string\">'Gecko'</span>) &gt;= <span class=\"number\">0</span>)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">top.name = <span class=\"string\">'CLOSE_WINDOW'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">wid = <span class=\"built_in\">window</span>.open(<span class=\"string\">''</span>,<span class=\"string\">'CLOSE_WINDOW'</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">top.close();</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">// --&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"javascript:history.onclick=closeWin();\"</span>&gt;</span>닫기<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>A링크 활용<br>정상 : IE 11, FireFox 37.0.2, Chrome 42.0.23</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"javascript:window.close()\"</span>&gt;</span>창닫기<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"javascript:self.close();\"</span>&gt;</span>닫기<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>버튼 클릭으로 창 닫기<br>정상 : IE 11<br>작동안함 : FireFox 36.0, Chrome 42.0.232  </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"창닫기\"</span> <span class=\"attr\">onClick</span>=<span class=\"string\">\"window.close()\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"창닫기\"</span> <span class=\"attr\">onClick</span>=<span class=\"string\">\"window.open('','_self').close();\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>프레임셋 문서를 이미지클릭으로 닫기</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"javascript:top.window.close()\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"../close.gif\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>프레임셋 문서 전체닫기</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:top.window.close()\"</span>&gt;</span>창닫기<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>프레임셋 문서를 버튼클릭으로 닫기</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"창닫기\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"top.window.close()\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>부모창 닫기</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"javascript:parent.close();\"</span>&gt;</span>닫기<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>&lt; 참고자료 &gt;<br><a href=\"http://www.ddalchi.co.kr/ddart/cgi-bin/ddbread.cgi?db=bbs_06&amp;anum=39&amp;page=1\" target=\"_blank\" rel=\"noopener\">http://www.ddalchi.co.kr/ddart/cgi-bin/ddbread.cgi?db=bbs_06&amp;anum=39&amp;page=1</a><br><a href=\"http://www.dbinfo.co.kr/bbs/board.php?bo_table=dbinfo_html_javascri&amp;wr_id=31\" target=\"_blank\" rel=\"noopener\">http://www.dbinfo.co.kr/bbs/board.php?bo_table=dbinfo_html_javascri&amp;wr_id=31</a><br><a href=\"http://luvbaby.tistory.com/96\" target=\"_blank\" rel=\"noopener\">http://luvbaby.tistory.com/96</a></p>\n","categories":["Tip's"],"tags":[]},{"title":"USB메모리 NTFS방식으로 포맷하기","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post40/","content":"<p>- 아래 순서대로 진행하면 된다 끗.</p>\n<img src=\"/images/post_images/old-blog-post40-1.png\" title=\"첫번째 이미지\">\n<p><br><br><img src=\"/images/post_images/old-blog-post40-2.png\" title=\"두번째 이미지\"><br><br><br><img src=\"/images/post_images/old-blog-post40-2.png\" title=\"세번째 이미지\"></p>\n","categories":["Tip's"],"tags":[]},{"title":"영문 숫자 조합 스크립트(비밀번호 영문+숫자 조합 체크할경우)","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post39/","content":"<ul>\n<li>출처 : <a href=\"http://bausluv.blog.me/60146430648\" target=\"_blank\" rel=\"noopener\">http://bausluv.blog.me/60146430648</a></li>\n</ul>\n<p>ASP 에서 정규식으로 체크 하려다가 예외의 경우가 있길래 스크립트 함수로 만들어 체크 하는걸 정규식으로 만들어보았습니다.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 비밀번호 조합</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CheckPass</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> reg1 = <span class=\"regexp\">/^[a-z0-9]&#123;7,14&#125;$/</span>;    <span class=\"comment\">// a-z 0-9 중에 7자리 부터 14자리만 허용 한다는 뜻이구요</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> reg2 = <span class=\"regexp\">/[a-z]/g</span>;    </span><br><span class=\"line\">   <span class=\"keyword\">var</span> reg3 = <span class=\"regexp\">/[0-9]/g</span>;</span><br><span class=\"line\">   <span class=\"keyword\">return</span>(reg1.test(str) &amp;&amp;  reg2.test(str) &amp;&amp; reg3.test(str));</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>정규식을 이용하여 각 패턴별로 true or false 를 반환 합니다.</p>\n<p>함수 넣으시고 체크 하실때는 폼체크 하시면서~<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(CheckPass(form.passwd.value) == <span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"비밀번호는 영문 숫자 조합 7자리 이상입니다.\"</span>);   <span class=\"comment\">// 넣고 싶은 메세지 넣으시면 됩니다~</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"ORA-01861:literal does not match format string 에러 해결법","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post38/","content":"<ul>\n<li>출처 : <a href=\"http://blog.naver.com/kkh2004?Redirect=Log&amp;logNo=120145122658\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/kkh2004?Redirect=Log&amp;logNo=120145122658</a></li>\n</ul>\n<p>조건절 WHERE <span style=\"color: red\">TO_CHAR</span>(START_DATE,”YYYY-MM-DD”) = <span style=\"color: red\">TO_DATE</span>(“2007-08-31”,”YYYY-MM-DD”)<br>이부분에서 왼쪽은 char타입 오른쪽은 date타입..</p>\n<p>일반적으로 토드에서는 실행되지만 자바 또는 다른 응용프로그램에서는 에러발생할 수 있음<br>그래서 조건절에서는 둘다 같은 타입으로 변경해줘함.</p>\n<hr>\n<p>JDBC를 통한 SQL Insert 를 할경우 다음과 같은 에러 메시지가 발생한다.<br>java.sql.SQLDataException: ORA-01861: literal does not match format string(스트링이 형식에 맞지 않는다….)</p>\n<p>TOAD나 Orange등 DB Tool을 사용하여 SQL Insert 할경우는 정상이다</p>\n<p>이런 경우, 사용하는 WAS 계정의 .profile에 한글설정이 제대로 안된 경우가 대부분이다.<br>.profile에 아래와 같이 한글 캐릭터셋 설정부분 추가후 WAS를 재기동 해주면 문제는 깨끗이 해결된다</p>\n<p><strong># TESTSvr#]  ./.profile (.profile 적용)</strong><br><strong># TESTSvr#] vi .profile</strong><br><span style=\"color: red; font-weight: bold;\">export LANG=ko_KR.eucKR</span></p>\n<p>크론탭일 경우 굳이 was를 재기동 안해주고 실행되는 bat파일에 <span style=\"color: red\">export LANG=ko_KR.eucKR</span> 만 추가 시켜도 됨</p>\n","categories":["DB","Oracle"],"tags":[]},{"title":"윈도우7 관리자권한 묻지 않게 하기","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post37/","content":"<p>- 제어판 &gt; 시스템 및 보안 으로 가면 다음과 같은 화면을 볼 수 있다.</p>\n<img src=\"/images/post_images/old-blog-post37-1.png\" title=\"첫번째 이미지\">\n<p>위처럼 사용자 계정 컨트롤 설정 변경을 클릭하면 아래와 같이 나온다.</p>\n<img src=\"/images/post_images/old-blog-post37-2.png\" title=\"두번째 이미지\">\n<p>위 그림처럼 알리지 않음까지 단계를 낮춘다음에 확인을 누르면 다음부터는 권한을 묻지 않고 바로 실행이 가능하다.</p>\n","categories":["Tip's"],"tags":[]},{"title":"프로토콜(Protocol)의 종류","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post36/","content":"<h5 id=\"프로토콜\"><a href=\"#프로토콜\" class=\"headerlink\" title=\"프로토콜\"></a>프로토콜</h5><ul>\n<li><p>통신규약이라는 뜻.. 이런이런방식으로 대화하자는 약속..대화방법..</p>\n</li>\n<li><p><strong>DHCP</strong>(Dynamic Host Configuration Protocol)<br>다이나믹 호스트 컨피규어 프로토콜<br>사용자가 많은 환경에서 자동으로 ip를 할당해주어 관리를 편하게 해주며<br>ip한계를 도와주는 프로토콜<br>영구적인 IP 주소를 필요로 하는 웹서버에 대해서는 정적인 주소를 제공한다.</p>\n</li>\n<li><p><strong>SSL</strong>(Secure Socket Layer)<br>시큐어 소켓 레이어<br>네트워크 내에서 메시지 전송의 안전을 관리하기 위해 만들어진 프로그램 계층.<br>전자상거래 등의 보안을 위해 개발되었다.</p>\n</li>\n<li><p><strong>TLS</strong>(Transport Layer Security)<br>트랜스포트 레이어 시큐어리티<br><strong>SSL</strong>의 뒤를 잇는 표준.</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p><strong>HTTP</strong>(<strong>H</strong>yper<strong>T</strong>ext <strong>Transfer Protocol</strong>) : 사용포트 <strong>80</strong><br>하이퍼텍스트 트랜스퍼 프로토콜….<br><strong>웹(인터넷)</strong>상에서 정보를 주고받기 위한 프로토콜(대화방법).</p>\n</li>\n<li><p><strong>HTTPS</strong>(<strong>S</strong>ecure <strong>H</strong>yper<strong>T</strong>ext <strong>Transfer Protocol</strong>): 사용포트 <strong>443</strong><br>시큐어 하이퍼텍스트 트랜스퍼 프로토콜<br>소켓 통신에서 일반 텍스트를 이용하는 대신에, <strong>SSL</strong>이나 <strong>TLS</strong> 프로토콜을 통해 세션 데이터를 암호화한다.<br>따라서 데이터의 적절한 보호를 보장한다.<br>전자상거래에 널리 쓰인다.</p>\n</li>\n<li><p><strong>FTP</strong>(<span style=\"color: #009e25; font-weight: bold;\">File Transfer Protocol</span>) : 사용포트 <strong>21</strong><br>파일 트랜스퍼 프로토콜…..<br>파일 업로드 다운로드를 목적으로 하는 프로토콜(대화방법).</p>\n</li>\n<li><p><span style=\"color: #ef007c; font-weight: bold;\">S</span><strong>FTP</strong>(<strong>S</strong>ecure <span style=\"color: #009e25; font-weight: bold;\">File Transfer Protocol</span>): 사용포트 <strong>22</strong><br>시큐어 파일 트랜스퍼 프로토콜…..<br>보안FTP…..일반적인 FTP와 달리 데이터 전송시 암호화 하는 프로토콜(대화방법).</p>\n</li>\n<li><p><span style=\"color: #ef007c; font-weight: bold;\">T</span><strong>FTP</strong>(<strong>T</strong>rivial <span style=\"color: #009e25; font-weight: bold;\">File Transfer Protocol</span>): 연결포트는 <strong>UDP 69</strong>, 데이터 전송은 <strong>UDP 1390</strong><br>트리비얼 파일 트랜스퍼 프로토콜…..<br>하찮은FTP…..-_-;;;; 왜냐…. FTP보다 기능이 조금 덜해서…..<br>디렉토리를 보여주지 않아도 되는곳에 사용….. ㅋㅋㅋ 하찮은 녀석…..</p>\n</li>\n</ul>\n","categories":["Language"],"tags":[]},{"title":"윈도우 탐색기에서 우측 클릭으로 바로 cmd창 실행하기","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post35/","content":"<ul>\n<li>출처 : <a href=\"http://sojiyoung.tistory.com/28\" target=\"_blank\" rel=\"noopener\">http://sojiyoung.tistory.com/28</a></li>\n</ul>\n<p>개발하다 보면 Windows에서 콘솔창을 자주 사용하게 된다.<br>콘솔창을 ‘시작’-&gt;’실행’-&gt;’cmd’로 호출하게 되면 처음 실행되는 디렉토리가 고정되어 있어서 매번 ‘cd’명령어로 디렉토리 이동을 해줘야 하는 불편함이 있다.</p>\n<p>아래 레지스트리는 탐색기에서 폴더에서 우측 버튼을 눌러 ‘cmd’를 호출하는 레지스트리다.<br>이렇게 실행된 콘솔창은 경로가 폴더의 경로로 되어 있어서 매번 ‘cd’명령어로 디렉토리 이동을 하지 않아도 되어 편리하다.</p>\n<p>이런 방법은 google에서 ‘Command Prompt Here’로 검색해도 무수히 많이 나오는데, 레지스트리 이용 방법은 다 비슷하다.<br>오래전에 어디선가 다운받아 사용 하던것인데 가독성을 높이려고 메뉴 내용을 한글로 바꾸었다.</p>\n<p><a href=\"https://yeop-blog.github.io/downloads/CmdContextInstall.zip\">CmdContextInstall.reg 다운로드</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REGEDIT4</span><br><span class=\"line\">; 탐색기에서 폴더 선택하고 이 경로에 도스창을 연다.-설치버전</span><br><span class=\"line\">; 윈도2000, NT: &quot;%SystemRoot%\\system32\\cmd.exe&quot; /k cd /d &quot;%1&quot;의 경로에서 CMD.EXE를 찾는다.</span><br><span class=\"line\">; 윈도 2000에서 테스트 되었고 다른 OS에서는 적절히 고쳐서 쓰면 될것.[HKEY_CLASSES_ROOT\\Folder\\shell\\Command Prompt Here]</span><br><span class=\"line\">@=&quot;CMD(도스창) 열기&quot;[HKEY_CLASSES_ROOT\\Folder\\shell\\Command Prompt Here\\command]</span><br><span class=\"line\">@=hex(2):22,25,53,79,73,74,65,6d,52,6f,6f,74,25,5c,73,79,73,74,65,6d,33,32,5c,\\</span><br><span class=\"line\">63,6d,64,2e,65,78,65,22,20,2f,6b,20,63,64,20,2f,64,20,22,25,31,22,00</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://yeop-blog.github.io/downloads/CmdContextUnInstall.zip\">CmdContextUnInstall.reg 다운로드</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">REGEDIT4</span><br><span class=\"line\">; 탐색기에서 폴더 선택하고 이 경로에 도스창을 연다. - 삭제버전</span><br><span class=\"line\">; 윈도2000, NT: &quot;%SystemRoot%\\system32\\cmd.exe&quot; /k cd /d &quot;%1&quot;의 경로에서 CMD.EXE를 찾는다.</span><br><span class=\"line\">; 윈도 2000에서 테스트 되엇고 다른 OS에서는 적절히 고쳐서 쓰면 될것.</span><br><span class=\"line\"></span><br><span class=\"line\">[-HKEY_CLASSES_ROOT\\Folder\\shell\\Command Prompt Here]</span><br></pre></td></tr></table></figure>\n","categories":["Tip's"],"tags":[]},{"title":"이클립스(Eclipse) XML 및 코드 자동정렬하기","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post34/","content":"<ul>\n<li>출처 : <a href=\"http://arabiannight.tistory.com/16\" target=\"_blank\" rel=\"noopener\">http://arabiannight.tistory.com/16</a></li>\n</ul>\n<p>이클립스를 사용 할 때 XML 및 코드 정리를 할때 매 번 엔터를 치거나 일일이 정렬 해야 할 경우가 있습니다. 무척 번거롭지요..</p>\n<p>이클립스에서는 이러한 부분을 위해 자동정렬을 지원해 주는데요.<br>이미 알고 계신 분들도 있겠지만, 정렬 작업시 불편함을 느끼신 분들은 참고 하시기 바랍니다.</p>\n<p><strong>Eclipse &gt; Preference &gt; XML &gt; XML Files &gt; Editors’ 에서<br>‘Split multiple attributes eash on a new line’ 을 체크한다.<br>XML 파일을 열고, Ctrl + A ( 전체 선택 ), Ctrl + i ( 자동 정렬 )</strong></p>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"출처 위주 포스팅 모음","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-tips/","content":"<ul>\n<li><p>Tomcat 윈도우7에서 톰캣 액세스 문제 - Unable to open the service<br><a href=\"http://ishyeok.tistory.com/40\" target=\"_blank\" rel=\"noopener\">http://ishyeok.tistory.com/40</a></p>\n</li>\n<li><p>크롬에서 글자가 깨지는 경우 인코딩설정과 글자폰트설정 방법<br><a href=\"http://rdsong.com/513\" target=\"_blank\" rel=\"noopener\">http://rdsong.com/513</a></p>\n</li>\n<li><p>안드로이드 이클립스 프로젝트에 X 표시(에러) 발생시 확인 사항<br><a href=\"http://dcmru.tistory.com/2510992\" target=\"_blank\" rel=\"noopener\">http://dcmru.tistory.com/2510992</a></p>\n</li>\n<li><p>MSSQL과 Oracle함수 비교<br>- 출처 : <a href=\"http://blog.naver.com/reomereome?Redirect=Log&amp;logNo=40119053027\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/reomereome?Redirect=Log&amp;logNo=40119053027</a><br>- 원본출처 : <a href=\"http://www.sqler.com/269782\" target=\"_blank\" rel=\"noopener\">http://www.sqler.com/269782</a> , <a href=\"http://www.sqler.com/270809\" target=\"_blank\" rel=\"noopener\">http://www.sqler.com/270809</a> , <a href=\"http://www.sqler.com/316811\" target=\"_blank\" rel=\"noopener\">http://www.sqler.com/316811</a></p>\n</li>\n<li><p>클로져(Closure) 사용에는 주의가 필요합니다.<br><a href=\"http://blog.javarouka.me/2012/01/closure.html\" target=\"_blank\" rel=\"noopener\">http://blog.javarouka.me/2012/01/closure.html</a></p>\n</li>\n<li><p>INNER JOIN &amp; OUTER JOIN의 차이<br><a href=\"http://isstory83.tistory.com/57\" target=\"_blank\" rel=\"noopener\">http://isstory83.tistory.com/57</a></p>\n</li>\n<li><p>Windows 7 64bit : MySql 설치하기<br><a href=\"http://blog.naver.com/goldrushing?Redirect=Log&amp;logNo=130147912701\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/goldrushing?Redirect=Log&amp;logNo=130147912701</a></p>\n</li>\n<li><p>MySQL 접속 및 데이터베이스 생성 및 삭제<br><a href=\"http://kch1183.blog.me/50100270327\" target=\"_blank\" rel=\"noopener\">http://kch1183.blog.me/50100270327</a></p>\n</li>\n<li><p>SSD 초기화 하는 방법<br><a href=\"http://www.parkoz.com/zboard/view.php?id=my_tips&amp;no=14807\" target=\"_blank\" rel=\"noopener\">http://www.parkoz.com/zboard/view.php?id=my_tips&amp;no=14807</a></p>\n</li>\n<li><p>오라클(Oracle) 페이징 기법<br><a href=\"http://blog.naver.com/korekiss/20035504181\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/korekiss/20035504181</a></p>\n</li>\n<li><p>MSSQL 2005 DTS 사용하기<br><a href=\"http://infomercial.tistory.com/180\" target=\"_blank\" rel=\"noopener\">http://infomercial.tistory.com/180</a></p>\n</li>\n<li><p>MSSQL DB 백업 및 복원 방법<br><a href=\"http://blog.naver.com/PostView.nhn?blogId=82hyde&amp;logNo=90047895423&amp;categoryNo=93&amp;viewDate=&amp;currentPage=1&amp;listtype=0​\" target=\"_blank\" rel=\"noopener\">http://blog.naver.com/PostView.nhn?blogId=82hyde&amp;logNo=90047895423&amp;categoryNo=93&amp;viewDate=&amp;currentPage=1&amp;listtype=0​</a></p>\n</li>\n<li><p>텍스트 에디터 Atom(아톰)의 설치와 기본설정<br><a href=\"http://dovetail.tistory.com/62\" target=\"_blank\" rel=\"noopener\">http://dovetail.tistory.com/62</a></p>\n</li>\n</ul>\n","categories":["Tip's"],"tags":[]},{"title":"DB LOCK 걸린것을 확인하는 쿼리문","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post33/","content":"<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span>   </span><br><span class=\"line\">    username un, osuser ou, s.SID <span class=\"keyword\">SID</span>, s.serial<span class=\"comment\"># ser, l.TYPE ty,</span></span><br><span class=\"line\">         <span class=\"keyword\">DECODE</span> (lmode,</span><br><span class=\"line\">                 <span class=\"number\">1</span>, <span class=\"string\">'NONE'</span>,</span><br><span class=\"line\">                 <span class=\"number\">2</span>, <span class=\"string\">'RS'</span>,</span><br><span class=\"line\">                 <span class=\"number\">3</span>, <span class=\"string\">'RX'</span>,</span><br><span class=\"line\">                 <span class=\"number\">4</span>, <span class=\"string\">'S'</span>,</span><br><span class=\"line\">                 <span class=\"number\">5</span>, <span class=\"string\">'RSX'</span>,</span><br><span class=\"line\">                 <span class=\"number\">6</span>, <span class=\"string\">'X'</span></span><br><span class=\"line\">                ) mh,</span><br><span class=\"line\">         o.NAME ob, id1,</span><br><span class=\"line\">         <span class=\"keyword\">DECODE</span> (request,</span><br><span class=\"line\">                 <span class=\"number\">1</span>, <span class=\"string\">'NONE'</span>,</span><br><span class=\"line\">                 <span class=\"number\">2</span>, <span class=\"string\">'RS'</span>,</span><br><span class=\"line\">                 <span class=\"number\">3</span>, <span class=\"string\">'RX'</span>,</span><br><span class=\"line\">                 <span class=\"number\">4</span>, <span class=\"string\">'S'</span>,</span><br><span class=\"line\">                 <span class=\"number\">5</span>, <span class=\"string\">'RSX'</span>,</span><br><span class=\"line\">                 <span class=\"number\">6</span>, <span class=\"string\">'X'</span></span><br><span class=\"line\">                ) mr</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> v$<span class=\"keyword\">lock</span> l, v$<span class=\"keyword\">session</span> s, SYS.obj$ o</span><br><span class=\"line\">   <span class=\"keyword\">WHERE</span> l.SID = s.SID <span class=\"keyword\">AND</span> l.id1 = o.obj<span class=\"comment\">#(+) AND username IS NOT NULL</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">SID</span></span><br></pre></td></tr></table></figure>\n","categories":["DB","Etc"],"tags":[]},{"title":"자주 쓰는 MySQL 명령어 정리","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post32/","content":"<p><strong># root암호설정 - root로 로그인하여 해야함</strong><br>% mysqladmin -u root password ‘변경암호’<br>% mysqladmin -u root -p기존암호 password ‘변경암호’  </p>\n<p><strong>root암호변경설정</strong><br>PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !<br>This is done with:<br>/usr/bin/mysqladmin -u root -p password ‘new-password’<br>/usr/bin/mysqladmin -u root -h ns.moyiza.net -p password ‘new-password’</p>\n<p><strong>DB작업</strong><br>DB생성: mysql&gt; create database DB명 ( or % mysqladmin -u root -p create DB명 )<br>DB삭제: mysql&gt; drop database DB명<br>DB사용: mysql&gt; use DB명 (엄밀히 말하자면, 사용할 ‘default database’를 선택하는 것이다.)<br>DB변경: mysql&gt; alter database db명 DEFAULT CHARACTER SET charset (4.1이상에서만 available)</p>\n<p><strong>MySQL 연결</strong><br>mysql -u 사용자 -p DB명 ( or % mysqladmin -u root -p drop DB명 )</p>\n<p><strong>데이터파일 실행(sql*loader기능)</strong><br>mysql&gt;load data infile “데이터파일” into table 테이블명 ;<br>데이터파일에서 컬럼구분은 탭문자, Null값은 /n로 입력<br>데이터파일의 위치는 /home/kang/load.txt 와 같이 절대경로로 지정할것.</p>\n<p><strong>질의 파일 실행</strong><br>쉘프롬프트상에서<br>mysql -u 사용자 -p DB명 &lt; 질의파일<br>or<br>mysql프롬프트상에서<br>mysql&gt; source 질의파일  </p>\n<p><strong>쉘프롬프트상에서 질의 실행</strong><br><code>moyiza@nero board]$ mysql mysql -u root -pxxxx -e</code><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> db <span class=\"keyword\">VALUES</span>(</span><br><span class=\"line\"><span class=\"string\">'localhost'</span>, <span class=\"string\">'aaa'</span>, <span class=\"string\">'aaa'</span>,</span><br><span class=\"line\"><span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>, <span class=\"string\">'Y'</span>)</span><br></pre></td></tr></table></figure></p>\n<p><strong>사용자 생성 &amp; 사용자에게 DB할당</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell&gt; mysql --user=root -p mysql  </span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; INSERT INTO user VALUES(&apos;localhost&apos;,&apos;사용자&apos;,PASSWORD(&apos;비밀번호&apos;),&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;);</span><br><span class=\"line\">mysql&gt; INSERT INTO user VALUES(&apos;%&apos;,&apos;사용자&apos;,PASSWORD(&apos;비밀번호&apos;),&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; INSERT INTO db(Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Drop_priv) VALUES (&apos;localhost&apos;,&apos;DB명&apos;,&apos;사용자&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;);</span><br><span class=\"line\">mysql&gt; INSERT INTO db(Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Drop_priv) VALUES(&apos;%&apos;,&apos;DB명&apos;,&apos;사용자&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES; (or shell prompt: mysqladmin -u root -pxxxx reload)</span><br></pre></td></tr></table></figure></p>\n<p><strong>CASE 2: GRANT명령을 이용한 사용자 생성(이 방법이 권장된다)</strong><br>kang이라는 DB를 만들고, 이 DB를 아래에서 나열된 권한을 가진 kang이라는 사용자를 생성<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database kang;</span><br><span class=\"line\">grant SELECT,INSERT,UPDATE,DELETE,CREATE,DROP on kang.* to kang@localhost identified by &apos;kang&apos;;</span><br><span class=\"line\">grant SELECT,INSERT,UPDATE,DELETE,CREATE,DROP on kang.* to kang@&apos;%&apos; identified by &apos;kang&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create database kang;</span><br><span class=\"line\">Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; grant SELECT,INSERT,UPDATE,DELETE,CREATE,DROP on kang.* to kang@localhost identified by &apos;kang&apos;;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; grant SELECT,INSERT,UPDATE,DELETE,CREATE,DROP on kang.* to kang@&apos;%&apos; identified by &apos;kang&apos;;</span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure></p>\n<p><strong>여러가지 명령정리</strong><br><code>mysql&gt; show variables;</code><br>: 서버의 variables(설정사항)출력<br><code>mysql&gt; show variables like &#39;have_inno%&#39;;</code><br>: 조건에 맞는 variables만 출력<br><code>mysql&gt; show databases;</code><br>: database목록<br><code>mysql&gt; show tables;</code><br>: 현재DB의 테이블목록(temporary table은 출력하지 않음)<br><code>mysql&gt; show tables from db명;</code><br>: 지정된 db명이 소유한 테이블목록<br><code>mysql&gt; show tables like &#39;mem%&#39;;</code><br>: 조건에 맞는 테이블목록만 출력<br><code>mysql&gt; show index from 테이블명;</code><br>: 인덱스 보기<br><code>mysql&gt; show columns from 테이블명;</code><br>: 테이블구조(describe 테이블명, explain 테이블명)<br><code>mysql&gt; show table status;</code><br>: 현재 DB의 테이블들의 상태(row수,table type,row길이,..)<br><code>mysql&gt; show table status from db명;</code><br>: 지정된 DB의 테이블들의 상태(row수,table type,row길이,..)<br><code>mysql&gt; show create table 테이블명;</code><br>: 해당 테이블 생성 SQL문 출력<br><code>mysql&gt; rename table 테이블1 to 테이블2;</code><br>: 테이블명 변경(ALTER TABLE 테이블1 RENAME TO 테이블2)<br><code>mysql&gt; rename table 테이블1 to 테이블2, 테이블3 to 테이블4;</code><br>: rename multiple tables<br><code>mysql&gt; rename table db1명.테이블명 to db2명.테이블명;</code><br>: 테이블을 다른 DB로 이동<br><code>mysql&gt; alter table 테이블명 add 컬럼명 데이터타입;</code><br>: 컬럼추가<br><code>mysql&gt; alter table 테이블명 del 컬럼명;</code><br>: 컬럼제거<br><code>mysql&gt; alter table 테이블명 modify 컬럼명 컬럼타입;</code><br>: 컬럼명에 지정된 컬럼타입의 변경<br><code>mysql&gt; alter table 테이블명 change old컬럼명 new컬럼명 컬럼타입;</code><br>: 컬럼명 변경<br><code>mysql&gt; alter table 테이블명 type=innodb;</code><br>: 테이블type변경<br><code>mysql&gt; create table 테이블명(..) type=heap min_rows=10000;</code><br>: 10000row를 수용할 수 있을 만큼 메모리할당(heap type이므로)<br><code>mysql&gt; select version();</code><br>: MySQL서버버전 출력<br><code>mysql&gt; create table 테이블2 as select * from 테이블1;</code><br>: 테이블1과 동일한 테이블 생성(with 데이터, as는 생략가능)<br><code>mysql&gt; create table 테이블2 as select * from 테이블1 where 1=2;</code><br>: 테이블1과 동일한 구조의 테이블 생성(without 데이터, 1=2는 0으로 할수도 있다.)<br><code>mysql&gt; insert into 테이블2 select * from 테이블1;</code><br>: 테이블1의 데이터를 테이블2에 insert</p>\n<p><strong>테이블이 존재여부 파악</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP TABLE IF EXISTS 테이블명;</span><br><span class=\"line\">CREATE TABLE 테이블명 (...);</span><br></pre></td></tr></table></figure></p>\n<p>프로그래밍 언어에서 COUNT(*)를 사용하여 질의가 성공하면 테이블이 존재함을 파악할 수 있다.<br>ISAM, MyISAM의 경우 COUNT(*)가 최적화되어 상관없으나, BDB, InnoDB의 경우 full scan이 발생하므로 사용하지 마라.<br>대신 select * from 테이블명 where 0; 을 사용하라.<br>질의가 성공하면 테이블이 존재하는 것이고, 아니면 존재하지 않는 것이다.</p>\n<p><strong>접속</strong><br><code>mysql {-h 접속호스트} -u 사용자 -p 사용DB</code><br>-h로 다른 서버에 존재하는 MySQL접속시 다음과 같이 MySQL DB에 설정해줘야 한다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; INSERT INTO user VALUES(&apos;접근을 허용할 호스트ip&apos;,&apos;사용자&apos;,PASSWORD(&apos;비밀번호&apos;),&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;, &apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;);</span><br><span class=\"line\">mysql&gt; INSERT INTO db(Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv,Create_priv,Drop_priv) VALUES(&apos;접근을 허용할 호스트ip&apos;,&apos;사용DB&apos;,&apos;사용자&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;,&apos;Y&apos;);</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES; or 쉴프롬프트상에서 % mysqladmin -u root -p flush-privileges</span><br></pre></td></tr></table></figure></p>\n<p><strong>검색조건(where)</strong><br>regular expression을 지원하다니 신기하군..<br><code>mysql&gt; select * from work where 열명 regexp &quot;정규표현식&quot;;</code></p>\n<p><strong>백업 &amp; 복구</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump &#123;-h 호스트&#125; -u 사용자 -p DB명 &gt; 백업파일</span><br><span class=\"line\">mysql &#123;-h 호스트&#125; -u 사용자 -p DB명 &lt; 백업파일</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -u root -p --opt db_moyiza &gt; moyiza.sql</span><br><span class=\"line\">mysqldump -u root -p --opt db_board | mysql ---host=remote-host -C database (상이한 머쉰)</span><br><span class=\"line\">mysql -u moyiza -p db_moyiza &lt; moyiza.sql</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -u root -p --opt db_moyiza | mysql ---host=ns.moyiza.net -C db_moyiza</span><br></pre></td></tr></table></figure></p>\n<p>테이블 생성구문만을 화면에서 보려면 다음과 같이 –no-data를 사용한다. 테이블명을 생략하면 모든 테이블 출력<br><code>mysqldump -u 유저명 -p --no-data db명 테이블명</code></p>\n<p><strong>테이블 검사</strong><br><code>isamchk</code></p>\n<p><strong>오라클 sysdate와 동일</strong><br><code>insert into test values(&#39;12&#39;, now());</code></p>\n<p><strong>유닉스 time()함수 리턴값 사용</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM_UNIXTIME(954788684)</span><br><span class=\"line\">UNIX_TIMESTAMP(&quot;2001-04-04 :04:04:04&quot;)</span><br></pre></td></tr></table></figure></p>\n<p><strong>MySQL 디폴트 DB&amp;로그파일 위치</strong><br>/var/lib/mysql<br>/var/lib디렉토리는 여러 프로세스들이 사용하는 데이터를 저장하는 일종의 파일시스템상의 데이터베이스라고 볼 수 있다.</p>\n<p><strong>replace</strong><br>해당 레코드 존재하면 update하고, 존재하지 않는다면 insert한다.(insert문법과 동일)<br><code>replace into test values(&#39;maddog&#39;,&#39;kang myung gyu&#39;)&#39;</code></p>\n<p><strong>explain</strong><br>explain 질의문: 지정한 질의문이 어떻게 실행될 건지를 보여줌<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; explain select u.uid, u.name, a.name from sm_user u, sm_addr a where u.uid=a.uid;</span><br><span class=\"line\">+-------+------+-----------------+-----------------+---------+-------+------+-------+</span><br><span class=\"line\">| table | type | possible_keys | key | key_len | ref | rows | Extra |</span><br><span class=\"line\">+-------+------+-----------------+-----------------+---------+-------+------+-------+</span><br><span class=\"line\">| u | ALL | PRIMARY | NULL | NULL | NULL | 370 | |</span><br><span class=\"line\">| a | ref | sm_addr_uid_idx | sm_addr_uid_idx | 11 | u.uid | 11 | |</span><br><span class=\"line\">+-------+------+-----------------+-----------------+---------+-------+------+-------+</span><br><span class=\"line\">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure></p>\n<p><strong>temporary table</strong><br>크기가 큰 테이블에 있는 subset에 대한 질의라면 subset을 temporary table에 저장한 후 질의하는 것이 더 빠를 경우가 있다.<br>temporary table는 세션내에서만 유효하고(현재 사용자만이 볼수 있다는 뜻), 세션종료시 자동적으로 drop된다.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create temporary table (...);</span><br><span class=\"line\">create temporary table (...) type=heap; //디스크가 아닌 메모리에 테이블 생성</span><br></pre></td></tr></table></figure></p>\n<p>존재하는 permanent table의 테이블명과 동일하게 생성할 수 있으며,<br>temporary table은 permanent table보다 우선시되어 처리된다.<br>4.0.7의 감마버전에서 테스트하면 결과는 약간 달라진다. 버그인건지..<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create table test (id varchar(10));</span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; insert into test values(&apos;moyiza&apos;);</span><br><span class=\"line\">Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create temporary table test(id varchar(10));</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from test;</span><br><span class=\"line\">Empty set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; drop table test;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from test;</span><br><span class=\"line\">+----------+</span><br><span class=\"line\">| id |</span><br><span class=\"line\">+----------+</span><br><span class=\"line\">| moyiza |</span><br><span class=\"line\">+----------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>\n<p><strong>Table Type에 다른 Files on Disk</strong><br>ISAM .frm (definition) .ISD (data) .ISM (indexes)<br>MyISAM .frm (definition) .MYD (data) .MYI (indexes)<br>MERGE .frm (definition) .MRG (list of constituent MyISAM table names)<br>HEAP .frm (definition)<br>BDB .frm (definition) .db (data and indexes)<br>InnoDB .frm (definition)</p>\n<p>보통 mysqldump를 사용하여 백업을 수행하여 다른 DB서버에 데이터를 restore하면 된다.<br>MySQL은 별다른 작업없이 데이터파일을 단순히 복사(copy)하는 것만으로도 다른 서버에 DB을 이동시킬 수 있다.<br>하지만, 이런 방식이 지원되지 않는 table type도 있다.  </p>\n<p>ISAM: machine-dependent format하기때문에..<br>BDB : .db파일에 이미 테이블위치가 encode되어 있기때문에..<br>MyISAM, InnoDB, MERGE :가능(machine-independent format)  </p>\n<p>별다른 지정을 하지 않았다면 디폴트 TABLE type이 MyISAM이므로, 무난히 migration할 수 있다.<br>floating-point컬럼(FLOAT,DOUBLE)이 있다면 이러한 방식이 실패할 수 도 있다.  </p>\n<p>쉘에서는 mysql이 되는데 PHP에서 mysql.sock error를 내면서 MySQL이 안되는 경우 mysql.sock은 /tmp 아니면 /var/lib/mysql에 생기게 된다.<br>나의 경우, /var/lib/mysql에 mysql.sock파일이 있는데 PHP에서는 /tmp에서 찾으려하면서 에러를 발생했다.<br>/usr/bin/safe_mysqld파일에서 다음과 같이 수정한다.<br>주석(#)이 달린 것이 원래것이고 그 밑에 있는것이 수정한 것이다.  </p>\n<p># MYSQL_UNIX_PORT=${MYSQL_UNIX_PORT:-/var/lib/mysql/mysql.sock}<br>MYSQL_UNIX_PORT=${MYSQL_UNIX_PORT:-/tmp/mysql.sock}</p>\n<p>위와 같이 하니 /usr/bin/mysql이 /var/lib/mysql/mysql.sock에서 소켓파일을 찾으려 했다.<br>socket file을 지정하는 –socket이라는 옵션으로 다음과 같이 지정하면 된다.<br><code>mysql --socket=/tmp/mysql.sock -u moyiza -p db_test</code>  </p>\n<p>하지만 mysql실행시마다 이렇게 써줘야한다는 것이 상당히 귀찮다. 옵션이 바로 적용되게 설정하자.<br>mysql은 설정사항을 다음 3가지 파일에서 검색한다.  </p>\n<p>/etc/my.cnf global options(MySQL 전체적으로 사용되는 옵션 정의)<br>mysql-data-dir/my.cnf 특정 DB에 적용되는 option   (/var/lib/mysql/my.cnf)<br>~/.my.cnf 사용자 각각의 설정(‘~’문자는 사용자의 홈디렉토리는 의미)</p>\n<p>/usr/share/mysql디렉토리에 예제가 있으므로 참고한다.<br>소켓파일의 지정은 다음줄을 넣어주면 된다.<br><code>socket = /tmp/mysql.sock</code></p>\n<p>== /etc/my.cnf예 ==<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The following options will be passed to all MySQL clients</span><br><span class=\"line\">[client]</span><br><span class=\"line\">#password = your_password</span><br><span class=\"line\">port = 3306</span><br><span class=\"line\">socket = /tmp/mysql.sock</span><br><span class=\"line\"></span><br><span class=\"line\"># Here follows entries for some specific programs</span><br><span class=\"line\"></span><br><span class=\"line\"># The MySQL server</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">port = 3306</span><br><span class=\"line\">socket = /tmp/mysql.sock</span><br></pre></td></tr></table></figure></p>\n<p>MySQL에서 통계처리시<br>orderby, groupby 는 sort_buffer를 늘여준다.(show variables)  </p>\n<p>live table(smslog)에서 모든 질의를 처리하지 말고 summary table에 질의결과를 저장해 재질의 처리한다.<br>summary table이 heap-type table가 가능한지 확인할 것.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSERT INTO tblTemp2 (fldID) SELECT tblTemp1.fldOrder_ID FROM tblTemp1 WHERE tblTemp1.fldOrder_ID &gt; 100;</span><br></pre></td></tr></table></figure></p>\n<p>join이 subselect보다 빠르다.<br>join시 사용되는 컬럼은 동일한 column type과 길이를 가져야만 최적의 속도를 보장한다.<br>즉, 동일 column type이지만 길이가 다르다면(char(11), char(10)), 동일한 컬럼도메인으로 변경해주는 것이 좋다.<br>where의 in은 optimize되어 있으므로 빠르다.<br>insert,select는 동시에 수행가능하다.(어떻게?)<br>explain으로 질의과정 점검  </p>\n<p>varchar to/from char<br>conversion varchar를 char로 변경할 경우 모든 컬럼타입을 동시에 변경해야 한다.<br>반대의 경우, 하나만 char-&gt;charchar변경시 다른 모든 컬럼도 varchar로 변경됨<br>참.. 특이하구만..<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE chartbl (name VARCHAR(40), address VARCHAR(80));</span><br><span class=\"line\">Query OK, 0 rows affected (0.05 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; desc chartbl;</span><br><span class=\"line\">+---------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">| Field | Type | Null | Key | Default | Extra |</span><br><span class=\"line\">+---------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">| name | varchar(40) | YES | | NULL | |</span><br><span class=\"line\">| address | varchar(80) | YES | | NULL | |</span><br><span class=\"line\">+---------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">2 rows in set (0.03 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; alter table chartbl modify name char(40);</span><br><span class=\"line\">Query OK, 0 rows affected (0.02 sec)</span><br><span class=\"line\">Records: 0 Duplicates: 0 Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; desc chartbl;</span><br><span class=\"line\">+---------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">| Field | Type | Null | Key | Default | Extra |</span><br><span class=\"line\">+---------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">| name | varchar(40) | YES | | NULL | |</span><br><span class=\"line\">| address | varchar(80) | YES | | NULL | |</span><br><span class=\"line\">+---------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">2 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; alter table chartbl modify name char(40), modify address char(80);</span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br><span class=\"line\">Records: 0 Duplicates: 0 Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; desc chartbl;</span><br><span class=\"line\">+---------+----------+------+-----+---------+-------+</span><br><span class=\"line\">| Field | Type | Null | Key | Default | Extra |</span><br><span class=\"line\">+---------+----------+------+-----+---------+-------+</span><br><span class=\"line\">| name | char(40) | YES | | NULL | |</span><br><span class=\"line\">| address | char(80) | YES | | NULL | |</span><br><span class=\"line\">+---------+----------+------+-----+---------+-------+</span><br><span class=\"line\">2 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;</span><br></pre></td></tr></table></figure></p>\n<p>“For each article, find the dealer(s) with the most expensive price.”</p>\n<p>표준안<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> article, dealer, price</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> shop s1</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> price=(<span class=\"keyword\">SELECT</span> <span class=\"keyword\">MAX</span>(s2.price)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> shop s2</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> s1.article = s2.article);</span><br></pre></td></tr></table></figure></p>\n<p>수정안(최적화)<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TEMPORARY</span> <span class=\"keyword\">TABLE</span> tmp (</span><br><span class=\"line\">article <span class=\"built_in\">INT</span>(<span class=\"number\">4</span>) <span class=\"keyword\">UNSIGNED</span> ZEROFILL <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'0000'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">price <span class=\"keyword\">DOUBLE</span>(<span class=\"number\">16</span>,<span class=\"number\">2</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'0.00'</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">LOCK</span> <span class=\"keyword\">TABLES</span> shop <span class=\"keyword\">read</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> tmp <span class=\"keyword\">SELECT</span> article, <span class=\"keyword\">MAX</span>(price) <span class=\"keyword\">FROM</span> shop <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> article;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> shop.article, dealer, shop.price <span class=\"keyword\">FROM</span> shop, tmp</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> shop.article=tmp.article <span class=\"keyword\">AND</span> shop.price=tmp.price;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">UNLOCK</span> <span class=\"keyword\">TABLES</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> tmp;</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"MySQL-특성정리\"><a href=\"#MySQL-특성정리\" class=\"headerlink\" title=\"MySQL 특성정리\"></a>MySQL 특성정리</h5><p>primary key, foreign key지원<br>index 지원(15개컬럼, 256byte까지)<br>MySQL에서의 Stored Script개념 =&gt; SQL server language<br>commit-rollback개념 =&gt; lock tables(lock table test write -&gt; 트랜잭션.. -&gt; unlock tables)<br>컬럼명길이: 64자까지, 컬럼 Alias: 256자까지<br>not case-sensitive: keywords, functions, column, index명<br>case-sensitive: database, table, alias명<br>키워드,함수명은 대소문자구별이 없지만, db명과 table명은 Unix계열이라면 case-sensitive하다.<br>(이는 오브젝트명이 OS의 fs에 따라 저장되기 때문이다. 서버의 lower_case_table_names 변수를 1로 설정하면 오브젝트명은 모두 소문자로 저장되므로 유닉스-윈도간 호환성을 높일 수 있다.)  </p>\n<p>지원되지 않는 부분:<br>Stored Procedure(5.0이상부터 지원된다고 함)<br>View(5.0이상부터 지원된다고 함)<br>Trigger(5.0이상부터 지원된다고 함)<br>subquery(4.1이상부터 지원된다고 함)<br>union, union all(4.0이상부터 지원됨)</p>\n<p>[테이블 type에 따른 인덱스 특성]<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Index Characteristic ISAM MyISAM HEAP BDB InnoDB</span><br><span class=\"line\">NULL values allowed No Yes As of 4.0.2 Yes Yes</span><br><span class=\"line\">Columns per index 16 16 16 16 16</span><br><span class=\"line\">Indexes per table 16 32 32 31 32</span><br><span class=\"line\">Maximum index row size (bytes) 256 500 500 500/1024 500/1024</span><br><span class=\"line\">Index column prefixes allowed Yes Yes Yes Yes No</span><br><span class=\"line\">BLOB/TEXT indexes allowed No Yes(255 bytes max) No Yes (255 bytes max) No</span><br></pre></td></tr></table></figure></p>\n<p>인덱스 생성<br>- alter table을 이용한 인덱스 생성이 더 flexible함<br>- 인덱스명은 생략가능  </p>\n<p>ALTER TABLE 테이블명 ADD INDEX 인덱스명 (인덱스컬럼);<br>ALTER TABLE 테이블명 ADD UNIQUE 인덱스명 (인덱스컬럼);<br>ALTER TABLE 테이블명 ADD PRIMARY KEY (인덱스컬럼);<br>ALTER TABLE 테이블명 ADD FULLTEXT (인덱스컬럼);  </p>\n<p>CREATE INDEX 인덱스명 ON 테이블명 (인덱스컬럼);<br>CREATE UNIQUE INDEX 인덱스명 ON 테이블명 (인덱스컬럼);<br>CREATE FULLTEXT INDEX 인덱스명 ON 테이블명 (인덱스컬럼);  </p>\n<p>unique인덱스와 primary key인덱스와의 차이<br>unique은 null허용하지만, primary key는 null허용 안함<br>unique은 하나의 테이블에 여러개 올 수 있지만, primary key는 하나만 존재  </p>\n<p>테이블생성시 지정<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> 테이블명</span><br><span class=\"line\">(</span><br><span class=\"line\">... <span class=\"keyword\">column</span> declarations ...</span><br><span class=\"line\"><span class=\"keyword\">INDEX</span> 인덱스명 (인덱스컬럼),</span><br><span class=\"line\"><span class=\"keyword\">UNIQUE</span> 인덱스명 (인덱스컬럼),</span><br><span class=\"line\">PRIMARY <span class=\"keyword\">KEY</span> (인덱스컬럼),</span><br><span class=\"line\">FULLTEXT 인덱스명 (인덱스컬럼),</span><br><span class=\"line\">...</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>index prefix 생성<br>- 컬럼의 전체길이중 일부만 인덱스로 사용<br>- supported for ISAM, MyISAM, HEAP, and BDB tables, but not for InnoDB tables<br>- 지정되는 길이는 byte단위가 아닌 charater단위이므로, multi-byte character일 경우 주의<br>- blob, text 컬럼타입일 경우, index prefix 가 유용(255 길이까지 가능)<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> 테이블명</span><br><span class=\"line\">(</span><br><span class=\"line\"><span class=\"keyword\">name</span> <span class=\"built_in\">CHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">address <span class=\"built_in\">CHAR</span>(<span class=\"number\">60</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\"><span class=\"keyword\">INDEX</span> (<span class=\"keyword\">name</span>(<span class=\"number\">10</span>),address(<span class=\"number\">10</span>))</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p>인덱스 삭제<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> 인덱스명 <span class=\"keyword\">ON</span> 테이블명;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 테이블명 <span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> 인덱스명;</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 테이블명 <span class=\"keyword\">DROP</span> PRIMARY <span class=\"keyword\">KEY</span>;</span><br></pre></td></tr></table></figure></p>\n<p>OUTER JOIN<br>[MySQL]<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left outer joing : <span class=\"keyword\">SELECT</span> t1.*, t2.* <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> t2 <span class=\"keyword\">ON</span> t1.i1 = t2.i2;</span><br><span class=\"line\">right outer joing: <span class=\"keyword\">SELECT</span> t1.*, t2.* <span class=\"keyword\">FROM</span> t1 <span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> t2 <span class=\"keyword\">ON</span> t1.i1 = t2.i2;</span><br></pre></td></tr></table></figure></p>\n<p>[Oracle]<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">left outer joing : <span class=\"keyword\">SELECT</span> t1.*, t2.* <span class=\"keyword\">FROM</span> t1, t2 <span class=\"keyword\">where</span> t1.i1 = t2.i2(+);</span><br><span class=\"line\">right outer joing: <span class=\"keyword\">SELECT</span> t1.*, t2.* <span class=\"keyword\">FROM</span> t1, t2 <span class=\"keyword\">where</span> t1.i1(+) = t2.i2;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span></span><br><span class=\"line\">student.name, student.student_id,</span><br><span class=\"line\">event.date, event.event_id, event.type</span><br><span class=\"line\"><span class=\"keyword\">FROM</span></span><br><span class=\"line\">student, <span class=\"keyword\">event</span></span><br><span class=\"line\"><span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> score <span class=\"keyword\">ON</span> student.student_id = score.student_id</span><br><span class=\"line\"><span class=\"keyword\">AND</span> event.event_id = score.event_id</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span></span><br><span class=\"line\">score.score <span class=\"keyword\">IS</span> <span class=\"literal\">NULL</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span></span><br><span class=\"line\">student.student_id, event.event_id;</span><br></pre></td></tr></table></figure>\n<p><strong>문장을 이용한 변수의 설정</strong><br>현재 moyiza의 데이터베이스강좌게시판에 등록된 총 게시물은 43개이다. 43개의 강좌를 읽은 수(hit수)는 각각 다르다.<br>평균 hit수를 구해 보자.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select @total_hit := sum(hit), @total_record := count(*) from zetyx_board_database;</span><br><span class=\"line\">+------------------------+---------------------------+</span><br><span class=\"line\">| @total_hit := sum(hit) | @total_record := count(*) |</span><br><span class=\"line\">+------------------------+---------------------------+</span><br><span class=\"line\">| 3705 | 43 |</span><br><span class=\"line\">+------------------------+---------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select @total_hit/@total_record as 평균HIT;</span><br><span class=\"line\">+-----------------+</span><br><span class=\"line\">| 평균HIT |</span><br><span class=\"line\">+-----------------+</span><br><span class=\"line\">| 86.162790697674 |</span><br><span class=\"line\">+-----------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">substring</span>(subject <span class=\"keyword\">from</span> <span class=\"number\">9</span>) <span class=\"keyword\">from</span> zetyx_board_database <span class=\"keyword\">where</span> <span class=\"keyword\">substring</span>(subject, <span class=\"number\">1</span>, <span class=\"number\">8</span>) = <span class=\"string\">'[ORACLE]'</span>;</span><br></pre></td></tr></table></figure>\n<p>보통 상용DBMS들이 row-level locking을 지원한다. 쉽게 말해 레코드단위로 락킹한다는 말이다.<br>반면, MySQL의 MyISAM 테이블타입은 table-level locking을 사용한다.<br>쉽게 말하면, insert, update, delete작업은 전체 테이블에 락을 걸고 처리된다는 것이다.<br>row-level락보다 비효율적이지만,.. MySQL은 빠르기 때문에 이 단점이 상쇄된다.</p>\n<p>Compressed MyISAM(packed MyISAM)<br>정적인 테이블데이터는 압축하여 20-60%정도의 공간을 절약할 수 있다.<br>Production데이터를 CD로 받아서 차후 디스크에 풀지 않고 CD자체로 바로 사용할 수도 있다.<br>gzip등으로 백업받으면 이를 푸는 과정이 필요할 것이다.<br>% myisampack moyiza.myi  </p>\n<p>데이터베이스 게시판의 Merge Table에 좀 더 자세한 내용을 적어 두었다.</p>\n<p>RAID Table<br>1개의 테이블은 OS상에 3개의 파일로 구성된다.<br>스키마파일(.frm), data파일(.myd), index파일(.myi)<br>MySQL의 RAID테이블은 데이터파일(.myd)을 여러개의 파일들로 구성하는 것이다.</p>\n<p>create table raid_test (…)<br>type=myisam raid_type=striped raid_chunks=4 raid_chunsize=8</p>\n<p>테이블을 4개의 데이터파일로 나누고, 8kb단위로(8kb stripe) 라운드로빈 방식으로 write가 이루어진다.</p>\n","categories":["DB","MySQL"],"tags":[]},{"title":"태요군의 자바스크립트 강의","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post31/","content":"<p><a href=\"http://www.taeyo.net/lecture/NET_01/JsOop01.asp\" target=\"_blank\" rel=\"noopener\">http://www.taeyo.net/lecture/NET_01/JsOop01.asp</a><br><a href=\"http://www.taeyo.net/lecture/NET_01/JsOop02.asp\" target=\"_blank\" rel=\"noopener\">http://www.taeyo.net/lecture/NET_01/JsOop02.asp</a><br><a href=\"http://www.taeyo.net/lecture/NET_01/JsOop03.asp\" target=\"_blank\" rel=\"noopener\">http://www.taeyo.net/lecture/NET_01/JsOop03.asp</a><br><a href=\"http://www.taeyo.net/lecture/NET_01/JsOop04.asp\" target=\"_blank\" rel=\"noopener\">http://www.taeyo.net/lecture/NET_01/JsOop04.asp</a></p>\n<p>읽어보면 도움이 된다고 하니 나중에 한번 꼭 볼것.</p>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"브라우저 창 닫기 소스","url":"https://yeop-blog.github.io/2017/09/30/2017-09-30-old-blog-post30/","content":"<p>팝업창이 아닌 일반 브라우저에서 브라우저를<br>widows.close() 혹은 self.close()를 사용해서 닫으면<br>“지금 보고 있는 웹 페이지에서 창을 닫으려고 합니다.<br>이 창을 닫으시겠습니까?”<br>이라는 문구의 Confirm 창이 뜹니다.<br>Confirm 창이 안생기게 하려면 아래처럼 하시면 됩니다.<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"top.window.opener = top; top.window.open('','_parent', ''); top.window.close();\"</span>&gt;</span>창닫기(경고창 없음)<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"코딩 표준(변수 명명법)","url":"https://yeop-blog.github.io/2017/09/29/2017-09-29-old-blog-post29/","content":"<p>개발자마다 전부 다른 스타일인 부분인데 정리가 되어 있는게 있어서 퍼옵니다.<br>뭐 소프트웨어공학 같은곳에서 나오는 이야기지만 참고하시면 도움이 될것 같습니다.</p>\n<hr>\n<h5 id=\"Naming-Rule\"><a href=\"#Naming-Rule\" class=\"headerlink\" title=\"Naming Rule\"></a>Naming Rule</h5><ol>\n<li><p>PascalCasing (파스칼 케이싱)<br>￭ 클래스, 열거형, 이벤트, 메서드 등의 이름을 만들 때에는 대문자로 시작하는 변수명을 사용한다.<br>￭ 복합어일 경우 중간에 시작하는 새로운 단어는 대문자로 적는다.<br>&nbsp;&nbsp;&nbsp;예) UtilityBox, MainFrame</p>\n</li>\n<li><p>CamelCasing (카멜 케이싱)<br>￭ 메서드의 매개변수의 이름에 적용되는데 첫번째 문자는 소문자로 시작하고 복합어 일 경우 파스칼 케이싱과 동일하게 적용한다.<br>￭ 동일한 이름을 가지는 두 항목을 구분하는 용도로도 사용한다.<br>&nbsp;&nbsp;&nbsp;예) utilityBox, mainFrame</p>\n</li>\n<li><p>GNU Naming Convention<br>￭ Linux의 프로젝트들은 GNU Naming Convention이라는 형태의 명명법을 주로 사용한다.<br>￭ 모두 소문자를 사용하고 복합어 사이를 ‘_‘를 사용하여 연결한다.<br>&nbsp;&nbsp;&nbsp;예) gtk_widget_activate</p>\n</li>\n<li><p>Hungarian notation (헝가리안 표기법)<br>￭ Microsoft 의 개발자중 헝가리 사람의 프로그래머가 쓰던 변수 명명법으로 MS내부에서 따라쓰기 시작하던 것이 점차 전세계의 프로그래머들에게 널리 퍼져 이젠 프로그램 코딩시 변수 명명의 표준적인 관례가 되었다.<br>￭ C#에서는 이러한 명명법을 사용하지 않고 있으며 주로 윈도우즈 프로그래밍에 사용된다.<br>&nbsp;&nbsp;&nbsp;예) g_bTrue<br>￭ 첫글자 g는 전역변수, m은 멤버변수를 의미한다. 전역이나 멤버변수의 경우에는 그 다음에 _ 를 적는다.<br>￭ b는 Boolean타입을 의미하고 True가 의미있는 이름이다.<br>&nbsp;&nbsp;&nbsp;예) nCnt<br>￭ 전역이나 멤버변수가 아니므로 g_ 나 m_ 가 없다.<br>￭ n과 i는 자연수를 뜻하며 i는 주로 인덱스에 사용하고, n은 카운트의 목적에 주로 사용한다.<br>￭ 의미있는 이름이 길 경우에는 자음만을 사용한다.</p>\n</li>\n<li><p>BREW Naming Convention<br>￭ BREW 는 Qualcomm에서 만든 플랫폼으로 국내의 휴대폰 제조사들은 초기부터 현재까지 이 코드들을 많이 사용하고 있다.<br>￭ 기존 명명법을 조합한 형태로 변종 명명법이지만, 익숙함을 벗어나지 못하는 국내 제조사의 개발자들이 선호하는 형태이다.<br>￭ 클래스나 인터페이스를 대문자나 파스칼 케이싱으로 앞에 두고, ‘_‘ 이후에 다시 파스칼 케이싱 형태의 메서드 명을 적는다.<br>&nbsp;&nbsp;&nbsp;예) IDISPLAY_ClearScreen</p>\n</li>\n<li><p>Constant (상수)<br>￭ 거의 모든 명명법에서 상수를 표기하는 방법은 거의 동일하다.<br>￭ 모든 문자를 대문자로 사용하는 GNU Naming Convention의 형태를 사용한다.<br>&nbsp;&nbsp;&nbsp;예) DEFAULT_COUNTRY_CODE<br>다양한 명명법들이 존재한다. 어떤 방법이 가장 좋다라는 것은 없다. 프로젝트의 상황에 가장 적합한 명명법을 팀에서 결정하는 것이다. 프로젝트의 초기에 명명법을 결정하고 모든 개발자들이 규칙을 따라 코드를 작성하는 것이다.</p>\n</li>\n</ol>\n<h5 id=\"C-Naming-Rule\"><a href=\"#C-Naming-Rule\" class=\"headerlink\" title=\"C Naming Rule\"></a>C Naming Rule</h5><p>- 코딩 이름 규칙<br>￭ 전체적으로 자바 코딩 스타일을 따른다<br>￭ 우선순위가 높다는 것은 먼저 시작한다는 뜻  </p>\n<ol>\n<li><p>변수<br>￭ 일반적인 변수(i, j, tmp)는 그때 상황에 맞게 사용 (남발하지 말기)<br>￭ 첫단어는 소문자로 시작하되 새로운 단어의 시작은 대문자 ( priceSum )<br>￭ 정수(int, long)는 prefix가 없다 (int 와 long 구분에 신경쓰기)<br>￭ 실수(float, double)는 각각 f, d 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) float fPriceSum, double dPriceSum<br>￭ unsigned 형이면 정수, 실수 상관없이 u 가 붙는다<br>&nbsp;&nbsp;&nbsp;예) int uPriceSum, long uPriceSum, float fUPriceSum, double dUPrice<br>￭ 우선순위는 f = d &gt; u<br>￭ 문자형 변수는 ch 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) char ch, char chInput, char chOutput<br>￭ 배열은 arr 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) int arrPriceSum[10], char arrAuthorName[10]<br>￭ 포인터는 ptr 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) int *ptrPriceNum, char, char *ptrAuthorName<br>￭ 외부변수는 g 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) unsigned int gUPriceNum, char *gPtrAuthorName, char gArrAuthorName[10]<br>￭ 정적변수는 st 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) float stFPriceNum, char *stPtrAuthorName, char stArrAuthorName[10]<br>￭ 정적외부변수는 gst 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) unsigned double gstDUPriceNum, char *gstPtrAuthorName,  char gstArrAuthorName[10]<br>￭ 구조체 멤버변수는 m 으로 시작한다<br>&nbsp;&nbsp;&nbsp;예) int mPriceSum, char *mPtrAuthorName, char mArrAuthorName[10]<br>￭ 구조체 인스턴스변수는 stru 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) SPerson struPerson, SPerson *ptrStruPerson<br>￭ 파라미터는 x 로 시작한다<br>&nbsp;&nbsp;&nbsp;예) int xPriceNum, char *xPtrAuthorName<br>￭ 우선순위는 g = st = gst = m = x &gt; ptr = arr &gt; stru &gt; f = d &gt; u</p>\n</li>\n<li><p>상수, 매크로<br>￭ 대문자<br>￭ 단어와 단어 사이는 _ 로 연결한다<br>&nbsp;&nbsp;&nbsp;예) const double PI = 3.14; , #define MAX_SIZE 1024</p>\n</li>\n<li><p>함수<br>￭ 동사 + 목적어 이고 완전한 단어를 사용한다<br>￭ 동사는 소문자이고 목적어의 시작은 대문자, 목적어 새로운 단어의 시작도 대문자<br>&nbsp;&nbsp;&nbsp;예) char *makeLinkedList(…) {…}</p>\n</li>\n<li><p>구조체<br>￭ 구조체명은 _S 로 시작하고 단어의 시작은 대문자, 새로운 단어의 시작도 대문자<br>￭ typedef 로 재정의 할때는 _ 만 없앤다.  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct _SPerson &#123;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">typedef struct _SPerson SPerson;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>주석</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> /*************************************************************  </span><br><span class=\"line\"> * NOTE ￭ programid.c</span><br><span class=\"line\"> *      blah blah blah ~</span><br><span class=\"line\"> * Author ￭ programer name</span><br><span class=\"line\"> * Since ￭ 작성일자</span><br><span class=\"line\">**************************************************************/</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"코딩-표준-HTML-ASP-JavaScript\"><a href=\"#코딩-표준-HTML-ASP-JavaScript\" class=\"headerlink\" title=\"코딩 표준 (HTML/ASP/JavaScript)\"></a>코딩 표준 (HTML/ASP/JavaScript)</h5><p>일반적으로 웹서비스에서는 파일, 테이블, 필드, 변수 네이밍에 첫글자를 소문자로 쓰고<br>복합단어를 대문자로 구분 (“itemAdd.asp”, “rsStudentList”, “mlHours” 등)하는 헝가리안 표기법을 사용한다.</p>\n<ol>\n<li><p>파일과 폴더 이름<br>￭ 모든 폴더는 index.html(혹은 .shtml, .asp)파일을 포함하도록 한다.<br>￭ 사이트는 논리적, 상속적인 방법으로 조직되어야 한다.<br>￭ 한 디렉토리에 모든 파일을 집어넣지마라<br>￭ 모든 파일이름은 소문자라 숫자로 시작한다.<br>￭ 파일이름에서 숫자가 먼저 나오면 뒤에는 소문자를 쓴다<br>&nbsp;&nbsp;&nbsp;예)  “2editImage.asp”<br>￭ 복합 단어는 대문자로 구분한다 예)  “itemEdit.asp”).<br>￭ 밑줄(”_”)이나 대시(”-”)는 파일이름에 사용하지 마세요.<br>￭ 파일이름에 공백을 사용하지 마세요.<br>￭ 같은 그룹의 페이지들은 같은 단어나 문자열로 파일이름을 시작한다<br>&nbsp;&nbsp;&nbsp;예)“itemAdd”, “itemAdded”, “itemEdit”, “itemEdited”<br>이렇게하면 서로 연관있는 페이지들을 찾기 편하다.<br>￭ 서버측에서 포함되는 파일(모든 템플릿 기반 파일)에는 .shtml 을 확장자로 사용하고 .htm 이나 .html 을 사용하지 마라.<br>￭ 파일이나 폴더이름 시작부분에 사용되는 축약어는 소문자로 표기한다<br>&nbsp;&nbsp;&nbsp;예)“atecStaffList.asp”, “imcResources.shtml”</p>\n</li>\n<li><p>폴더이름 표준<br>￭ 이미지 파일은 “/images/.” 폴더에 저장한다.<br>￭ 이미지가 적은 사이트라면, 이미지 폴더를 루트 폴더 바로 아래에 두고 사이트의 모든 이미지를 그 폴더에 저장한다.<br>￭ 이미지가 많고 다단계의 페이지들이 있다면, 사이트의 각 하위 폴더마다 “images” 폴더를 만들어서 각 하위 페이지에서 사용하는 모든 이미지는 각 “images” 폴더에 저장하는게 좋다.<br>￭ 큰 이미지 대신 작은 썸네일을 보여주는 사이트라면 모든 썸네일 이미지를 “images” 폴더 아래의 “thumbnails” 폴더에 저장한다. 썸네일 이미지의 파일명은 원래 크기의 이미지와 똑같게 한다.<br>￭ 포함하는 파일은 루트 디렉토리 아래의 “/_include/” 에 저장한다.<br>￭ 자바스크립트 파일은 루트 디렉토리 아래의 “/_scripts/” 에 저장한다.<br>￭ CGI 스크립트는 루트 디렉토리 아래의 “/cgi-bin/” 에 저장하거나 스크립트가 사용되는 디렉토리에 저장한다.<br>￭ 스타일시트 파일은 루트 디렉토리 아래의 “/_styles/”에 저장한다.<br>￭ 새 사이트를 개발하는데 사용되는 파일은 루트 디렉토리 아래의 “/_dev/” 에 저장한다.</p>\n</li>\n<li><p>변수명 (JavaScript, ASP)<br>￭ 변수명은 헝가리안 표기법을 따릅니다.<br>￭ 모든 이름은 소문자로 시작하도록 한다(숫자는 안됩니다).<br>￭ 복합 단어 이름은 대문자로 구분하도록 한다예)  “firstName”).<br>￭ 변수명에 밑줄(”_”)이나 대시(”-”) 를 사용하지 마세요.<br>￭ 설명이 없거나 심하게 축약된 이름은 피하도록 한다.<br>￭ 변수가 정확히 무엇을 의미하는지 알 수 있도록 명명하는게 중요한다<br>&nbsp;&nbsp;&nbsp;예)“firstName”을 “fn”으로 쓰지 마세요<br>￭ “i”나 “x” 같은 이름은 “for” 반복문에만 쓰는게 좋다.</p>\n</li>\n<li><p>HTML/ASP 형식<br>￭ 실제로 사용되는 페이지는 XHTML Transitional 규격을 만족하도록 해야한다.<br>￭ 모든 ASP 코드는 (Response.Write 문 포함) 올바른 XHTML 코드를 만들어내야 한다.<br>￭ 모든 ASP 명령과 문장은 첫글자를 대문자로 표기한다<br>￭ 모든 접속은 포함되는 파일(inculde file)을 이용한다.<br>￭ 대부분의 경우, 레코드 선언은 문서의 제일 위쪽 태그 이전에 위치시키세요.<br>￭ 모든 레코드셋 이름은 “rs”로 시작한다 예)“rsItemInfo”<br>￭ 접속을 사용하는 모든 페이지는 페이지의 마지막에서 접속을 종료해주세요 (태그 아래).<br>￭ 모든 질의문은 구분자가 있어야 한다<br>&nbsp;&nbsp;&nbsp;예)“itemEdit.asp?itemID=33″, 이건 안됨 “itemEdit.asp?33″<br>￭ 변수, 레코드셋, 질의 구분자 이름은..<br>￭ 소문자로 시작한다<br>￭ 변수 내에서의 단어 구분은 대문자를 이용한다<br>&nbsp;&nbsp;&nbsp;예)  “userFirstName”<br>￭ 밑줄은 사용하지 않는다<br>￭ 축약어가 첫글자부터 쓰이면 축약어 전체를 소문자로 표기한다<br>&nbsp;&nbsp;&nbsp;예)  “sqlString,” 이건 안됨 “sQLString”<br>￭ 매우 짧은 구문을 제외한 모든 구문은 어떤 목적으로 작성되었는지 설명하는 주석을 달아두어야 한다.<br>￭ 여러줄에 걸친 구문은 코드와 분리하는 묶음기호를 이용해서 명확히 작성하도록 한다.  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; %</span><br><span class=\"line\">If aspStatement Then</span><br><span class=\"line\">?</span><br><span class=\"line\">?</span><br><span class=\"line\">End If</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Cascading Style Sheets<br>￭ 스타일 이름은 모두 소문자로 한다 (XHTML에선 대문자가 허용되지 않는다), 밑줄(”_”)도 안됩니다.<br>￭ 포맷팅을 위한 스타일은 배타적으로 사용한다 (모든 <font>태그는 제거되어야 한다).<br>￭ 기존의 HTML 요소를 적극 활용한다. h1 태그로 필요한 스타일을 만들 수 있는데도 .head1 클래스를 추가하지 마세요.<br>￭ 이미 있는 스타일시트를 활용한다. 정말로 필요할 경우가 아니라면 새 스타일을 만들지 마세요. 링크의 스타일은 전체에 적용한다.<br>￭ 스타일 시트의 스타일을 알파벳순으로 정렬해놓으면 유지보수 측면에서 좋다.<br>￭ 특정 페이지에만 사용하는 스타일은 페이지 헤더에서 정의한다.</font></p>\n</li>\n<li><p>자바스크립트<br>￭ 정확한 동작을 위해서 모든 script태그는 type 과 language 를 포함해야 한다.<br>￭ language=”JavaScript” type=”text/JavaScript”. 를 사용한다.<br>￭ JavaScript 변수는 ASP 변수 네이밍 규약을 따릅니다.<br>￭ 작성된 자바스크립트 (한페이지에서만 사용되는)는 사용될 페이지의 헤더에 위치시킨다.<br>￭ 여러 페이지에서 사용될 함수는 .js 파일로 만드세요. 우리의 표준에서는 .js 파일을 root/_scripts/ 폴더에 저장한다.<br>￭ 자주 사용하는 함수도 자바스크립트 파일에 모아놓을 수 있다. 이 파일들은 절대경로로 참조한다.</p>\n</li>\n<li><p>SQL 형식<br>￭ 모든 SQL 예약어는 대문자로 입력한다<br>예) SELECT * FROM tableName WHERE dtStartDate &gt; ‘3/3/03’.<br>￭ 여러 테이블을 쿼리할때는 JOIN 문을 이용한다. 비표준 다중 테이블 쿼리는 자제해주세요.</p>\n</li>\n<li><p>SQL 테이블과 필드<br>￭ 테이블과 필드 이름은… 소문자로 시작한다.<br>￭ 변수명 내에서의 구분은 대문자를 이용하도록 한다<br>&nbsp;&nbsp;&nbsp;예)  “userFirstName”<br>￭ 밑줄(”_”)은 사용하지 않는다.<br>￭ 축약어가 처음에 사용되면 소문자로 표기한다<br>&nbsp;&nbsp;&nbsp;예)  “sqlString”, 이건 안됨 “sQLString”<br>￭ 같은 그룹의 테이블들은 같은 문자열로 시작하도록 한다<br>&nbsp;&nbsp;&nbsp;예)  “mlHours”, “mlPlatform”, “mlService”<br>￭ 테이블 이름에 복수형은 사용하지 않는다.<br>￭ 테이블 이름과 필드 이름에 숫자는 사용하지 않는다.<br>￭ 필드 이름의 첫문자를 자료형으로 표기한다.<br>￭ 문자열 자료형은 (char, varChar, etc.) “s” 로 시작한다<br>&nbsp;&nbsp;&nbsp;예)“sFirstName”<br>￭ 정수 자료형은 “i”로 시작하되 (“iFacilityID”), 주키(primary key)로 사용되는 필드라면 “ID”로 명명한다.<br>￭ 실수형은 “n” (for “numeric”) 으로 시작한다.<br>￭ 날짜형은 “dt” 로 시작한다.<br>￭ 비트형은 “b” 로 시작한다.<br>￭ 모든 테이블은 “ID”라는 이름의 주키(primary key) 필드를 가지고 있어야 한다. 다중 테이블 쿼리에서 필드가 테이블 이름과 함께 구분(“userList.ID”)되므로 테이블 이름과 같이 명명하지 마세요<br>&nbsp;&nbsp;&nbsp;예)  “ID,” 이건 안됨 “userListID”<br>￭ 뷰와 스토어드 프로시저는 “view”와 “proc” 로 시작해서 테이블과 구분짓는다<br>&nbsp;&nbsp;&nbsp;예)  “viewCurrentStaff,” “procCalcDaysLeft”</p>\n</li>\n</ol>\n","categories":["Language"],"tags":[]},{"title":"XML, JSON, BSON, MSGPACK 장,단점 비교","url":"https://yeop-blog.github.io/2017/09/29/2017-09-29-old-blog-post28/","content":"<h5 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a>XML</h5><ul>\n<li><p>장점<br>- 나온지 10년이 넘어 엄청나게 널리 쓰이고 있음</p>\n</li>\n<li><p>단점<br>- 의미를 확인하기 위한 불필요한 TEXT(시작태그 및 닫는태그 등)가 포함 됨<br>- DTO를 사용하기 위해선 반드시 파싱과정을 거쳐야 함</p>\n</li>\n</ul>\n<h5 id=\"JSON\"><a href=\"#JSON\" class=\"headerlink\" title=\"JSON\"></a>JSON</h5><ul>\n<li>장점<br>- 대부분의 언어별 lib지원<br>- 불필요한 XML대비 TEXT가 없어 패킷용량 감소<br>- 대부분의 언어의 기본 Collection type으로 바로 사용 가능</li>\n</ul>\n<h5 id=\"BSON\"><a href=\"#BSON\" class=\"headerlink\" title=\"BSON\"></a>BSON</h5><ul>\n<li>장점<br>- JSON 내용을 Binary로 변환하여 패킷용량 감소</li>\n<li>단점<br>- 아직 JSON이나 XML만큼의 다양한 언어 LIB는 지원하지 않음</li>\n</ul>\n<h5 id=\"MSGPACK\"><a href=\"#MSGPACK\" class=\"headerlink\" title=\"MSGPACK\"></a>MSGPACK</h5><ul>\n<li>장점<br>- JSON보다 훨씬 빠른 속도(BJON비교자료는 없지만 보다 빠름)<br>- 자유로운 DTO 전환<br>- 커넥션 풀 지원으로 단순 메시지 서버 구현 가능</li>\n<li>단점<br>- ANDROID로하기엔 Jboss netty, SLF4J가 포함되어야 하므로 단말기는 반드시 LIB를 로드해야 함<br>- iOS의 Object C는 아직 지원하지 않아 C LIB를 사용해야 함<br>- WEB과 연계가 필요하다면 SESSION에 들어갈 정보에 대한 정리가 필요 함   </li>\n</ul>\n","categories":["Language"],"tags":[]},{"title":"이클립스(Eclipse) 오류 해결법","url":"https://yeop-blog.github.io/2017/09/29/2017-09-29-old-blog-post27/","content":"<p>[Eclipse] 이클립스 오류<br>- [import javax.servlet.* cannot be resolved] or [java.sql cannot be resolved] 해결법<br>- 출처 : <a href=\"http://ilovejsp.blog.me/100124354240\" target=\"_blank\" rel=\"noopener\">http://ilovejsp.blog.me/100124354240</a></p>\n","categories":["Programming","IDE's"],"tags":[]},{"title":"(스압, 데이터 용량 주의) 예전에 우리나라에서 방영해서 봤던 만화 오프닝들","url":"https://yeop-blog.github.io/2017/09/27/2017-09-27-old-blog-post26/","content":"<p>유투브 동영상을 보면서 한번 생각나는 애니 정리 좀 해볼까 해서..</p>\n<p>물론 예전에 방송사에서 했던 애니 위주로 ^^<br>그리고 처음에는 대부분이 여자 캐릭터 위주의 애니일겁니다.. 제가 남자인지라? ㅋㅋㅋㅋ</p>\n<ol>\n<li><strong>세일러문</strong><br>- 크… 남자라면 누구나 다 좋아했던 애니였지 않았나 싶을 정도의… 턱시도 가면은 ㅋㅋㅋ 참.. 멋졌지 ㅠㅠ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/xG6NtaLP2vQ\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>카드캡터 체리(카드캡터 사쿠라)</strong><br>- 만날수 없어 만나고 싶은데 그런 슬픈 기분인걸~ 꺅 = ㅅ=~  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/e6zp5Qob9ko\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>천사소녀 네티(세인트 테일)</strong><br>- 상식적으로는 존재 할 수 없는 사람들이 나오지만 그래도 참 좋아했던 작품 ^^  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/2rZMzLBezZ4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>마법기사 레이어스</strong><br>- 이 애니도 참 좋아라 했지.. 나름 그림체도 섬세했고… 특히 오프닝 노래도 참 좋아라 했던 ^^  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/cRRpswNgemM\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>마법소녀 리나 TRY</strong><br>- 정말이지.. 이 작품은 그냥 최고. 이 한마디로 끗.  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/zbjniSwfCGA\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>큐티 하니</strong><br>- 원래 일본 곡도 오프닝이 이 음악이어서 나름 재미있었던것 같음 ^^  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/nCKHgYRidPU\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>웨딩 피치</strong><br>- 결혼식 옷에 관심이 있었던건 이 때 부터였지 ㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/vN-mWRe8RVg\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>빨간망토 차차</strong><br>- 차차가 변신할때만큼은 너무 이뻤지.. ㅠ_ㅠ 범디기 범디기 범범~ 디기디기 차차~  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/wo5N01RHhy8\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>달려라 하니</strong><br>- 달리기 만화로는 정말이지 이색적으로 성공한 작품? ㅋㅋ 내용이 너무 좋았음..  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/c2sz6JEvg54\" frameborder=\"0\" allowfullscreen></iframe></div>  \n&lt; 이선희 씨가 부른 버전 &gt;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/gWJuKVGdC7Y\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>은비 까비</strong><br>- 이 만화가 뭔가 좋다고 예전에는 그리 좋아했는지.. ㅋㅋㅋ 순수했던거지 뭐 ㅠ_ㅠ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/UXhSI9xPeSQ\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>신비한 바다의 나디아</strong><br>- 나디아가 은근히 매력이.. 이~~뿨 = ㅅ=;;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/05mVD-w7TZA\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>은하철도 999</strong><br>- 기차가 어둠을 헤치고 은하수를 건너면~ 메텔이 이뿨 = ㅅ=;; 모자가 길어서 오해를 많이 사긴 했지만 ㅋㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/LkRCIqdTU1U\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>빨강머리 앤</strong><br>- 주근깨 빼빼마른 빨강머린 앤~ 이것도 즐겨봤던 애니지 ㅋㅋㅋ<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/Ms36z0Wf8nI\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>녹색전차 해모수</strong><br>- 이 애니 참 좋아라 했는데.. 국산 제작 애니치고는 노래도 좋고 작품도 좋고~  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/c-b3fCGtO5w\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>스피드왕 번개</strong><br>- 드래곤 스파이어인가? ㅋㅋㅋㅋ 저 당시 엄청난 미니카? 정확히는 무선자동차려나… 아무튼 붐이 불었지..  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/93WKTX-lN0s\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>달려라 부메랑</strong><br>- 스피드왕 번개 못지 않은 미니카 붐을 일으킨 ㅋㅋㅋㅋ RC카 라고 해야 하나… 암튼 재미있었음~  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/g6oDuZC0H50\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>축구왕 슛돌이</strong><br>- 축구 애니로는 제일 처음 본 애니메이션… 주인공 슛돌이가 훈남인데다가 실력도 좋고 너무 좋았음 ㅠㅠ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/K0tt1ZZf1LA\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>독수리 5형제</strong><br>- 슈파 슈파 슈파 슈파~ ㅋㅋㅋㅋㅋㅋㅋㅋ 엄청 좋아했던 애니..  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/_E_aD--3jRA\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>날아라 슈퍼보드</strong><br>- 치키치키차카차카초코초코초~ 이거 덕분에 양치질을 잘하게 됐다는 애들이 많아졌다는 후문이.. ㅋㅋㅋㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/zq5vFBL2hh4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>피구왕 통키</strong><br>- 이 애니는 우리나라 국민학교 당시 엄청난 피구붐과 불꽃슛 피구공을 팔리게 한 최고의 애니였지..ㅎㅎ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/s7dTPv1VKUk\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>두치와 뿌꾸</strong><br>- 한 치 두치 세치 네치 뿌꾸 빵~ ㅋㅋㅋㅋㅋㅋㅋ 재미있었음 ^^  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/BPIuvjoOHBs\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>포켓몬스터</strong><br>- 요즘은 참 셀 수 없이 종류가 다양해진 포켓몬;; 그러나 난 이때가 제일 좋다!!!  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/q_KdJJR0-Y8\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>요리왕 비룡</strong><br>- 요리에 대한 허황된 꿈을 꾸게 해주는 애니. ㅋㅋㅋㅋㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/xpylAefuhTE\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>영혼기병 라젠카</strong><br>- 나름 게임까지 발매되었던 국산 애니메이션. 근데 아쉽게도 막판에는 흐지부지 되버려서… 아쉬운 ㅠ_ㅠ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/DxFETPe1ufo\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>2020년 우주의 원더키디</strong><br>- 당시 볼때는 우주 애니메이션으로는 거의 처음이지 않았을까 하는… 이제 3년 뒤면 2020년이구만 ㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/tIUK6to1V2M\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>흙꼭두장군</strong><br>- 으아니 이 애니는 ㅠㅠ ㅋㅋㅋㅋㅋ 슬픈 내용의 작품이었지.. 흑흑 ㅠㅠ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/2sY_BvjCyFw\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>꾸러기 수비대</strong><br>- 12간지를 외우게 해준 애니메이션. 물론 재미있었으니 봤겠지만 ^^ 근데 성인이 되서는 또 까먹었네 ;;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/9J_3R2Nphac\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>슈퍼 그랑죠</strong><br>- 애니중에서 최고로 꼽는 애니중 또 하나의 작품. 당시 마법총이 많이 팔렸다지? ㅋㅋㅋㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/Pcr0UKc6fXY\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>영광의 레이서(이후는 사이버 포뮬러)</strong><br>- 자동차 애니메이션계의 한 획을 그은 작품? 시리즈가 많이 있는데 빼놓지 않고 다 본 1인..= ㅁ=;;;<br>&lt; 영광의 레이서 - 기억하기론 아마 이게 사이버 포뮬러 1기 &gt;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/QHreIyd5nYM\" frameborder=\"0\" allowfullscreen></iframe></div>  \n&lt; 싸이버 포뮬라 - 이게 2기 &gt;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/zl2FVjPoerw\" frameborder=\"0\" allowfullscreen></iframe></div>  \n&lt; 이게 3기인가 ;;?? 원판을 봐야 알거 같네요 &gt;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/e8LMrhf_Hy4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>삼국지</strong><br>- 이 버전의 애니를 아시는 분이 얼마나 계실지는 모르겠지만 재미있게 봤었던 작품 ^^  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/U4KsHYtfTc8\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>미래소년 코난</strong><br>- 예전에 만화를 좋아했던 사람이라면 누구나 알 수 밖에 없는 유명한 작품 ^^  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/vgpOzHKBRFQ\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>아기공룡 둘리</strong><br>- 호이 호이~ 둘리는 초능력 내친구~ 국산 애니의 최고봉.  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/lROpRVTSgQk\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>날아라 호빵맨</strong><br>- 히어로 중에서 자기 신체를 아낌없이 주는 불쌍한 히어로 ㅠ_ㅠ;;;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/HdTK1uUcp1c\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>슬램덩크</strong><br>- 농구계의 애니메이션 킹 오브 킹.  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/vC70Yh8MOtI\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>영심이</strong><br>- 그림체가 이쁜것도 아니었는데 왜 그리 좋아했는지 모르겠지만…. 당시 상당히 즐겨봤던 작품 ^^  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/zWLco8Bx1AQ\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>소년기사 라무</strong><br>- 시리즈로 계속 나온거 같은데 나는 아마 이것만 보고 말았던거 같은 ;;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/uxrbmSc2NHM\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>로봇수사대 K-캅스</strong><br>- 여기 나오는 로봇들 완전 좋아 했는데 ㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/tPq_dyQ3GMw\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>요술공주 샐리</strong><br>- 이 노래는.. 자체도 유명하지만.. ‘페리카나 치킨이 찾아왔어요~’ 이거로도 유명한 ;;;; 암튼 OP곡으로는 엄청난 히트를 쳤음.. ㅋㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/4huSKMHjmzo\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>사자왕 가오가이거</strong><br>- 가가가가~ 가가가가~ 가오가이거~ 난 일본판을 기억하고 있구나 ;;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/ZPw7paX6Mv4\" frameborder=\"0\" allowfullscreen></iframe></div>  \n&lt; 일본판 &gt;  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/x-n8F0lrJ3s\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>전설의 용사 다간</strong><br>- 다꽝~ 다꽝~ = ㅁ=;;;;; 으 유치하다 ㅠㅠㅠㅠㅠㅠㅠㅠ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/ubfD42INIH0\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>지구용사 선가드</strong><br>- 로봇 애니류 하면 빠질 수 없는 작품  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/i9TjVzm8SQc\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>아벨 탐험대</strong><br>- 캐릭터들이 드래곤볼…. 아마 같은 작가일거에요. 일본 작품명이 드래곤 퀘스트 인거로 알고 있으니? ㅎㅎㅎ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/om_VwF0dNbY\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>타이의 대모험</strong><br>- 이건 끝까지 보질 않았던거 같은데.. 기억나는건 아방 스트랏슈 ;;??  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/EEQfSSRR99w\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>울트라맨</strong><br>- 이마에 저 별 붙이고 다니고 변신 놀이한다고 삽질을 한 나이가 몇 살이드라 ㅋㅋㅋㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/t7nq47RzYvM\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>마법사의 아들 코리</strong><br>- 저 시크한 눈빛. 저 눈빛에 내가 끌려서 이 애니메이션을 본거 같아.. ㅋㅋㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/-UaZutKy2Y4\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>쾌걸 조로</strong><br>- 검은망토 검은가면 그 이름 쾌걸 조로~ ㅋ 조로 너무 멋졌엉 ㅠㅠ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/tgxtMztr7Rs\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>시간탐험대</strong><br>- 돈데기리기리~ 돈데기리기리~ ㅋ 주전자 완전 박쥐였음 ㅋㅋㅋ 주인이 맨날 바뀌니 ㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/_c_L2CiCLMo\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>꼬마자동차 붕붕붕</strong><br>- 도대체 이 애니를 나 몇살때 본거지 ;;;; 엄청나게 생생하게 기억이 나는데 말이지 … ㅎ…  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/1VDMpDz1HfY\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li><strong>지구방위대 후뢰시맨</strong><br>- 애니메이션은 아니지만 어릴때… 엄청나게 좋아했던 작품임 ㅋㅋㅋㅋ 옛날옛날 한 옛날에 다섯아이가~ ㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/9bqQcJXGXQQ\" frameborder=\"0\" allowfullscreen></iframe></div>\n<br></li>\n<li>응? ㅋㅋㅋㅋㅋㅋㅋ 이건 보너스 ㅋㅋㅋㅋㅋ 기억나는 사람이 있으면 나랑 거의 비슷한 나이대임 ㅋㅋ  <div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/-byqwsFiT_0\" frameborder=\"0\" allowfullscreen></iframe></div>  \n<br></li>\n</ol>\n<p>이 외에도 더 많지만.. 더 적다간 글이 버퍼링 때문에 안 올라갈거 같아서 ㅋㅋ..</p>\n<p>생각해보니 옛날 그리운 작품들이 많네요 ㅠ_ㅠ 보고 싶다..</p>\n","categories":["Ani"],"tags":[]},{"title":"Java Fundamental 정리 - MVC, 고립화, Class, Instance, this","url":"https://yeop-blog.github.io/2017/09/27/2017-09-27-old-blog-post25/","content":"<ul>\n<li><strong>MVC</strong><br>- MVC 패턴 : Model, View, Controller로 돌아가게끔 설계를 하는 패턴(?)<br><br></li>\n<li>고립화 : 접근제어 - 원본 보호를 위해<br><br></li>\n<li>Class와 Instance의 차이점(선언시)<br>- <strong>Class : Static이 가능하다. 바로 사용 가능. 선언 1, 공유가 가능.</strong><br>- <strong>Instance : Static이 불가능. new로 선언해야 함. new 횟수에 비례함. 공유가 불가능(고립)</strong><br>&lt; Class에서 Instance로 접근하는것은 금지(시점이 다르므로) &gt;<br>- 전역변수 → Property(Java), C++에서는 멤버변수의 의미.<br>- 전역함수 → Method(Java), C++에서는 멤버함수의 의미.<br><br></li>\n<li><strong>this</strong><br>- 수첩마다 존재. 여기서 말하는 수첩은 Class라고 봐도 될듯.<br>- 절대적인 값이 아닌 VM이 알고있는 Class의 시작 주소, 가장 가까운 곳을 가리킴.</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - Class, Instance, Construct, Java와 C의 차이.","url":"https://yeop-blog.github.io/2017/09/27/2017-09-27-old-blog-post24/","content":"<ul>\n<li>로딩 역시 정적로딩, 동적로딩이 있다.<br><br></li>\n<li>목적에 맞게 분리(File)<br>- Initialize : 대부분은 데이터의 초기화(설정), 할당<br>- File이 많아지면 Package<br><br></li>\n<li>변수가 많아서 File로 분리(재사용이 가능하게끔) : class<br>–&gt; 분리 후 사용시 불러와 합쳐서 사용 : include<br><br></li>\n<li>import : include 중복을 방지하는 기능(File의 위치를 나타내줌)<br><br></li>\n<li>Class형 : 단순히 묶은거. (변수와 함수(function)의 조합?)<br>- 크기로 따진다면 int, char, byte 등등.. &gt; void, function() &gt; class 로 이야기 할 수 있을듯.<br><br></li>\n<li>Instance(객체) : 변수의 시작(선언), 종료(해제)를 정할 줄 알아야 함.<br>- new를 앞에 붙여서 생성을 한다.<br>- Static으로 선언된 것은 프로그램 시작시 바로 먼저 시작된다.<br>그 외에는 new로 생성이 되야 한다.</li>\n<li>Construct(생성자)<br>ex) Board() { … } &lt; 이런게 그냥 생성자이다. 끗~<br><br></li>\n<li>Java<br>- VM : Virtual Machine<br>- 변수 선언은 실제로???<br>- 변수 → Application → OS (변수 → OS는 바로 갈 수 없음)<br>- OS는 C언어 이기 때문에 변수명이 중복시 문제 발생.</li>\n<li>C와 Java의 차이점<br>- C의 경우 : xxx.c / xxx.h(헤더) ———————————-&gt; OS<br>Compile(소스를 절차화) = cc = gcc<br>- Java의 경우 : xxx.java ——(Compile = javac)——&gt; VM ——(Compile = java(.class))——&gt; OS</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - 전역변수, 지역변수..","url":"https://yeop-blog.github.io/2017/09/25/2017-09-23-old-blog-post23/","content":"<ul>\n<li>{ … } : 수첩이 생김과 동시에 주소가 생김. 사용할 때는 범위가 중요!<br><br></li>\n<li>주소를 안다는 것은 변수를 안다는것과 동일.<br><br></li>\n<li>검색시 초기 인덱스값은 -1, 찾으면 0 이상의 값.<br><br></li>\n<li>index와 sequence는 엄연히 다른 의미의 값.<br><br></li>\n<li>재사용성<br>1) Copy &amp; Paste<br>2) 코드에 주소를 매기기. ex) go to<br>&nbsp;&nbsp;&nbsp;&nbsp;Scope(범위)를 맞춰야?(불일치가 되므로)<br><br></li>\n<li>Project 원하는것 우측 클릭후 Export(Project 추출), Import(Project 입력)해서 사용.<br><br></li>\n<li>전역 변수(Global Variable) : 공유를 위해 쓰는 변수, 프로그램의 시작에서 끝까지 쭉~</li>\n<li>지역 변수(Local Variable) : 한 스콥({…})안에서만 사용을 하고 끝내는 변수</li>\n<li>각 변수의 장단점<br>- 전역변수의 장점 : 공유가 쉽다. / 단점 : 보안이 좋지 않음.<br>- 지역변수의 장점 : 보안이 좋음. / 단점 : 공유가 어렵다. (뭐 당연한 이야기겠지만..;;)<br><strong>&lt;어떤 변수를 쓸지 결정하는것은 분석 때 결정을 하면 된다&gt;</strong><br>- 지역변수 임에도 공유를 할 경우<br>: 파라미터(전달). OS가 값을 가져다가 넣어줌. ex) regist(int sequence)<br><br></li>\n<li>메소드 형 선언<br>- void 형 : null만 담을 수 있는 것.<br>- static 형 : 정적 선언. 당연히 이것이 붙지 않으면 동적 선언. (Java가 동적이기 때문에~)</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - InputStream, OutputStream, SVN설치","url":"https://yeop-blog.github.io/2017/09/25/2017-09-23-old-blog-post22/","content":"<ul>\n<li><p>고정형 길이 : 짧으면 Stop. 적당히 입력하면 공간이 남은채로 진행.</p>\n</li>\n<li><p>읽기 → byte + byte = char → char[] → buffer</p>\n</li>\n<li><p>무언가를 시킴 ↔ 담기 ↔ 변환 ↔ 읽기</p>\n</li>\n<li><p>Composition(구성, 조합) &lt; Inheritance(상속)보다 더 중요! &gt;</p>\n</li>\n<li><p>읽기는 무조건 InputStream. (메모리에서 1byte씩 읽어들이는것)(ex:byte)</p>\n</li>\n<li><p>byte에서 변환 Reader(ex:char)</p>\n</li>\n<li><p>담는 부분 BufferedReader(ex:char[]), BufferedInputStream(ex:byte[])</p>\n</li>\n<li><p>BufferedWriter ——-&gt; Writer ——-&gt; OutputStream<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(char[])&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(char)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(byte)</p>\n</li>\n<li><p>BufferedReader ——-&gt; Reader ——-&gt; InputStream</p>\n</li>\n<li><p>InputStream은 byte, Reader는 char.</p>\n</li>\n<li><p>reader는 read를 1번 또는 2번 또는 n번 할 수 있다.</p>\n</li>\n<li><p>flush() : 꽉 채우지 않더라도 뿌리라고 하는 메소드.</p>\n</li>\n<li><p>Plug in 설치.<br>- Help - install new software - work with (helios~) 선택 - Collaberation - subversive SVN Team Provider - next 클릭(2번) - 동의후 Finish!</p>\n</li>\n<li><p>서버에서의 흐름에 대한 부분.<br>- commit : 서버에 바뀐 내용을 적용<br>- update : 서버에서 갖고와 내용을 변경<br>- merge : 병합<br>- conflict : merge 에러가 날 경우(?)</p>\n</li>\n<li><p>SVN 설치후 적용<br>- window - Preferences - Team - SVN 클릭 - SVN kit 최신버전, Native JavaHL 최신버전 - Finish.<br>(이후 show에서 SVN - SVN Repositories 선택하여 창을 보이게끔 하고 SVN 추가)</p>\n</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - 개발환경, 설정","url":"https://yeop-blog.github.io/2017/09/25/2017-09-23-old-blog-post21/","content":"<ul>\n<li>개발환경<br>- JRE : Java Runtime Environment. 흔히 말하는 자바 런타임 환경. <a href=\"http://www.java.com/ko/download/chrome.jsp?locale=ko&amp;host=www.java.com\" target=\"_blank\" rel=\"noopener\">[다운로드]</a><br>- JDK : Java Development Kit. 자바 개발 도구. 자바로 개발하려면 필수로 설치. <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"noopener\">[다운로드]</a><br>- IDE : Integrated Development Environment. 통합 개발 환경. 여기서는 Eclipse가 한 예이다. <a href=\"http://www.eclipse.org/downloads/\" target=\"_blank\" rel=\"noopener\">[다운로드]</a><br><strong>&lt;설치 순서는 JRE → JDK → IDE 순으로 설치하면 된다&gt;</strong></li>\n</ul>\n<ul>\n<li>되도록 <strong>폴더는 아래와 같이 정해서 설치</strong> 하면 나중이 편하다!<br>c:/Develop/(프로젝트명)/jdk<br>c:/Develop/(프로젝트명)/jre<br>c:/Develop/(프로젝트명)/ide<br>&lt;물론 각 폴더명에 맞게 jdk, jre, ide를 설치&gt;  </li>\n</ul>\n<ul>\n<li>이클립스 설치후 <strong>workspace폴더</strong> 역시 아래와 같이 정해두면 좋다!<br>c:/Project/(프로젝트명)/workspace</li>\n</ul>\n<ul>\n<li><strong>이클립스 설치후 아래와 같이 설정</strong> 을 맞추고 시작하면 매우 좋다!(이클립스 환경설정)<br>- 환경설정은 Window - Preferences로 들어감.<br>General - workspace - Text file encoding - other에 EUC-KR<br>General - workspace - New text file line delimeter (서버 환경 설정에 맞춰야 함)<br>General - Editors - Text Editors - Displayed tab width (보통 4 or 2)<br>General - Editors - show line numbers 체크 (옆에 숫자가 표시 되게끔 하는것)<br>General - Content types - Text - Java Source File - Default encoding에 EUC-KR 입력후 Update 클릭<br>Java - installed JREs 에서 jdk설정<br>Java - Compilers 에서 level을 jdk버전에 맞게 설정</li>\n</ul>\n<ul>\n<li><strong>Project, Package, File, 변수</strong><br>- Project 이름 : 각 프로젝트 이름에 맞게끔 알아서~ (ex : JDK_01_IO)<br>- Package 규칙 : 회사명.부서명.프로젝트명.모듈명 순으로 폴더 구조 처럼 정하는것이 좋다. 소문자로 할것. (ex:net.bit.lecture)<br>- File 이름 : 각 성격에 맞는 파일명을 쓸 것. (ex : IOExecuter, BoardExecuter)<br>- 변수의 경우 소문자로 시작. (ex : boardExecuter)</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - 설계(Design)","url":"https://yeop-blog.github.io/2017/09/25/2017-09-23-old-blog-post20/","content":"<h5 id=\"여기서-설계는-게시판을-예로-들어서-설명합니다\"><a href=\"#여기서-설계는-게시판을-예로-들어서-설명합니다\" class=\"headerlink\" title=\"여기서 설계는 게시판을 예로 들어서 설명합니다.\"></a>여기서 설계는 게시판을 예로 들어서 설명합니다.</h5><ul>\n<li>기본적인 설계<br>1) 사용자가 실행<br>&nbsp;&nbsp;&nbsp;1-1) 자원 생성(어느 시점에서 변수 선언할지를 정함)<br><u>2) 인사말 출력 3) 메뉴 출력 4) 입력폼 출력</u><br>: 위 3가지 while(true) 무한루프로..<br>5) 입력 + 처리요청<br>6) 추출(b=a;)<br>7) 유효성 검사(if)<br>8) 분기(switch)<br>9) 인사말 출력<br>&nbsp;&nbsp;&nbsp;9-1) 자원 해제<br>10) 종료<br><br></li>\n<li>설계에 따른 예제(설정)<br>1-1) 자원 생성<br>: boardList → char[][][], 길이는 9<br>&nbsp;&nbsp;index → int = 0 (저장위치 설정)<br>&nbsp;&nbsp;sequence → int = 1 (게시물 번호 설정)<br>2) 인사말 출력<br>: “게시물 관리 시스템 입니다.(엔터)” 출력<br>3) 메뉴 출력<br>: “등록 : R(엔터)”<br>&nbsp;&nbsp;”목록조회 : L(엔터)”<br>&nbsp;&nbsp;”상세조회 : V(엔터)”<br>&nbsp;&nbsp;”수정 : E(엔터)”<br>&nbsp;&nbsp;”삭제 : D(엔터)”<br>&nbsp;&nbsp;”종료 : Q(엔터)”<br>4) 입력폼 출력<br>: “선택 : “<br>5) 입력 + 처리요청<br>: 메뉴를 선택, OS에 따라 틀림.<br>6) 추출<br>7) 유효성 검사<br>: 여기서는 간단히 입력 유/무만 검사<br>8) 분기<br>9) 인사말<br>: “안녕히 가세요.(엔터)” 출력<br>9-1) 자원 해제<br>: bufferedReader, bufferedWriter, inputStream, outputStream, reader, writer<br>10) 종료</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - CRUD, 배열, 메모리, 자료구조","url":"https://yeop-blog.github.io/2017/09/25/2017-09-23-old-blog-post19/","content":"<ol>\n<li>CRUD<ul>\n<li>C(Create) : 선언, 할당 부분.</li>\n<li>R(Read) : 시작주소와 길이가 중요하다. (대입 연산자의 오른쪽)</li>\n<li>U(Update) : 대입 연산자의 왼쪽</li>\n<li>D(Delete) : 할당 부터 지워야 함! → 그 후에 선언 삭제.<br><br></li>\n</ul>\n</li>\n<li>배열<br>int[][] c;<br>c = new int[2][];<br>c[0] = new int[3];<br>c[1] = new int[2];<br>c[1][0] = 5;<br>…<br>int[][][] d;<br>d = new int[2][][];<br>d[0] = new int[2][];<br>d[0][0][1];<br>&lt;자세한 내용은 4번째 수업에 대한 부분을 참고&gt;<br><br></li>\n<li>메모리<br>- CPU는 반복과 판단으로 이루어진다.<br>* 판단<br>if() { } else { } / if() { } else if() { } else { }<br>switch() { case x: case y: default: }<br>* 반복<br>while() { } / do { } while();<br>for(시작값; 증가치; 종료조건){ }<br><br></li>\n<li>자료구조<br>- Create<br>: index(0부터 이상의 값을 가짐) 등록 +1 / 삭제 -1, Tree구조는 등록이 느림(검색에 적합)<br>- Read<br>: 검색(Search) → 정렬(Sorting) → 저장 위치(indexing(위치정보를 기억해두는))를 알아두어야 함(기준점) → 위치와 찾을값을 비교(분할기법)<br>- Update<br>: 메모리 로드가 힘들어짐(?)<br>- Delete<br>: 주소를 기억하는 방식(Linked List) ← 검색은 느리다.</li>\n</ol>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - 아키텍처","url":"https://yeop-blog.github.io/2017/09/23/2017-09-23-old-blog-post18/","content":"<ul>\n<li>입력 → 데이터 유지 → 처리<br><br></li>\n<li>출력<br><br></li>\n<li>Computer 단계별 구조는 다음과 같다.<br><strong>OS &gt; Application → API → Kernel → HAL</strong><br>- OS : 하드웨어 제어를 위한 부분<br>- HAL : Hardware Abstract Layer. 하드웨어 추상 계층.<br>- API : Application Programming Interface<br><br></li>\n<li>a = read();<br>- a가 가르치는 위치의 값이 read의 값이 된다.(a가 read값이 된다는 것이 아님)<br>1) 임시 저장공간에 값을 대입<br>2) a의 위치 값으로 이동<br>3) 임시 저장공간 값을 위치 값에 넣음<br><br></li>\n<li>\\r = CR = 13 , \\n = LF = 10<br>- 개행 문자의 경우 위와 같은 값을 가진다.<br><br></li>\n<li><strong>입력의 경우 전송에 있어서 4가지 규칙</strong>에 따라 전송하는것이 좋다.<br>1) 길이를 정하기<br>2) 끝을 표시하기(ex:\\n, 비슷한 방법으로는 null)<br>3) 시간으로 끊기(무한대기에서 일정 시간대기후 끊게끔) → 이미지 파일을 예로..<br>4) 미리 정보를 보내기(ex:헤더 파일)<br><br></li>\n<li><strong>출력의 경우 시작 주소</strong>를 알면 됨.<br><br></li>\n<li>Type에는 여러가지 유형이 있다.<ul>\n<li><strong>boolean</strong>(8bit = <strong>1byte</strong>)</li>\n<li><strong>char</strong>(16bit = <strong>2byte</strong>)</li>\n<li><strong>byte</strong>(8bit = <strong>1byte</strong>)</li>\n<li><strong>short</strong>(16bit = <strong>2byte</strong>)</li>\n<li><strong>int</strong>(32bit = <strong>4byte</strong>)</li>\n<li><strong>long</strong>(64bit = <strong>8byte</strong>)</li>\n<li><strong>float</strong>(32bit = <strong>4byte</strong>)</li>\n<li><strong>double</strong>(64bit = <strong>8byte</strong>)<br>&lt;<strong>위 자료형 외에는 모두 32bit = 4byte 자료형</strong>이라고 생각하면 된다&gt;<br>&lt;<strong>위 자료형 외에는 null값이 가능</strong>하다&gt; → 어딘가의 주소를 가르키지 않는다.&gt;</li>\n</ul>\n</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - 문제인식, 정보수집, 분석","url":"https://yeop-blog.github.io/2017/09/23/2017-09-23-old-blog-post17/","content":"<ol>\n<li><p>문제인식</p>\n<ul>\n<li>범위에 따라 인식이 틀려짐</li>\n<li>재사용성이 중요(미리 예측이 가능해야 함)</li>\n<li>Stake holder(이해 당사자)를 결정하는 단계 ← 이것에 따라 절차가 변경됨<blockquote>\n<p>이해당사자란? -&gt; 이득과 손해 보는 User들</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>정보수집</p>\n<ul>\n<li>절차(Procedure) + Data<br><br></li>\n</ul>\n</li>\n<li>분석(비서를 예로 들어서 생각하면 좋다)<ul>\n<li>비서가 해야 할 일의 약속 = Protocol</li>\n<li>Protocol? → TCP/IP, HTTP, FTP 등등..</li>\n<li>Program = System</li>\n<li>User = 말 그대로 사용자~</li>\n<li>용어집&lt;여기서는 게시판을 예로 들어서 설명&gt;<br>1) 메모작성 → 등록<br>2) 훑어보기 → 목록 조회<br>3) 자세히 보기 → 상세 조회<br>4) 메모 수정 → 수정<br>5) 버리기 → 삭제<br>6) 게시판 → 게시물 목록<br>7) 포스트잇 → 게시물 정보  </li>\n<li>조회 : 저장한 것을 갖고 오는 것(시작위치 알고 있음)</li>\n</ul>\n</li>\n</ol>\n<p>&lt;등록&gt;<br>1) 사용자는 등록을 요청합니다.(Request)<br>2) 시스템은 입력폼을 출력합니다.<br>3) 사용자는 입력합니다(메모에 적는 것) - 내용, 제목 등등..<br>4) 사용자는 처리를 요청합니다.<br>5) 시스템은 데이터를 추출합니다. (입력한것을 갖고 오는 것)<br>6) 시스템은 데이터의 유효성을 검사합니다.<br>7) 시스템은 저장 처리를 합니다. (절차가 더 남이있다는 뜻)<br>&nbsp;&nbsp;&nbsp;&nbsp;7-1) 시스템은 게시물 번호를 조회합니다.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7-1-1) 현재 번호 조회<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7-1-2) 번호 증가<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7-1-3) 저장<br>&nbsp;&nbsp;&nbsp;&nbsp;7-2) (데이터를)묶는다. → 다음번에 찾기 쉽도록..<br>&nbsp;&nbsp;&nbsp;&nbsp;7-3) 저장<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7-3-1) 현재 저장 위치 조회(게시물 번호가 X)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7-3-2) 저장 위치 증가<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7-3-3) 저장(위치 정보)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7-3-4) 저장(게시물 정보)<br>8) 시스템은 등록 결과를 출력합니다.</p>\n<p>&lt;목록 조회&gt; : 시작 주소를 통해 검색(loop, 판단문)<br>1) 사용자는 목록 조회를 요청합니다.<br>2) 시스템은 조회를 합니다.<br>3) <strong>시스템은 유효성 검사를 합니다.</strong><br>4) 시스템은 목록을 출력합니다.  </p>\n<p>&lt;상세 조회&gt;<br>1) 사용자는 상세 조회를 요청합니다.<br>2) 시스템은 입력폼을 보여줍니다.<br>3) 사용자는 입력합니다.<br>4) 시스템은 데이터를 추출합니다.<br>5) 게시물 목록으로 이동합니다.(시작주소)  </p>\n<p>* 에러는 추출, 조회 에서만 걸러낸다.<br>* 유니크(Unique) - 고유번호<br>* 아이디(Id) = 시퀀스(sequence) = Auto increment(자동 증가) = 식별자<br>* 변수 선언은 loop밖에서 선언하는것이 좋다(메모리 부족현상 방지)<br>* 트리 구조는 검색, 링크 구조는 삭제에 적합하다.</p>\n","categories":["Language","Java"],"tags":[]},{"title":"Java Fundamental 정리 - 방법론, 직업군, 아키텍처","url":"https://yeop-blog.github.io/2017/09/23/2017-09-23-old-blog-post16/","content":"<ol>\n<li><p>방법론<br>문제인식 → 정보수집 → 분석(Analysist) → 아키텍쳐(Architecture) → 설계(Design) → 구현(Implementation) → 테스트(Test) → 배치(Deploy) → 서비스(Service) → 유지보수 → 문제인식</p>\n<p>1) <strong>문제인식</strong> : 무엇이 문제인지 본질적인 부분을 파악하는 것<br>2) <strong>정보수집</strong> : 문제에 대한 원인을 파악하는 것</p>\n<ul>\n<li>절차 + Data = 정보수집  </li>\n</ul>\n<p>3) <strong>분석</strong> : 정보수집을 시키는 과정, 커뮤니케이션이 필요한 부분.</p>\n<ul>\n<li>기본흐름</li>\n<li>예외흐름(예외시 대신할수 있는 행동) - 에러와의 차이점 : 인지하고 있는지 없는지의 차이.</li>\n</ul>\n<p>4) <strong>아키텍쳐</strong> : 분석을 위한 도구<br>5) <strong>설계</strong> : 말 그대로 설계</p>\n<ul>\n<li>UI : 이성적 파트(IA:Information Architecture) : 정보를 구조화</li>\n<li>영속 : 영구는 아니지만 오래 가는..</li>\n<li>Program 설계</li>\n</ul>\n<p>6) <strong>구현</strong> : 생각만이 아닌 옮기는 작업. 쉽게 말해 코딩.<br>7) <strong>테스트</strong> : 어떤 일이 있을지 예측하는 단계</p>\n<ul>\n<li>Unit(모듈 확인 과정) : 하나하나 개별적으로 확인 하는 것</li>\n<li>통합 : 전체적으로 확인 해보는 것</li>\n<li>CBT(Close Beta Test), OBT(Open Beta Test) : OBT로 갈수록 다양한 버그들이 발견될 가능성이 높음</li>\n</ul>\n<p>8) <strong>배치</strong> : 마무리 작업<br>9) <strong>서비스, 유지보수</strong> : 정식으로 운영 시작 및 유지보수<br><br></p>\n</li>\n<li>직업군<ul>\n<li>문제인식 - 사업가</li>\n<li>정보수집 - 마케터</li>\n<li>분석 - 분석가</li>\n<li>설계 - 디자이너</li>\n<li>구현 - 코더</li>\n<li>테스트 - 테스터<br><br></li>\n</ul>\n</li>\n<li>아키텍처(Arhcitecture)<ul>\n<li><strong>절차 + Data</strong><br>1) 절차 : 비지니스 로직, 데이터 처리 로직<br>2) Data : 정해진 규칙(영속) → Memory, CPU, 자료구조, File이 Data에 속한다.</li>\n<li><strong>Data를 다루는 것</strong>은 <strong>CRUD</strong>만 알고 있으면 된다.<br>1) C(Create) : Data를 쓰는 것.<br>2) R(Read) : Data를 올리는 것.<br>3) U(Update) : Data를 수정하는 것.<br>4) D(Delete) : Data를 삭제하는 것.  </li>\n<li>a = 1 <strong>연산순서</strong>는 다음과 같다.<br>1) 우선 임시공간에 1을 올린다.(read)<br>2) a는 가만히 선언만 하고<br>3) 대입 연산자(=) 이후 a 시작주소에 1이 들어간다.  </li>\n<li><strong>자료구조</strong> : 알고리즘 정리를 하는 작업. Loop 수를 줄이는 작업. CRUD를 빠르게 하는 작업.</li>\n<li><strong>알고리즘</strong> : 절차</li>\n<li><strong>RAM + ROM = 하드디스크</strong> (정 + 반 = 합)</li>\n</ul>\n</li>\n</ol>\n","categories":["Language","Java"],"tags":[]},{"title":"5장. 동적 웹 페이지(자바스크립트 라이브러리)","url":"https://yeop-blog.github.io/2017/09/23/2017-09-23-old-blog-post15/","content":"<ol>\n<li><p>다양한 라이브러리가 있지만 여기서 소개하는 것은 <strong>jQuery라이브러리</strong>를 사용한다.</p>\n<ul>\n<li>jQuery라이브러리 외에도 YUI(Yahoo User Interface), Prototype, Dojo Toolkit, Mootools 등이 있다.</li>\n</ul>\n</li>\n<li><p>jQuery의 장점  </p>\n<ul>\n<li>상대적으로 <strong>작은 파일 크기</strong></li>\n<li>웹 디자이너에게 친숙함</li>\n<li>신뢰성</li>\n<li><strong>무료</strong></li>\n<li><strong>개발자 커뮤니티가 활성화</strong> 되어 있다는 점</li>\n<li><strong>플러그인</strong></li>\n</ul>\n</li>\n<li><p>jQuery 파일은 3가지 종류가 있다.</p>\n<ul>\n<li>Uncompressed(압축안함)</li>\n<li>Packed(압축)</li>\n<li><strong>Minified(최소화)</strong><br>1) 보통은 Minifed 버전의 jQuery 파일을 다운 받아 쓰는것이 좋다.<br>2) 사용하는 방법은 <code>&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;</code> 이런식으로 선언하고 사용하면 된다.</li>\n</ul>\n</li>\n<li><p>HTML 요소 선택</p>\n<ul>\n<li><p>jQuery의 기본적인 문법은 아래와 같다.  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'selector'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>예를 들어 banner라는 id를 가진 태그를 선택 하려면 아래와 같다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'#banner'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>태그 내 속성을 아래와 같이 변경을 할 수 있다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'#banner'</span>).html(<span class=\"string\">'&lt;h1&gt;제목 크기를 변경하였습니다.&lt;/h1&gt;'</span>);</span><br><span class=\"line\">jQuery(<span class=\"string\">'#banner'</span>).html(<span class=\"string\">'&lt;h1&gt;제목 크기를 변경하였습니다.&lt;/h1&gt;'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>기존의 DOM방식과 jQuery방식의 차이를 아래 예제를 통해 보면 쉽게 알 수 있다.<br>1) DOM 방식 : <code>var result = document.getElementById(&#39;message&#39;);</code><br>2) jQuery 방식 : <code>var result = $(&#39;#message&#39;);</code></p>\n</li>\n<li>HTML 요소 선택도 차이점을 보여준다.<br>1) DOM 방식 : <code>var linksList = document.getElementsByTagName(&#39;a&#39;);</code><br>2) jQuery 방식 : <code>var linksList = $(&#39;a&#39;);</code></li>\n<li>클래스를 선택할때는 다음과 같이 하면 된다.<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'.submenu'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>고급 선택자</p>\n<ul>\n<li><p>하위 선택자</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'#navBar a'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>자식 선택자</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'body &gt; p'</span>) <span class=\"comment\">// 여기서 &lt;body&gt;태그보단 안에 &lt;p&gt;태그가 속해 있는 경우</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>인접 형제 선택자</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'h2 + div'</span>) <span class=\"comment\">// 실제로 써 봐야 알듯..?</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>속성 선택자</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'img[ alt]'</span>) <span class=\"comment\">// alt 속성이 있는 &lt;img&gt;태그를 찾는 경우</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>속성=값</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'input[ type=text]'</span>) <span class=\"comment\">// 텍스트 박스만 선택하고 싶은 경우</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>속성^=값</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'a[ href^=http://]'</span>) <span class=\"comment\">// 외부 사이트 링크를 찾고 싶은 경우</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>속성$=값</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'a[ href$=.pdf]'</span>) <span class=\"comment\">// pdf파일을 가르키는 링크를 찾고 싶은 경우</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>속성*=값</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'a[ href*=daum.net]'</span>) <span class=\"comment\">// daum.net을 가르키는 모든 링크를 찾고 싶은 경우</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>jQuery 필터(이후 부터는 각 메소드들의 사용법 및 설명만 참고함)</p>\n<ul>\n<li><p>:even / :odd<br>: 특정 그룹에서 짝수 또는 홀수 번째의 HTML 요소 선택</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'tr:even'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>:not()<br>: 특정 선택자에 해당하지 않는 HTML 요소 선택</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'a:not(.navButton)'</span>); <span class=\"comment\">// navButton 클래스가 없는 모든 &lt;a&gt; 태그 선택</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>:has()<br>: 또 다른 선택자를 가진 HTML 요소 선택</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'li:has(a)'</span>) <span class=\"comment\">// &lt;a&gt; 태그 내부에 포함된 &lt;li&gt; 태그를 찾을때</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>:contains()<br>: 특정 텍스트를 포함하고 있는 HTML 요소 선택</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'a:contains(클릭하세요!)'</span>) <span class=\"comment\">// 클릭하세요! 라는 텍스트가 있는 링크를 찾을때</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>:hidden<br>: 숨겨진 HTML 요소를 선택</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'div:hidden'</span>).show();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>:visible<br>: hidden과는 반대로 화면상에서 보이는 HTML 요소를 선택</p>\n</li>\n</ul>\n</li>\n</ol>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"5장. 동적 웹 페이지(HTML 요소, DOM에 관해)","url":"https://yeop-blog.github.io/2017/09/23/2017-09-23-old-blog-post14/","content":"<ol>\n<li><p>컨텐츠나 HTML을 수정하려면 크게 2가지 과정을 거쳐야 한다.</p>\n<ul>\n<li>페이지의 HTML 요소를 얻어야 한다.</li>\n<li>HTML 요소로 무엇인가를 합니다. 여기서 무엇인가는 클래스 속성 추가/제거, HTML 요소 속성 변경, 새 컨텐츠 추가, HTML 요소 제거, HTML 요소에서 정보 추출 등이 있다.</li>\n</ul>\n</li>\n<li><p>문서 객체 모델(DOM)<br><strong>DOM은 Document Object Model의 약자이다.</strong><br>DOM은 자바스크립트가 웹 페이지에 있는 <strong>HTML 요소와 통신하기 위해서 필요한 정보를 제공</strong>한다.<br>웹 브라우저는 태그(tag), 속성(attribute), 텍스트(node)의 조직화된 집합체로 구성되어 있다고 볼 수 있다.</p>\n</li>\n<li><p>HTML 요소 선택</p>\n<ul>\n<li><p><strong>getElementById()</strong><br>: 고유한 id를 가진 단일 노드를 찾을 때 쓰는 메소드.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'header'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 해당하는 페이지에서 'header'라는 id가 들어간 태그를 찾아라.</span></span><br><span class=\"line\"></span><br><span class=\"line\">OR</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> looker = <span class=\"string\">'body'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foundNode = <span class=\"built_in\">document</span>.getElementById(looker);</span><br><span class=\"line\"><span class=\"comment\">// 'body'라는 id가 들어간 태그를 찾아라</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>getElementsByTagName()</strong><br>: 여러개의 HTML 요소를 찾아야 할 때 쓰는 메소드.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> pageLinks = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'a'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 이 페이지에서 &lt;a&gt; 태그를 찾아 pageLinks에 저장하라.</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>innerHTML</strong><br>: 특정 노드 내부의 코드 검색 또는 노드 내부의 컨텐츠를 바꾸는것도 가능.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> headLine = <span class=\"built_in\">document</span>.getElementsById(<span class=\"string\">'header'</span>);</span><br><span class=\"line\">headLine.innerHTML = <span class=\"string\">'원하는 HTML을 입력합니다.'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 'header'라는 id를 가진 HTML 요소 컨텐츠는 '원하는 HTML을 입력합니다.'로 바뀐다.</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>DOM의 문제<br>브라우저 종류에 따라 각기 다르게 해석하는 부분이 있기 때문에 이런 부분에 있어서 생각을 해볼 필요는 있다.</p>\n</li>\n</ol>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"4장. 문자, 숫자, 날짜 다루기","url":"https://yeop-blog.github.io/2017/09/23/2017-09-23-old-blog-post13/","content":"<ol>\n<li><p>문자열의 대,소문자 바꾸는 메소드</p>\n<ul>\n<li>문자열을 <strong>소문자에서 대문자</strong>로 바꾸고 싶은 경우 : <strong>.toUpperCase();</strong></li>\n<li>문자열을 <strong>대문자에서 소문자</strong>로 바꾸고 싶은 경우 : <strong>.toLowerCase();</strong>  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">answer.toLowerCase();</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><strong>문자열을 검색</strong>하고 싶은 경우 <strong>.indexOf(‘찾는 문자열’)</strong> 메소드를 사용한다.  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">browser.indexOf(<span class=\"string\">'MSIE'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>문자열의 일부</strong>를 떼어내려면 <strong>slice()</strong> 메소드를 사용한다.  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">var</span> url = <span class=\"string\">'http://www.sawmac.com'</span>;</span><br><span class=\"line\">url.slice(<span class=\"number\">7</span>); ==== 실행후 ====&gt; www.sawmac.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>문자열의 패턴</strong>을 찾으려면 <strong>정규표현식(regular expression)</strong>을 알아야 한다.<br>&lt; 자바스크립트 책 P150 ~ 168까지 참고할것 &gt;</p>\n</li>\n<li><p><strong>문자열을 숫자로 변환</strong>하는 방법에는 다음과 같은 방법이 있다.  </p>\n<ul>\n<li><p><strong>Number()</strong> : 전달된 문자열을 숫자로 변환</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'3'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">'4'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> total = <span class=\"built_in\">Number</span>(a) + <span class=\"built_in\">Number</span>(b); <span class=\"comment\">// 7</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>parseInt()</strong> : 텍스트를 포함하고 있으면 그 부분은 제외하고 숫자로 변환  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"string\">'20살'</span>;</span><br><span class=\"line\">age = <span class=\"built_in\">parseInt</span>(age, <span class=\"number\">10</span>); <span class=\"comment\">// 20</span></span><br><span class=\"line\"><span class=\"comment\">//여기서 age 콤마 뒤에 10은 10진수로 변환한다는 것을 의미한다.</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>parseFloat()</strong> : parseInt()와 비슷하지만, 소수점을 포함한 문자열에 사용할 수 있다  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> space = <span class=\"string\">'4.5제곱미터'</span>;</span><br><span class=\"line\">space = <span class=\"built_in\">parseFloat</span>(space); <span class=\"comment\">// 4.5</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><strong>숫자인지 확인</strong>을 하려면 전에 앞서 언급했던 <strong>isNaN()</strong> 메소드를 사용한다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"string\">'10'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">isNaN</span>(x))&#123;</span><br><span class=\"line\">      <span class=\"comment\">//숫자가 아닐 때</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">//숫자일 때</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>반올림</strong>을 해야 하는 경우에는 <strong>round()</strong> 메소드를 사용한다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">10.25</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> roundNum = <span class=\"built_in\">Math</span>.round(num); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>올림</strong>을 해야 하는 경우에는 <strong>ceil()</strong>, <strong>내림</strong>을 해야 하는 경우에는 <strong>floor()</strong> 메소드를 사용한다.</p>\n</li>\n<li><p><strong>소수점 자리 고정</strong>을 해야 할 경우 <strong>toFixed()</strong> 메소드를 사용한다. (숫자에만 사용 가능)</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> avg = <span class=\"number\">82</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> printAvg = avg.toFixed(<span class=\"number\">2</span>); <span class=\"comment\">// 82.00</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> avg2 = <span class=\"number\">81.289</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> printAvg2 = avg2.toFixed(<span class=\"number\">2</span>); <span class=\"comment\">// 81.29 (지정한 자리수보다 많으면 반올림 되서 나온다)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>무작위 숫자</strong>를 만들려면 <strong>Math.random()</strong> 메소드를 사용한다.</p>\n</li>\n<li><p><strong>현재 날짜와 시간</strong>을 구할때는 <strong>Date 객체</strong>를 사용한다. Data 객체를 생성후 관련 메소드를 사용할 수 있다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> year = now.getFullYear();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>년도 : getFullYear() -&gt; 2012년</li>\n<li>월 : getMonth() -&gt; 월은 0이 1월 11이 12월을 의미한다.</li>\n<li>일 : getDate() -&gt; 1부터 31일까지</li>\n<li>요일 : getDay() -&gt; 요일은 0이 일요일, 6이 토요일을 의미한다.</li>\n<li>시간 : getHours() -&gt; 0부터 23까지의 숫자로 기존 24시 체계와 동일하다.</li>\n<li>분 : getMinutes() -&gt; 0부터 59분까지</li>\n<li>초 : getSeconds() -&gt; 0부터 59초까지</li>\n<li>getTimes() -&gt; 1970년 1월 1일 0시부터 초단위로 계산한 시간을 나타냄</li>\n</ul>\n</li>\n</ol>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"3장. 프로그램에 로직과 제어 추가","url":"https://yeop-blog.github.io/2017/09/22/2017-09-22-old-blog-post12/","content":"<ol>\n<li><p>자바스크립트에는 조건문을 추가하여 아래와 같은 명령을 수행할 수 있다.</p>\n<ul>\n<li><strong>폼 유효성 검사</strong></li>\n<li><strong>드래그 앤 드롭</strong></li>\n<li><strong>입력값 검증</strong></li>\n</ul>\n</li>\n<li><p>if문의 사용법은 아래와 같이 다양하게 쓸 수 있다.</p>\n<ul>\n<li><code>if(조건) { }</code>  </li>\n<li><code>if(조건) { } else { }</code>  </li>\n<li><code>if(조건) { } else if(조건) { } else { }</code>  </li>\n<li>조건에는 AND연산자(&amp;&amp;)와 OR(||)연산자, 조건 부정(!)등이 들어갈 수 있다.</li>\n</ul>\n</li>\n<li><p><strong>루프를 이용하여 반복 작업</strong> 을 할 수도 있다.<br><code>while(조건) { }</code><br><code>do { } while(조건);</code></p>\n</li>\n<li><p>함수 : 유용한 코드를 재사용 가능한 명령으로 바꾸기<br>함수의 기본 구조는 아래와 같다.  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">functionName</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//실행할 자바스크립트 코드</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//Example</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printToday</span>(<span class=\"params\"> &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">      var today = new Date(</span>);</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"title\">document</span>.<span class=\"title\">write</span>(<span class=\"params\">today.toDateString(</span>));</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>실행을 하려면 <code>printToday();</code></p>\n</li>\n<li><p>함수에 정보를 건네줄 때는 <strong>파라미터(parameter)</strong>를 이용하면 된다.<br>기본 구조는 아래와 같다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">functionName</span>(<span class=\"params\">parameter</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//실행할 자바스크립트 코드</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//Example</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">print</span>(<span class=\"params\">message</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.write(message);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>실행을 하려면 <code>print(&#39;Hello World!&#39;);</code><br>파라미터 값은 여러개 추가가 가능하다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">functionName</span>(<span class=\"params\">parameter1, parameter2, parameter3</span>) </span>&#123; &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>함수에서 정보를 가져 올때는 return을 이용하면 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">functionName</span>(<span class=\"params\">parameter</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//실행할 자바스크립트 코드</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//Example</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> TAX = <span class=\"number\">80</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calculateTotal</span>(<span class=\"params\">quantity, price</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> total = quantity * price * (<span class=\"number\">1</span>+TAX);</span><br><span class=\"line\">      <span class=\"keyword\">var</span> formattedTotal = total.toFixed(<span class=\"number\">2</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> formattedTotal;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> saleTotal = calculateTotal(<span class=\"number\">2</span>, <span class=\"number\">16</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.write(<span class=\"string\">'Total cost is : $'</span> + saleTotal);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"2장. JavaScript 문법","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post11/","content":"<h5 id=\"문장\"><a href=\"#문장\" class=\"headerlink\" title=\"문장\"></a>문장</h5><p>자바스크립트에서 문장(Statement)은 프로그램의 한 단계를 나타내는 기본 프로그래밍 단위. 예를 들어..<br><code>alert(&#39;hello world!&#39;);</code><br>라는 하나의 문장은 hello world! 라는 메시지가 쓰인 경고창을 엽니다.</p>\n<h5 id=\"명령어\"><a href=\"#명령어\" class=\"headerlink\" title=\"명령어\"></a>명령어</h5><p><code>alert()</code>같은 명령어를 함수(function) 또는 메소드(methods)라고 한다.<br><code>isNaN()</code>같은 메소드는 특정 값이 숫자인지 아닌지 체크하는 메소드로, 방문객이 숫자로 대답해야 하는 경우 쓰면 유용하다.<br>그 외에도 여러 함수들이 있지만 나중에 필요할 때 사용하면서 확인을 해볼것.</p>\n<h5 id=\"자료형\"><a href=\"#자료형\" class=\"headerlink\" title=\"자료형\"></a>자료형</h5><p>자바스크립트의 가장 일반적인 3가지 자료형은 숫자(number), 문자열(string), 부울값(boolean)이 있다.  </p>\n<ul>\n<li><strong>숫자</strong><br>우리가 일반적으로 알고 있는 숫자 체계와 거의 비슷하다고 볼 수 있다.<br>아래와 같이 연산자(operation)이 들어간 계산도 가능하다.<br>ex) <code>document.write(5+15);</code>  </li>\n<li><strong>문자열</strong><br>기본적으로 위에서 언급한 <code>alert(&#39;hello world!&#39;)</code>라는 메소드 안에 들어가 있는 문자열을 의미한다.<br>문자열을 감쌀때는 큰 따옴표(“…”)와 작은 따옴표(‘…’) 둘 다 사용이 가능하다.  </li>\n<li><strong>부울값</strong><br>흔히 알고 있는 true 또는 false 이 2가지 값을 의미한다.</li>\n</ul>\n<h5 id=\"변수\"><a href=\"#변수\" class=\"headerlink\" title=\"변수\"></a>변수</h5><p>일반적으로 프로그래밍에서 쓰는 변수의 의미와 같다고 보면 된다.<br>변수를 만드는 과정으로는 <strong>선언(declaring)</strong>과 <strong>명명(naming)</strong><br>의 두 단계를 거친다.<br>ex) <code>var score;</code><br>위 예제를 볼 때 var 부분은 변수를 만드는 또는 선언하는 키워드이고, score는 변수의 이름 즉 변수명이다.<br>변수의 이름을 정할 때는 몇가지 규칙이 있다. (5,6번은 주의해서 쓰면 좋은 경우이다)  </p>\n<ul>\n<li><strong>변수명은 영문자, $, _로만 시작해야 한다.</strong></li>\n<li><strong>변수명은 문자, 숫자, $, 그리고 _만 포함할 수 있다.</strong></li>\n<li><strong>변수명은 대,소문자를 구분한다.</strong></li>\n<li><strong>키워드는 사용을 할 수 없다.</strong><br>ex) var, alert, document, window…</li>\n<li><strong>변수명은 본인이 쓸 때 그 의미가 명확하게 드러나는 것이 좋다.</strong></li>\n<li><strong>변수명은 이름을 읽기 쉽게 만드는것이 좋다.</strong><br>변수 사용하는 방법은 다른 언어와 다를바가 크게 없기 때문에 생략한다.</li>\n</ul>\n<h5 id=\"배열\"><a href=\"#배열\" class=\"headerlink\" title=\"배열\"></a>배열</h5><p>여러가지 값(정보)을 담기 위해서는 배열을 사용하면 된다.<br>역시 일반 언어의 배열과 크게 다르지는 않다.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> days = [<span class=\"string\">'Mon'</span>,<span class=\"string\">'Tues'</span>,<span class=\"string\">'Wed'</span>,<span class=\"string\">'Thurs'</span>,<span class=\"string\">'Fri'</span>,<span class=\"string\">'Sat'</span>,<span class=\"string\">'Sun'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> days = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"string\">'Mon'</span>, <span class=\"string\">'Tues'</span>, <span class=\"string\">'Wed'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> playList = [];</span><br></pre></td></tr></table></figure></p>\n<p><strong>배열의 원소에 접근하는 방법 역시 동일하다.</strong><br><code>days[0] = &#39;Monday&#39;;</code>&lt; 0번째 배열의 값이 Monday라는 String형으로 바뀐다.<br><strong>배열의 원소를 추가하는 방법은 아래와 같다.</strong><br>ex) <code>var p = [0,1,2,3]</code>이라고 가정한다.<br>1) 배열 끝에 한 가지 값을 추가 : .length property<br>ex) <code>p[p.length]=4</code> ===== 실행후 =====&gt; [0,1,2,3,4]<br>2) 배열 끝에 하나 이상의 값을 추가 : push()<br>ex) <code>p.push(4,5,6)</code> ===== 실행후 =====&gt; [0,1,2,3,4,5,6]<br>3) 배열 앞에 하나 이상의 값을 추가 : unshift()<br>ex) <code>p.unshift(4,5)</code> ===== 실행후 =====&gt; [4,5,0,1,2,3]<br><strong>배열의 원소를 삭제하는 방법은 아래와 같다.</strong><br>ex) <code>var p = [0,1,2,3]</code>이라고 가정한다.<br>1) 배열의 마지막 원소 제거 : pop()<br>ex) <code>p.pop()</code> ===== 실행후 =====&gt; [0,1,2]<br>2) 배열의 첫 번째 원소 제거 : shift()<br>ex) <code>p.shift()</code> ===== 실행후 =====&gt; [1,2,3]<br><strong>배열의 중간에 원소를 추가하거나 삭제를 하려면 splice()라는 메소드를 이용하면 된다.</strong><br>1) 원소를 삭제할 경우 : splice(시작 인덱스, 삭제할 원소 개수)<br><code>var p = [0,1,2,3];</code><br><code>p.splice(1,2)</code> ===== 실행후 =====&gt; [0,3]<br>2) 원소를 추가할 경우 : splice(삽입할 인덱스, 0, 추가할 원소들…)<br><code>var p = [0,1,2,3];</code><br><code>p.splice(2,0,4,5)</code> ===== 실행후 =====&gt; [0,1,4,5,2,3]<br>3) 원소를 교체할 경우 : splice(시작 인덱스, 삭제할 원소 개수, 교체할 원소들…)<br><code>var p = [0,1,2,3];</code><br><code>p.splice(2,2,4,5,)</code> ===== 실행후 =====&gt; [0,1,4,5]</p>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"1장. JavaScript 기초 부분","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post10/","content":"<ol>\n<li><p>기본 JavaScript 형식은 아래와 같다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">..</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>외부 자바스크립트 파일(.js)을 이용해서 자바스크립트 코드를 링크할 수 있다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"navigation.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>경고창을 띄우려면 아래와 같은 메소드를 사용한다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">      alert(<span class=\"string\">'hello world'</span>);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>스크립트 오류에는 아래와 같은 경우를 주의해서 살펴보는것이 좋다.<br>- 인수 목록 뒤에 닫는 괄호 ‘)’를 빼먹는 경우<br>ex) <code>alert(&#39;hello&#39;</code><br>- 종료되지 않은 문자열<br>ex) <code>alert(hello)</code><br>- 복합문에서 }를 빼먹는 경우<br>ex) <code>{ ... }</code><br>- XXX가 정의되지 않았습니다.<br>ex) <code>aler(&#39;hello&#39;)</code><br>- 문법상 실수</p>\n</li>\n</ol>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"JavaScript 프로그래밍을 위한 소프트웨어(툴)","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post9/","content":"<h5 id=\"무료-버전\"><a href=\"#무료-버전\" class=\"headerlink\" title=\"무료 버전\"></a>무료 버전</h5><ol>\n<li>Notepad++ <a href=\"http://notepad-plus.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: 코드 작성시 유용. 자바스크립트와 HTML 코드의 문법 강조, 매크로 저장, 단축키 저장 가능 제공.</li>\n<li>HTML-K <a href=\"http://www.chami.com/html-kit\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: HTML/XHTML 편집기. 웹 페이지 미리보기, HTML 태그 삽입 단축키 등의 기능 제공.</li>\n<li>CoffeeCup Free HTML Editor <a href=\"http://www.coffeecup.com/free-editor\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: CoffeeCup HTML Editor의 무료 버전.</li>\n<li>Acroedit <a href=\"http://www.acrosoft.pe.kr/\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: 국내 개발자가 만든 편집기.</li>\n<li>TextWrangler <a href=\"http://www.barebones.com/products/textwrangler\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: Mac용 텍스트  편집기 BBEdit의 공개 버전. 구문 강조, FTP 지원의 기능 제공.</li>\n</ol>\n<h5 id=\"유료-버전\"><a href=\"#유료-버전\" class=\"headerlink\" title=\"유료 버전\"></a>유료 버전</h5><ol>\n<li>Editplus <a href=\"http://www.editplus.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: 개인적으로도 많이 쓰는 편집기. 구문 강조, FTP, 자동 완성 등의 기능 제공.</li>\n<li>Ultraedit <a href=\"http://www.ultraedit.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: 많은 기능을 가진 편집기. FTP, 자동 완성, SFTP, SSH등의 기능 제공.</li>\n<li>CoffeeCup <a href=\"http://www.coffeecup.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: CoffeeCup 유료 버전.</li>\n<li>skEdit <a href=\"http://www.skti.org/\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: FTP/SFTP 지원, 코드 힌트 등의 유용한 기능 제공을 제공하는 웹 편집기.</li>\n<li>textMate <a href=\"http://macromates.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: Mac을 사용하는 프로그래머들이 사용하는 툴. 자바스크립트 프로그래머들이 시간을 절약할 수 있는 기능 제공.</li>\n<li>BBEdit <a href=\"http://www.barebones.com/products/bbedit\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: Mac용 편집기. HTML, XHTML, CSS, 자바스크립트등 여러가지 도구 포함.</li>\n<li>Dreamweaver <a href=\"http://www.macromedia.com/software/dreamweaver\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: 웹 페이지가 브라우저에서 어떻게 보이는지 바로 확인할 수 있는 툴.</li>\n<li>Expression Web Designer <a href=\"http://www.microsoft.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a><br>: FrontPage를 대체할 수 있는 마이크로소프트사의 웹 디자인 프로그램.</li>\n</ol>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"Java 디자인 패턴 종류","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post8/","content":"<h6 id=\"출처-http-iilii-egloos-com\"><a href=\"#출처-http-iilii-egloos-com\" class=\"headerlink\" title=\"- 출처 :  http://iilii.egloos.com/\"></a>- 출처 :  <a href=\"http://iilii.egloos.com/\" target=\"_blank\" rel=\"noopener\">http://iilii.egloos.com/</a></h6><p><a href=\"http://iilii.egloos.com/3788564\" target=\"_blank\" rel=\"noopener\">1.자바 디자인 패턴 1 – Iterator</a><br><a href=\"http://iilii.egloos.com/3789009\" target=\"_blank\" rel=\"noopener\">2.자바 디자인 패턴 2 – Adapter</a><br><a href=\"http://iilii.egloos.com/3791596\" target=\"_blank\" rel=\"noopener\">3.자바 디자인 패턴 3 - Factory Method</a><br><a href=\"http://iilii.egloos.com/3806897\" target=\"_blank\" rel=\"noopener\">4.자바 디자인 패턴 4 - Template Method</a><br><a href=\"http://iilii.egloos.com/3807664\" target=\"_blank\" rel=\"noopener\">5.자바 디자인 패턴 5 – Singleton</a><br><a href=\"http://iilii.egloos.com/3826810\" target=\"_blank\" rel=\"noopener\">6.자바 디자인 패턴 6 – Strategy</a><br><a href=\"http://iilii.egloos.com/3838064\" target=\"_blank\" rel=\"noopener\">7.자바 디자인 패턴 7 – Composite</a><br><a href=\"http://iilii.egloos.com/3850836\" target=\"_blank\" rel=\"noopener\">8.자바 디자인 패턴 8 – Decorator</a><br><a href=\"http://iilii.egloos.com/3863886\" target=\"_blank\" rel=\"noopener\">9.자바 디자인 패턴 9 - Chain of Responsibility</a><br><a href=\"http://iilii.egloos.com/3891647\" target=\"_blank\" rel=\"noopener\">10.자바 디자인 패턴 10 – Facade</a><br><a href=\"http://iilii.egloos.com/3902774\" target=\"_blank\" rel=\"noopener\">11.자바 디자인 패턴 11 – Observer</a><br><a href=\"http://iilii.egloos.com/4062738\" target=\"_blank\" rel=\"noopener\">12.자바 디자인 패턴 12 – Prototype</a><br><a href=\"http://iilii.egloos.com/4066794\" target=\"_blank\" rel=\"noopener\">13.자바 디자인 패턴 13 – Flyweight</a><br><a href=\"http://iilii.egloos.com/4807809\" target=\"_blank\" rel=\"noopener\">14.자바 디자인 패턴 14 – Builder</a><br><a href=\"http://iilii.egloos.com/4850510\" target=\"_blank\" rel=\"noopener\">15.자바 디자인 패턴 15 – Mediator</a><br><a href=\"http://iilii.egloos.com/4906850\" target=\"_blank\" rel=\"noopener\">16.자바 디자인 패턴 16 – Visitor</a></p>\n","categories":["Language","Java"],"tags":[]},{"title":"2. JSP","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post7/","content":"<h5 id=\"7장-JSP가-되어-보자\"><a href=\"#7장-JSP가-되어-보자\" class=\"headerlink\" title=\"7장. JSP가 되어 보자.\"></a>7장. JSP가 되어 보자.</h5><ul>\n<li>패키지 import하기 위해서는 page지시자를 이용.</li>\n<li>스크립트 코드 : &lt;% %&gt;의 형식을 갖춘 코드.</li>\n<li>표현식 : &lt;%= %&gt;의 형식을 갖춘 코드. 세미콜론(;)이 붙지 않는다.</li>\n<li>선언식 : &lt;%! %&gt;의 형식을 갖춘 코드. 세미콜론(;)을 붙여야 한다.</li>\n<li>내장객체 중에는 out만이 있는것이 아니다. ex) request, response, session, page 등등..</li>\n<li>주석에는 2가지 종류가 있다.<br>1) <code>&lt;!-- HTML Comment --&gt;</code><br>2) <code>&lt;%-- JSP Comment %&gt;</code>  </li>\n<li>JSP LifeCycle<br>컨테이너 &gt; web.xml &gt; xxx.jsp &gt; xxx_jsp.java &gt; xxx_jsp.class &gt; 메모리 로딩 &gt; jspInit() 실행 &gt; 서블릿화 &gt; _jspService() 메소드 실행(다음 실행시에는 일반 서블릿과 동일하게 처리)</li>\n<li>속성범위에 대해서는 P345쪽 참고해서 볼것. page는 서블릿에서 제공하지 않음.</li>\n<li><strong>JSP안에 있는 자바 코드의 유지보수, 웹 페이지 디자이너가 Java라는 언어까지 알 필요 없다는 전제하에 나온 것이 EL</strong>  </li>\n<li>EL의 기본 형식<br><code>&lt;%= application.getAttribute(&quot;mail&quot;) %&gt;</code>와 <code>${applicationScope.mail}</code>과 같다.</li>\n<li>EL을 무시하게 만들려면?<br>1) DD에다가 <code>&lt;el-ignored&gt;true&lt;/el-ignored&gt;</code>태그를 추가 하는 방법<br>2) <code>&lt;%@ page isELIgnored=&quot;true&quot; %&gt;</code> page 지시자 속성을 추가 하는 방법</li>\n</ul>\n<h5 id=\"8장-스크립트가-없는-페이지\"><a href=\"#8장-스크립트가-없는-페이지\" class=\"headerlink\" title=\"8장. 스크립트가 없는 페이지\"></a>8장. 스크립트가 없는 페이지</h5><ul>\n<li>MVC 애플리케이션은 속성으로 정보를 공유.<br>서블릿 코드 : request.setAttribute(“name”, name);<br>JSP(뷰) 코드 : request.getAttribute(“name”);  </li>\n<li>JSP에는 빈 관련 표준 액션이 존재.<br>ex) <code>&lt;jsp:useBean&gt;, &lt;jsp:getProperty&gt;, &lt;jsp:setProperty&gt;...</code></li>\n<li><code>&lt;jsp:useBean&gt;</code><strong>은 빈은 선언하고 초기화 하는 태그</strong><br><code>&lt;jsp:useBean id=&quot;person&quot; class=&quot;foo.person&quot; scope=&quot;request&quot;/&gt;</code><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;표준 액션 / 객체 식별자 / 클래스 타입 선언 / 속성 생존범위</li>\n<li><code>&lt;jsp:getProperty&gt;</code><strong>은 속성 빈 프로퍼티를 읽어오는 태그</strong><br><code>&lt;jsp:getProperty name=&quot;person&quot; property=&quot;name&quot;/&gt;</code><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;표준 액션 / 빈 객체 이름 / 프로퍼티 이름</li>\n<li><code>&lt;jsp:useBean&gt;</code>은 객체를 생성, 자신의 몸체(태그 안에 태그가 가능)를 가질 수 있다.</li>\n<li>다형성 기법을 사용하려면 <a href=\"jsp:useBean\" target=\"_blank\" rel=\"noopener\">jsp:useBean</a>태그에 type속성을 추가하면 된다.</li>\n<li>클래스 없이 type을 사용이 가능하지만 생존범위 안에 존재하지 않으면 Exception이 발생.</li>\n<li><strong>scope속성의 디폴트 값은 page이다.</strong></li>\n<li>param속성을 사용하면 빈에 요청 파라미터를 설정할 수 있다.<br>ex) <code>&lt;jsp:setProperty name=&quot;person&quot; property=&quot;name&quot; param=&quot;userName&quot;/&gt;</code></li>\n<li>더 나은방식은 필드 이름과 프로퍼티 이름이 동일하면 된다.<br>ex) name=”input type=”text” name=”name”&gt;으로 할 경우<br><code>&lt;jsp:setProperty name=&quot;person&quot; property=&quot;name&quot; /&gt;</code>으로 하면 된다.</li>\n<li>빈의 모든 프로퍼티 이름과 요청 파라미터 이름이 같다면 아래와 같이 표현이 가능하다.<br><code>&lt;jsp:setProperty name=&quot;person&quot; property=&quot;*&quot; /&gt;</code></li>\n<li><strong>프로퍼티의 프로퍼티(내장 프로퍼티)를 출력하고 싶으면 어떡해야 할까?<br>-&gt; 답은 EL</strong>  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>  </span><br><span class=\"line\">Dog's name is : $&#123;person.dog.name&#125;  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>여기서 <code>${person.dog.name}</code> 부분은 <code>&lt;%= ((foo.person) request.getAttribute(&quot;person&quot;)).getDog().getName() %&gt;</code>과 동일하다.</p>\n<ul>\n<li>.(도트)연산자를 이용하려면 왼쪽은 반드시 Map 또는 Bean이어야 한다.</li>\n<li>[]연산자는 .(도트)연산자보다 기능이 막강하다.</li>\n<li>[]연산자는 왼쪽에 Map, Bean, Array, List 변수들이 올 수 있다.</li>\n<li>[]연산자 안의 값이 “…”으로 있다면, Map의 Key값이거나, 프로퍼티 또는 리스트의 배열 인덱스가 될 수 있다.<br>ex) <code>${musciList[&quot;something&quot;]}</code></li>\n<li>[]연산자 사용하는 다양한 예<br>1) Music is : <code>${musicList}</code><br>2) First song is : <code>${musicList[0]}</code><br>3) Second song is : <code>${muiscList[&quot;1&quot;]}</code></li>\n<li>Bean과 Map일 경우 둘 다 사용 가능하다.<br>ex) <code>${musicMap.Ambient} = ${musicMap[&quot;Ambient&quot;]}</code></li>\n<li>[]연산자 안에 내장 표현식을 사용할 수 있다.<br>ex) <code>${musicMap[MusicType[0]]} = ${musicMap[&quot;Ambient&quot;]}</code></li>\n<li>EL의 경우 null값을 산술연산에서는 0으로 논리연산에서는 false로 처리한다.</li>\n<li>템플릿을 재활용하기 위해 사용하는 지시자로 include 지시자가 있다.</li>\n<li>표준 액션 태그로는 <a href=\"jsp:include\" target=\"_blank\" rel=\"noopener\">jsp:include</a>가 있다.</li>\n<li>include 지시자는 “변환”시에, <code>&lt;jsp:include&gt;</code>는 “실행”시에 사용을 한다. response가 있는 JSP페이지의 경우 <code>&lt;jsp:include&gt;</code>를 사용하는 것이 좋고, 처음부터 한번에 띄워도 좋을 경우에는 include 지시자를 사용한다.</li>\n<li>재 사용할 페이지의 경우 <code>&lt;html&gt;</code>,<code>&lt;body&gt;</code>, 시작, 마침 태그를 작성하지 않는것이 좋다.</li>\n<li>JSP 페이지를 넘길때 <code>&lt;jsp:forward&gt;</code>조건부 포워딩 태그도 있음~ (p448 참고)</li>\n</ul>\n<h5 id=\"9장-막강한-커스텀-태그\"><a href=\"#9장-막강한-커스텀-태그\" class=\"headerlink\" title=\"9장. 막강한 커스텀 태그\"></a>9장. 막강한 커스텀 태그</h5><ul>\n<li><p>EL과 표준 액션 태그만으로 부족하여 나온것이 JSTL  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:out&gt;</span><br><span class=\"line\">&lt;c:forEach&gt;</span><br><span class=\"line\">&lt;c:if&gt;</span><br><span class=\"line\">&lt;c:choose&gt;&lt;c:when&gt;&lt;c:otherwise&gt;</span><br><span class=\"line\">&lt;c:set&gt;</span><br><span class=\"line\">&lt;c:remove&gt;</span><br><span class=\"line\">&lt;c:import&gt;</span><br><span class=\"line\">&lt;c:param&gt;</span><br><span class=\"line\">&lt;c:url&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>위와 같은 다양한 JSTL을 사용하여 JSP페이지를 간단하게 코딩할 수 있다… 는데 영 -_-;;; 어느정도 사용법에 대해서만 익히고 넘어가도록 하자.</p>\n</li>\n<li>errorPage의 경우 DD(배포 서술자)에서 설정할 수 있다. (P.504 참고)</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"1. Servlet","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post6/","content":"<h5 id=\"1장-서블릿과-JSP는-어디에-쓰이는-것인지-알아보자\"><a href=\"#1장-서블릿과-JSP는-어디에-쓰이는-것인지-알아보자\" class=\"headerlink\" title=\"1장. 서블릿과 JSP는 어디에 쓰이는 것인지 알아보자.\"></a>1장. 서블릿과 JSP는 어디에 쓰이는 것인지 알아보자.</h5><ul>\n<li>웹 서버 : 클라이언트로부터 요청을 받아 요청한 것을 넘겨주는 역할</li>\n<li>클라이언트 : 사용자가 서버에 요청을 보낼 수 있는 기능을 제공할 뿐더러 서버가 보내온 요청의 결과를 화면에 출력하는 역할까지 담당.</li>\n<li>HTTP : Hyper Text Transfer Protocol. TCP/IP 기반에서 요청,응답(Request/Response)을 전송하는 프로토콜</li>\n<li>HTML : HyperText Markup Language.</li>\n<li>단순한 요청은 GET, 사용자가 입력한 정보를 함께 보내려면 POST로 보내라.</li>\n<li>URL : Uniform Resource Locators<br>http:// –&gt; 프로토콜<br><a href=\"http://www.wickedlysmart.com:80/\" target=\"_blank\" rel=\"noopener\">www.wickedlysmart.com:80/</a> –&gt; 서버, IP주소<br>beeradvice/select/ –&gt; 서버에서 자원 위치<br>beer1.html –&gt; 자원  </li>\n<li>뒤에 포트 숫자의 경우 고정적으로 쓰이는 부분이 있다.<br>21 : FTP / 23 : Telnet / 25 : SMTP / 37 : Time / 80 : HTTP / 110 : POP3 / 443 : HTTPS</li>\n<li>CGI : Common Gateway Interface<br>사용자가 서버에게 웹페이지를 통한 요청이 있었을 때, 그것이 응용프로그램에 의해 처리 될 필요가 있다면 서버가 응용프로그램을 실행시키고 필요한 메시지를 받는다. 이 때 서버와 응용프로그램 사이에 데이터를 주고 받기 위한 표준화된 방법을 CGI라고 한다. (네이버 백과사전 참고)  </li>\n<li>Servlet<br>서버에서 수행되는 소형 프로그램. 일반적으로 서버에 존재하며 사용자 입력에 의해 데이터베이스에 접근하는 프로그램은 공통 게이트웨이 인터페이스(CGI) 프로그램을 사용해 수행되는데, 자바 서버 프로그램은 자바 프로그래밍 언어로 수행된다. CGI 프로그램보다 수행 속도가 빠르고, 프로그램 프로세스가 생성되는 것이 아니라 각 사용자 요청이 상주 프로그램(daemon)의 하나의 스레드(thread)로 수행된다. 추가(add-on) 모듈로 된 자바 서블릿은 넷스케이프 엔터프라이즈와 인터넷 정보 서버(IIS), 아파치 서버에서 수행된다. (네이버 백과사전 참고)  </li>\n<li>Servlet 안에 모든걸 다 넣기에는 무모한 면이 있기에 그 부분을 해결하기 위한 방법으로 JSP를 사용.  </li>\n<li>JSP는 HTML안에 자바를 넣을 수 없을까라는 고민에서 탄생.  </li>\n</ul>\n<h5 id=\"2장-웹-어플리케이션-구조\"><a href=\"#2장-웹-어플리케이션-구조\" class=\"headerlink\" title=\"2장. 웹 어플리케이션 구조\"></a>2장. 웹 어플리케이션 구조</h5><ul>\n<li>컨테이너가 주는 혜택 : 통신(커뮤니케이션) 지원, 생명주기 관리, 멀티스레딩 지원, 보안이 유용, JSP 지원</li>\n<li>컨테이너가 돌아가는 방식<br>1) 사용자가 링크를 클릭합니다.<br>2) 서블릿은 HttpServletRequest, HttpServletResponse 객체를 생성합니다.<br>3) 어떤 요청인지 분석하여 알아내고 그에 맞춰서 service() 메소드를 호출, do Get()/do Post() 둘 중 하나를 결정합니다.<br>4) doGet()/doPost() 중 하나를 생성후 Response 객체에 실어 컨테이너에 보냅니다.<br>5) 스레드 작업이 마치면 Request와 Reponse객체를 소멸시킵니다.  </li>\n<li>배포 서술자(Deployment Descriptor)라는 XML파일에서 서블릿과 URL을 서로 매핑이 가능하다.</li>\n<li>서블릿 &gt; 서블릿 + JSP &gt; 서블릿 + JSP + Model = MVC패턴(Model+View+Controller)</li>\n</ul>\n<h5 id=\"3장-초-간단-미니-MVC-튜토리얼\"><a href=\"#3장-초-간단-미니-MVC-튜토리얼\" class=\"headerlink\" title=\"3장. 초 간단 미니 MVC 튜토리얼\"></a>3장. 초 간단 미니 MVC 튜토리얼</h5><ul>\n<li>예제를 통해 서블릿을 구현해보는 부분이므로 패스.</li>\n</ul>\n<h5 id=\"4장-서블릿이-되어-보자\"><a href=\"#4장-서블릿이-되어-보자\" class=\"headerlink\" title=\"4장. 서블릿이 되어 보자\"></a>4장. 서블릿이 되어 보자</h5><ul>\n<li>서블릿의 주기 : 클래스 로딩 -&gt; 생성자 실행 -&gt; init() -&gt; service() -&gt;  destory()</li>\n<li>init() : 서블릿 인스턴스 생성뒤 바로 호출. service() 메소드 전에 실행. 딱 한번만 실행.</li>\n<li>service() : 클라이언트의 요청을 받았을때.</li>\n<li>destory() : 서블릿이 죽기 전에 실행. 딱 한번만 실행.</li>\n<li>서블릿 초기화  <ol>\n<li>ServletConfig 객체 : 서블릿당 하나, ServletContext에 접근하기 위해 사용, 파라미터값은 DD에서 설정 가능.  </li>\n<li>ServletContext 객체 : 웹 애플리케이션당 하나, 웹 앱의 파라미터값을 읽어오기 위해 사용, 서버정보를 파악하기 위해 사용.  </li>\n</ol>\n</li>\n<li>GET : URL로 자원 또는 파일을 달라고 요청.</li>\n<li>POST : Request에 첨부한 몸체 정보를 서버로 보내, 요청한 URL로 정보를 요구. 부가정보를 가진 GET과 비슷.</li>\n<li>HTTP 스펙 1.1 에서는 GET, HEAD, PUT은 멱등이라고 정의.</li>\n<li>method=”POST”라고 코딩하지 않을 경우 기본은 GET이다.</li>\n<li>Request 객체에서 파라미터를 뽑아 내기 위해 getParameter(“파라미터 이름”) 메소드를 호출, 리턴값은 String.</li>\n<li>파라미터 값이 여러개인 경우에는 getParameterValues(“파라미터 이름”) 메소드를 사용, 리턴값을 String[].</li>\n<li>Response는 리다이렉트(Redirect)와 디스패치(Dispatch)로 구분이 된다.</li>\n<li>Redirect : 요청을 완전히 다른 URL로 방향을 바꿀 수 있다. 즉, 주소가 바뀐다.</li>\n<li>Dispatch : 웹 애플리케이션에 있는 다른 컴포넌트(JSP)에게 처리를 위임. 주소가 바뀌지 않는다.</li>\n<li>sendRedirect : session 정보를 유지한채로 Redirect하는 것. Response한 후에는 할 수가 없다. 매개변수로 URL객체가 아닌 String 객체를 받음.</li>\n</ul>\n<h5 id=\"5장-웹-애플리케이션\"><a href=\"#5장-웹-애플리케이션\" class=\"headerlink\" title=\"5장. 웹 애플리케이션\"></a>5장. 웹 애플리케이션</h5><ul>\n<li>서블릿 초기화 된 다음에 서블릿 초기화 파라미터를 사용할 수 있다. ex)ServletConfig</li>\n<li>컨테이너는 서블릿을 초기화 할때 ‘단 한번만’ 초기화 파라미터를 읽습니다.</li>\n<li>초기화 파라미터는 컨텍스트 초기화 파라미터가 유용하다. ex)context-param</li>\n<li>초기화 파라미터 = 정해진 상수라고 생각하는것이 좋다.</li>\n<li>초기화 파라미터를 저장하기 위해서 리스터를 구현하여 사용. 리스너가 아니면 String밖에 저장이 안됨.</li>\n<li>리스너 작성 및 사용 : 리스너 클래스 생성 -&gt; 클래스 배포 -&gt; 배포 서술자에 항목 추가</li>\n<li>속성(Attribute)과 파라미터는 엄연히 다르다. 가장 큰 차이점은 리턴타입이 속성은 Object이고, 파라미터는 String이다. 그 외에 대한 차이점은 Headfirst P220쪽 참고!</li>\n<li>3가지 생존범위 : Context, Request, Session + @로 Page까지 있음.</li>\n<li>Context는 누구나 접근이 가능하다.</li>\n<li>Request는 Garbage 통해서 접근후 response 처리후 날라감, 즉 초기화 됨.</li>\n<li>Session은 나만 접근, 즉 특정 HttpSession에 접근 권한을 가진 녀석만 접근이 가능.</li>\n</ul>\n<h5 id=\"6장-대화-상태-유지하기\"><a href=\"#6장-대화-상태-유지하기\" class=\"headerlink\" title=\"6장. 대화 상태 유지하기.\"></a>6장. 대화 상태 유지하기.</h5><ul>\n<li>직접 적인 Session과 기타 리스너등에 대한 내용. 정리보단 이 장은 필요시 책을 한번 더 살펴보는게 나을듯.</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"String하고 String Buffer의 차이점","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post5/","content":"<p>1.String : String은 각 객체를 만들때 생성을 하고 다시 새로운 문자를 추가하거나 할 때 기존의 값은 GC에 넘겨지고 다시 가르키기 때문에 메모리 속도면으로 볼 때 상당 시간이 걸린다.<br>2.String Buffer : String과는 달리 공간을 만들어놓고 객체값이 변할때마다 그 공간에서 처리가 때문에 속도면에서 좋다.</p>\n<p>그래서 String Buffer가 String보다 많이 쓰인다고 한다. 끗~</p>\n","categories":["Language","Java"],"tags":[]},{"title":"Java 리플렉션에 대한 재고(Reflection)","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post4/","content":"<p>Java 리플렉션에 관한 간단한 설명이다.<br>그러나, 이 정도면 리플렉션 사용하는데 충분하다 싶을 정도의 내용.</p>\n<p>원문 : Reflections on Java Reflection<br><a href=\"http://www.onjava.com/pub/a/onjava/2007/03/15/reflections-on-java-reflection.html\" target=\"_blank\" rel=\"noopener\">http://www.onjava.com/pub/a/onjava/2007/03/15/reflections-on-java-reflection.html</a></p>\n<p>번역 : Java 리플렉션에 대한 재고(reflection)<br>1.<a href=\"http://network.hanb.co.kr/view.php?bi_id=1369\" target=\"_blank\" rel=\"noopener\">http://network.hanb.co.kr/view.php?bi_id=1369</a><br>2.<a href=\"http://network.hanb.co.kr/view.php?bi_id=1370\" target=\"_blank\" rel=\"noopener\">http://network.hanb.co.kr/view.php?bi_id=1370</a></p>\n","categories":["Language","Java"],"tags":[]},{"title":"Java 리플렉션(Reflection), Static에 관하여…","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post3/","content":"<ul>\n<li>Reflection = 게시물 조회<br>– 객체의 정보를 획득 + Invoke</li>\n<li>RMI : Remote Mehtod Invoketion<br>메소드의 정보를 획득해 실행하는 것</li>\n<li>Class Name : ex) net.bit.lecture.board.BoardNo(그냥 BoardVO가 아님)</li>\n<li>Map의 해결방법 -&gt; Reflection<br>– 문자열을 갖고 객체를 생성하는 방법<br>– Java Design Pattern, Framework를 공부하게 될 것<br>→ 목표는 파일로 관리를 하는 것</li>\n</ul>\n<hr>\n<ul>\n<li><p>Static<br>– Static 블럭 : 딱 1번만 동작하고 싶을때 사용 (여러개 메모리중에서)<br>– Static 변수 : 자료구조의 변수인 경우 Static은 사용하면 안됨. 계속 메모리에 쌓이므로 조심해서 사용해야 함.<br>– Static 메소드 : Static은 Static끼리 논다 -&gt; 같은걸 매번 반환할 수 있다.<br>– Static의 장점 : 공유!! → Singleton Pattern  </p>\n</li>\n<li><p>Filed, Method에서만 쓰인다?<br>→ 상태를 건드리지 않는 Method 전부 공유해서 쓰는 것.</p>\n</li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"리팩토링(Refactoring)","url":"https://yeop-blog.github.io/2017/09/21/2017-09-21-old-blog-post2/","content":"<p>소프트웨어를 보다 쉽게 이해할 수 있고, 적은 비용으로 수정할 수 있도록<br>겉으로 보이는 동작의 변화 없이 내부 구조를 변경한 것!  </p>\n<p>크게 데이터수준 리팩토링, 명령문 수준 리팩토링<br>루틴 수준 리팩토링,클래스구현 리팩토링,<br>클래스 인터페이스 리팩토링, 시스템수준 리팩토링으로 나눌 수 있다  </p>\n<h5 id=\"데이터-수준-리팩토링\"><a href=\"#데이터-수준-리팩토링\" class=\"headerlink\" title=\"데이터 수준 리팩토링\"></a><span style=\"color: #ff0000\">데이터 수준 리팩토링</span></h5><ul>\n<li>매직넘버(아무설명없는일반 숫자)를 명명된 상수로 대체한다</li>\n<li>변수 이름을 보다 분명하고 많은 정보를 제공하는 이름으로 다시 명명한다</li>\n<li>표현식을 인라인으로 이동시킨다</li>\n<li>표현식을 루틴으로 대체한다</li>\n<li>중간 변수를 사용한다</li>\n<li>여러 목적으로 사용되는 변수를 여러개의 단일 목적을 갖는 변수로 변환한다</li>\n<li>로컬에서 사용하기 위한 목적이라면 매개 변수 대신 지역변수를 사용한다</li>\n<li>기본 데이터를 클래스로 변환한다</li>\n<li>타입 코드 집합을 클래스나 enum으로 변환한다</li>\n<li>타입 코드 집합을 서브 클래스를 갖는 클래스로 변환한다</li>\n<li>배열을 객체로 변경한다</li>\n<li>컬렉션을 캡슐화한다</li>\n<li>전형적인 레코드를 데이터 클래스로 대체한다</li>\n</ul>\n<h5 id=\"명령문-수준-리팩토링\"><a href=\"#명령문-수준-리팩토링\" class=\"headerlink\" title=\"명령문 수준 리팩토링\"></a><span style=\"color: #ff0000\">명령문 수준 리팩토링</span></h5><ul>\n<li>불린 표현식을 분해한다</li>\n<li>복잡한 불린 표현식을 잘 명명된 불린 함수로 이동시킨다 (가독성 향상)</li>\n<li>서로 다른 조건문 내에 중복되어 있는 코드들을 결합한다</li>\n<li>루프 제어 변수 대신 break나 return을 사용한다 (ex bool done = false;)<br>-중첩된 if else 명령문 내에서 리턴 값을 할당하는 대신, 답을 알았을때 곧바로 리턴한다</li>\n<li>조건문(특히, 반복되는 case 문)을 다형성으로 대체한다</li>\n<li>널 값을 테스트 하는 대신, 널 객체를 생성하여 사용한다</li>\n</ul>\n<h5 id=\"루틴-수준-리팩토링\"><a href=\"#루틴-수준-리팩토링\" class=\"headerlink\" title=\"루틴 수준 리팩토링\"></a><span style=\"color: #ff0000\">루틴 수준 리팩토링</span></h5><ul>\n<li>루틴을 추출해 인라인으로 이동할 필요가 있으면 이동시킨다</li>\n<li>긴 루틴을 클래스로 변환하거나 여러개의 루틴으로 분해한다</li>\n<li>복잡한 알고리즘 대신 간단한 알고리즘으로 대체한다</li>\n<li>매개변수를 추가하되 적당히 추가한다 (최대 7개)</li>\n<li>매개변수를 사용하지 않으면 제거한다</li>\n<li>변경 연산으로 부터 쿼리 연산을 분리한다 (쿼리연산은 객체의상태를변경하지않음)</li>\n<li>매개변수를 이용하여 유사한 루틴을 결합한다 (template 사용)</li>\n<li>전달되는 매개변수에 따라서 행동하는 루틴들을 분리한다</li>\n<li>같은 객체에 있는 여러개의 값을 한 루틴에 전달한다면 전체 객체를 전달한다.</li>\n<li>필요한 필드만 받아들이도록 루틴을 변경할 것을 고려해본다</li>\n<li>다운 캐스팅을 캡슐화한다 (가장 구체적인 객체의 타입을 리턴 시키도록)</li>\n</ul>\n<h5 id=\"클래스-구현-리팩토링\"><a href=\"#클래스-구현-리팩토링\" class=\"headerlink\" title=\"클래스 구현 리팩토링\"></a><span style=\"color: #ff0000\">클래스 구현 리팩토링</span></h5><ul>\n<li>크거나 복잡한 객체에 대한 굉장히 많은 복사본을 관리한다면<br>하나의 마스터객체만 사용하여 해당 객체를 참조하도록 한다</li>\n<li>작고 간단한 객체를 위해서 수많은 참조 코드를 수행한다면<br>모든 객체가 값 객체가 되도록 객체의 사용법을 변경한다</li>\n<li>가상 루틴들을 데이터 초기화로 대체한다</li>\n<li>필요에 따라 멤버 루틴이나 데이터의 위치를 변경한다 (부모클래스나 파생클래스로)</li>\n<li>특화된 코드를 파생클래스로 추출한다</li>\n<li>파생클래스의 유사한 코드를 결합하여 부모클래스로 결합한다</li>\n</ul>\n<h5 id=\"클래스-인터페이스-리팩토링\"><a href=\"#클래스-인터페이스-리팩토링\" class=\"headerlink\" title=\"클래스 인터페이스 리팩토링\"></a><span style=\"color: #ff0000\">클래스 인터페이스 리팩토링</span></h5><ul>\n<li>클래스가 각각의 책임 분야가 있으면 해당클래스를 여러개의 클래스로 나눈다</li>\n<li>많은 일을 하지 않으면 해당 클래스의 코드를 응집력있는 클래스로 이동후 삭제한다</li>\n<li>올바른 추상화를 생각하여 위임하는 클래스가 생기지 않도록 한다</li>\n<li>필요하다면 상속을 위임으로 대체한다</li>\n<li>추가적인 루틴들이 필요한데 클래스가 수정 불가능 하다면 원본 클래스로부터<br>서브클래싱을 하고 원본 클래스를 래핑하여 필요한 루틴을 노출 시키도록한다</li>\n<li>노출된 멤버변수는 캡슐화시킨다</li>\n<li>변할 수 없는 필드에 대한 Set() 루틴을 제거한다</li>\n<li>클래스 외부에서 사용되지 않는 루틴은 캡슐화한다</li>\n</ul>\n<h5 id=\"시스템-수준-리팩토링\"><a href=\"#시스템-수준-리팩토링\" class=\"headerlink\" title=\"시스템 수준 리팩토링\"></a><span style=\"color: #ff0000\">시스템 수준 리팩토링</span></h5><ul>\n<li>서로 기능을 사용하는 클래스가 있으면 양방향 클래스 관계로 변경한다</li>\n<li>두 클래스 중 한 클래스만 다른 클래스를 알 필요가 있다면 단방향 클래스 관계로 변경한다</li>\n<li>간단한 생성자 대신 팩토리 루틴을 사용한다</li>\n<li>오류 코드를 예외로 대체하거나 그 반대로 한다</li>\n</ul>\n<p>Code Complete Part 5 Chapter 24 리팩토링</p>\n<h4 id=\"리팩토링을-하기전엔-반드시-코드를-저장-할-것\"><a href=\"#리팩토링을-하기전엔-반드시-코드를-저장-할-것\" class=\"headerlink\" title=\"리팩토링을 하기전엔 반드시 코드를 저장 할 것!\"></a><span style=\"color: #0075c8\">리팩토링을 하기전엔 반드시 코드를 저장 할 것!</span></h4><p><strong><span style=\"color: #009e25\">루틴을 추가할때<br>클래스 추가할때<br>결함을 수정할때 하자</span></strong></p>\n","categories":["Study"],"tags":[]},{"title":"Javascript Opener클래스를 통해 자식창에서 부모창의 객체에 접근및 제어하는 예제","url":"https://yeop-blog.github.io/2017/09/20/2017-09-20-old-blog-post1/","content":"<p>밑의 domodal형의 예제처럼 자식창의 리턴값을 부모에서 받아서 사용할수도 있지만,<br>자식창에서 일방적으로 부모창의 객체에 접근하여 값을 입력할수도 있습니다.<br>이때 사용되는 코드가 opener클래스입니다.</p>\n<p>예제는 부모창은 자식창을 호출하는 기능,<br>자식창은 부모창의 input:text에 값을 넣고 종료되는 기능으로 구현해봤습니다.</p>\n<h4 id=\"부모창-코드\"><a href=\"#부모창-코드\" class=\"headerlink\" title=\"부모창 코드\"></a>부모창 코드</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        function goChild() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            window.open(\"Child.htm\");</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"자식창열기\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"goChild()\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txt\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"여기에 자식창이 보낸 정보를 받는다.\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100%;\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"자식창-코드\"><a href=\"#자식창-코드\" class=\"headerlink\" title=\"자식창 코드\"></a>자식창 코드</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>자식창<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Text1\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> /&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Button1\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"부모창에 왼쪽텍스트박스의 정보 보내는 버튼\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"goParent()\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">        function goParent() &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            opener.document.getElementById(\"txt\").value = document.getElementById(\"Text1\").value;           </span></span><br><span class=\"line\"><span class=\"undefined\">            window.close();</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","categories":["Language","JavaScript"],"tags":[]},{"title":"Javascript 스터디 시작","url":"https://yeop-blog.github.io/2017/08/24/2017-08-24-Javascript_study_start/","content":"<p>매주 토요일 Javascript 관련 스터디 시작</p>\n<p>스터디 책은 ‘You Don’t Know JS 타입과 문법, 스코프와 클로저’로 결정</p>\n<p>구체적인 책 정보는 아래 첨부된 링크 참고<br><a href=\"http://www.hanbit.co.kr/store/books/look.php?p_code=B8227329776\" target=\"_blank\" rel=\"noopener\">http://www.hanbit.co.kr/store/books/look.php?p_code=B8227329776</a></p>\n<p>목표는 Front단 공부 차, 자기소개 관련 페이지 만드는 것이 목표</p>\n<p>주기적으로 블로그에도 Update 하면서 진행 예정</p>\n<p>깃허브 이용하여 실습예제 작성 파일 업로드 예정이며, 주소는 아래 참고<br><a href=\"https://github.com/Yeop-Study/TIL\" target=\"_blank\" rel=\"noopener\">https://github.com/Yeop-Study/TIL</a></p>\n","categories":["Study"],"tags":[]},{"title":"건강 관리 프로젝트 START!!","url":"https://yeop-blog.github.io/2017/08/11/2017-08-11-my_health_project/","content":"<p>앞으로 지속적으로 운동하는 일정에 맞춰 작성할 예정<br>운동 종목은 기존에 했었던 헬스로 정했으며, 올림픽스포츠센터에 등록 완료  </p>\n<h2 id=\"2017-08-10-인바디-측정-결과\"><a href=\"#2017-08-10-인바디-측정-결과\" class=\"headerlink\" title=\"2017.08.10 인바디 측정 결과\"></a><strong>2017.08.10 인바디 측정 결과</strong></h2><h4 id=\"lt-체성분분석-gt\"><a href=\"#lt-체성분분석-gt\" class=\"headerlink\" title=\"&lt; 체성분분석 &gt;\"></a>&lt; 체성분분석 &gt;</h4><table>\n<thead>\n<tr>\n<th>항목</th>\n<th>측정치</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>세포내수분(L)</td>\n<td>22.4</td>\n</tr>\n<tr>\n<td>세포외수분(L)</td>\n<td>13.4</td>\n</tr>\n<tr>\n<td>단백질(kg)</td>\n<td>9.7</td>\n</tr>\n<tr>\n<td>무기질(kg)</td>\n<td>3.28</td>\n</tr>\n<tr>\n<td>체지방(kg)</td>\n<td>16.2</td>\n</tr>\n<tr>\n<td><strong>체중(kg)</strong></td>\n<td><strong>64.9</strong></td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<h4 id=\"lt-골격근-지방-gt\"><a href=\"#lt-골격근-지방-gt\" class=\"headerlink\" title=\"&lt; 골격근-지방 &gt;\"></a>&lt; 골격근-지방 &gt;</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">항목</th>\n<th style=\"text-align:left\">‘17년도 측정치</th>\n<th style=\"text-align:left\">‘12년도 측정치’</th>\n<th>표준(최소)과 차이</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">체중(kg)</td>\n<td style=\"text-align:left\">64.9</td>\n<td style=\"text-align:left\">54</td>\n<td>+10.1(54.8~74.2)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">골격근량(kg)</td>\n<td style=\"text-align:left\">27.2</td>\n<td style=\"text-align:left\">26</td>\n<td>-0.3(27.5~33.6)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">체지방량(kg)</td>\n<td style=\"text-align:left\">16.2</td>\n<td style=\"text-align:left\">7.5</td>\n<td>+8.5(7.7~15.5)</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<h4 id=\"lt-비만진단-gt\"><a href=\"#lt-비만진단-gt\" class=\"headerlink\" title=\"&lt; 비만진단 &gt;\"></a>&lt; 비만진단 &gt;</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">항목</th>\n<th style=\"text-align:left\">‘17년도 측정치</th>\n<th style=\"text-align:left\">‘12년도 측정치’</th>\n<th>표준(최소)과 차이</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">BMI</td>\n<td style=\"text-align:left\">22.1</td>\n<td style=\"text-align:left\">-</td>\n<td>+4.1(17.5~23.0)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">체지방률(%)</td>\n<td style=\"text-align:left\">25.0</td>\n<td style=\"text-align:left\">14</td>\n<td>+15(10.0~20.0)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">복부지방률</td>\n<td style=\"text-align:left\">0.88</td>\n<td style=\"text-align:left\">0.82</td>\n<td>+0.13(0.75~0.85)</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<h4 id=\"lt-신체균형-gt\"><a href=\"#lt-신체균형-gt\" class=\"headerlink\" title=\"&lt; 신체균형 &gt;\"></a>&lt; 신체균형 &gt;</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">오른팔(kg)</th>\n<th style=\"text-align:left\">왼팔(kg)</th>\n<th style=\"text-align:left\">몸통(kg)</th>\n<th style=\"text-align:left\">오른다리(kg)</th>\n<th style=\"text-align:left\">왼다리(kg)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">2.48</td>\n<td style=\"text-align:left\">2.53</td>\n<td style=\"text-align:left\">21.9</td>\n<td style=\"text-align:left\">8.21</td>\n<td style=\"text-align:left\">8.10</td>\n</tr>\n</tbody>\n</table>\n<p><br><br>내장지방은 77.3 수치로.. 5년전 42.9에 비해 대폭 증가..ㅠㅠ<br>100을 넘어서면 비만으로 위험한 수준을 의미..</p>\n","categories":["Life","Health"],"tags":[]},{"title":"IT직장인들(개발자,퍼블리셔) 포트폴리오 종류","url":"https://yeop-blog.github.io/2017/08/11/2017-08-11-developer_portfolio_list/","content":"<ol>\n<li>경재씨 포트폴리오<ul>\n<li><a href=\"http://syua.co.kr/profile/\" target=\"_blank\" rel=\"noopener\">http://syua.co.kr/profile/</a></li>\n<li>SpringBoot + Bootstrap을 활용하여 WebSite의 포트폴리오</li>\n<li>개인적으로 위 사이트 같이 만들고 싶은게 현재 목표</li>\n</ul>\n</li>\n<li>신인 개발자 포트폴리오(김남윤)<ul>\n<li><a href=\"https://www.slideshare.net/ssuser565d51/ss-60845940\" target=\"_blank\" rel=\"noopener\">https://www.slideshare.net/ssuser565d51/ss-60845940</a></li>\n<li>Powerpoint를 활용하였으며, 적절한 패러디짤을 활용하여 유머 요소가 있음</li>\n<li>주로 자신이 한 프로젝트에 대해 소개 하면서 어필</li>\n</ul>\n</li>\n<li>박관웅 개발자 포트폴리오<ul>\n<li><a href=\"https://www.slideshare.net/pouu69/ss-58215884?next_slideshow=1\" target=\"_blank\" rel=\"noopener\">https://www.slideshare.net/pouu69/ss-58215884?next_slideshow=1</a></li>\n<li>Powerpoint를 활용. 자신이 다녔던 멤버쉽, 회사에서 한 것들에 대해 간략하게 소개</li>\n<li>개인 프로젝트를 한 부분도 간략하게 소개</li>\n<li>심플하지만, 참고하고자 링크</li>\n</ul>\n</li>\n<li>퍼블리셔 김나영 웹포트폴리오<ul>\n<li><a href=\"http://www.nykim.net/\" target=\"_blank\" rel=\"noopener\">http://www.nykim.net/</a></li>\n<li>디자인 감각이 괜찮다고 생각되는 포트폴리오</li>\n<li>자신이 한 프로젝트에 대해서도 작업결과에 대해 중점적인 내용 확인이 가능</li>\n<li>향후 이런 포트폴리오도 괜찮을 듯! (개인적으로 완전 맘에 듬~)</li>\n</ul>\n</li>\n<li>퍼블리셔 임태성 웹포트폴리오<ul>\n<li><a href=\"https://findawayer.github.io/\" target=\"_blank\" rel=\"noopener\">https://findawayer.github.io/</a></li>\n<li>위와 거의 동일하지만 좀 더 심플한 페이지로 구성</li>\n<li>역시나 퍼블리셔 웹포트폴리오다 보니 HTML, CSS, jQuery를 잘 활용</li>\n<li>이런 포트폴리오 페이지도 나쁘지 않은거 같음</li>\n</ul>\n</li>\n</ol>\n<p>&lt; 그 외 포트폴리오 관련 참고 사이트 &gt;</p>\n<ul>\n<li><a href=\"http://blog.naver.com/PostView.nhn?blogId=agitteam&amp;logNo=220693941562\" target=\"_blank\" rel=\"noopener\">이색 디자인 포트폴리오 사이트 15선</a></li>\n</ul>\n","categories":["Study"],"tags":[]},{"title":"Java에서 사용하는 List에 대해 정리","url":"https://yeop-blog.github.io/2017/08/07/2017-08-07-java_use_list_arrangement/","content":"<p>출처1 : <a href=\"http://ledgku.tistory.com/42\" target=\"_blank\" rel=\"noopener\">http://ledgku.tistory.com/42</a><br><br>출처2 : <a href=\"http://stunstun.tistory.com/193\" target=\"_blank\" rel=\"noopener\">http://stunstun.tistory.com/193</a></p>\n<p>보통 많은 데이터를 담거나 보여주거나 할 때 쓰는 것이 List라고 생각한다.<br><br>그런 List의 종류는 아래와 같이 정리해 볼 수 있다.</p>\n<ul>\n<li>Array List(선형 리스트) – 배열을 기반으로 구현한 리스트</li>\n<li>Linked List(연결 리스트) – 메모리 동적 할당을 기반으로 구현한 리스트</li>\n</ul>\n<p>위 List들은 Java에서 제공하는 List 인터페이스를 구현한 Collection이다.<br></p>\n<p>차이점을 말하기전에 앞서 List 인터페이스를 구현하는 ArrayList 또는 LinkedList를 사용하는 이유에 대해서 체크하고 넘어가는 것이 이해하는데 도움이 될 것 같아 출처 부분을 인용하여 작성하고자 한다.</p>\n<p>Java에서는 보통 여러 개의 Primitive Type(기본 자료형) 또는 Refrenece Type(인스턴스)을 저장 하기 위해 배열을 사용하곤 한다. 하지만 배열은 초기화 할 때 길이를 초기화 해야 하며, 생성된 배열은 동적으로 변경하기 어렵다는 단점이 있어 데이터 관리 하기에 불편한 점이 있다.</p>\n<p>배열과 Vector를 이용한 데이터 관리<br></p>\n<p>public class ListTest {<br>    public String[] array = new String[10];<br>    public Vector<string> vector = new Vector<string>();</string></string></p>\n<pre><code>@Test\npublic void collectionsTest() {\n    System.out.println(&quot;Array = &quot; + array.length);\n    System.out.println(&quot;Vector = &quot; + vector.capacity());\n}\n</code></pre><p>}</p>\n<p>이런 부분 때문에 Java 1.0에서는 이러한 문제를 해소 하기 위해 Vector를 주로 사용하고는 했다. 하지만, Vector 역시 초기화 시 10으로 capacity가 정해져, capacity 이상이 되면 2배씩 늘려 나가게 되고 다수의 Thread에 대한 접근에 동기화를 보장하는 등의 성능 이슈 등으로 인해, 1.2이후 Version에서는 호환성을 위해 제공한다고 보면 되며, List 인터페이스를 구현한 List로 대체 되었다.</p>\n<p><strong>ArrayList</strong><br><br>ArrayList는 내부적으로 자료를 Array(배열) 구조로 가지며, 데이터의 추가/삭제를 위해서는 임시 배열을 생성해 데이터를 복사하는 방법을 사용한다.<br><br>때문에, 대량의 자료를 추가/삭제 하는 경우 성능 저하 현상이 발생할 수 있지만 각 데이터는 Index를 가지고 있기 때문에 한번에 참조가 가능해 데이터 검색에는 유리하다고 볼 수 있다.</p>\n<p><strong>LinkedList</strong><br><br>LinkedList는 데이터를 저장하는 각 노드가 이전 노드와 다음 노드의 상태만 알고 있다고 보면 된다.<br><br>데이터의 추가/삭제 시에 불필요한 나머지 데이터의 복사가 없으므로 유리하지만, 데이터 검색 시에는 ArrayList와 비교해 불리하다고 볼 수 있다.</p>\n<p>즉, 정리하면 다음과 같다.<br><br>ArrayList : Java 1.2에서 추가, 데이터 검색에 유리하며, 추가/삭제는 성능 고려<br><br>LinkedList : Java 1.2에서 추가, 데이터 추가/삭제에 유리하며, 검색은 성능 고려</p>\n","categories":["Language","Java"],"tags":[]},{"title":"Apache와 Tomcat의 차이","url":"https://yeop-blog.github.io/2017/08/07/2017-08-07-apache_and_tomcat/","content":"<ul>\n<li>Apache : apache라는 소프트웨어 단체에서 만든 오픈소스 http web server</li>\n<li>Tomcat : was(web application server)라고 불리며, web server와 web container의 결합이라고 볼 수 있다.</li>\n<li>차이점<br><br>– web server는 정적인 데이터를 처리, was는 동적인 데이터를 처리<br><br>– 즉, 단순 html, css 등 파일과 같은 리소스를 처리할 때는 web server를 활용하면 빠르게 처리가 가능<br><br>– DB와 연결되어 있거나 프로그램으로 데이터 조작이 필요한 경우 was를 활용</li>\n<li>보통 tomcat 앞에 apache를 놓는 이유?<br><br>– 많은 개발자들이 애플리케이션 서버로 톰캣을 사용하는 경우에 스태틱 파일(css, js, html, 이미지)은 톰캣 앞에 아파치 웹 서버(Httped)를 두어서 처리하게 하는 것이 좋다고 생각한다. 외부 요청은 일단 Apache Httpd가 받고, 톰캣 내에서 처리할 자바 애플리케이션만 톰캣으로 다시 전달해서 처리하고 그 외의 리소스는 Apache Httpd가 직접 처리하게 만들어야 성능이 좋다고 생각한다. 자바로 만든 서버인 톰캣은 스태틱 파일 처리에서 Apache Httpd만 못하다는 것이 그 이유이다.하지만 톰캣과 Httped의 개발자에 따르면 이는 개발자들이 잘못 알고 있는 미신이다. 아직도 톰캣 3를 사용하고 있는 것이 아니라면 말이다.<br><br>톰캣은 5.5부터 Httpd의 native모듈을 사용해서 스태틱파일을 처리하는 기능을 제공한다. 이 경우 Httpd와 톰캣이 같은 모듈을 사용하는 셈이니 성능에서 차이가 날 이유가 없다. 실제 테스트 한 결과를 봐도 톰캣에서 아파치 Native 모듈을 사용하는 것이 순수하게 아파치 Httpd만 사용하는 것과 비교해서 성능이 전혀 떨어지지 않는다.<br><br>따라서 <strong>단지 스태틱 파일 처리의 성능만을 위해서라면 굳이 톰캣 앞에 Apache Httpd를 두는 것은 불필요 하다. 오히려 메모리만 많이 먹고 관리부담은 커지고, 불필요한 부하만 걸릴 뿐이다.<br><br>물론 Httpd의 다른 기능이나 모듈을 사용해야 할 필요가 있다면 그때는 Httpd를 앞에 두고 사용해야겠지만.<br>예를 들어 하나의 서버에서 PHP애플리케이션과 자바 애플리케이션을 함께 사용하거나, Httpd 서버를 간단한 로드밸런싱을 위해서 사용해야 하는 경우라면 Httpd를 앞에 두고 톰캣을 연결해서 사용하도록 하면 될 것이다.</strong></li>\n</ul>\n<p>[출처]</p>\n<ul>\n<li><a href=\"http://sungbine.github.io/tech/post/2015/02/15/tomcat%EA%B3%BC%20apache%EC%9D%98%20%EC%97%B0%EB%8F%99.html\" target=\"_blank\" rel=\"noopener\">http://sungbine.github.io/tech/post/2015/02/15/tomcat%EA%B3%BC%20apache%EC%9D%98%20%EC%97%B0%EB%8F%99.html</a><br></li>\n<li><a href=\"http://limmmee.tistory.com/4\" target=\"_blank\" rel=\"noopener\">http://limmmee.tistory.com/4</a></li>\n</ul>\n","categories":["Language","Java"],"tags":[]},{"title":"Java에 대한 간략 개념 정리","url":"https://yeop-blog.github.io/2017/08/04/2017-08-04-java_basic_arrangement/","content":"<ul>\n<li>출처 : <a href=\"https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4\" target=\"_blank\" rel=\"noopener\">Java 위키 페이지</a>)</li>\n<li><p>Java란?<br><br>객체 지향적 프로그래밍 언어(Object Oriented Programming)<br><br>제임스 고슬링이라는 사람이 개발<br><br>Java 언어의 핵심 목표는 다음과 같다<br><br>– 객체 지향 방법론을 사용해야 한다<br><br>– 여러 운영 체제에서 실행될 수 있어야 한다<br><br>– 컴퓨터 네트워크 접근 기능이 기본으로 탑재되어야 한다<br><br>– 원격 코드를 안전하게 제어할 수 있어야 한다<br><br>– 다른 객체 지향 언어의 장점만 가져와 사용하기에 편해야 한다</p>\n</li>\n<li><p>기본적인 Hello, World 구현<br></p>\n</li>\n</ul>\n<p>public class HelloWorldApp {<br>  public static void main(String[] args) {<br>    System.out.println(“Hello World!”); // Hello World 를 출력<br>  }<br>}<br>public class HelloWorldApp {<br>  public static void main(String[] args) {<br>    System.out.println(“Hello World!”); // Hello World 를 출력<br>  }<br>}</p>\n","categories":["Language","Java"],"tags":[]},{"title":"개인 프로젝트 정리 공간","url":"https://yeop-blog.github.io/2017/08/04/2017-08-04-cherish_the_memory_list/","content":"<h4 id=\"추모공간-사이트-제작\"><a href=\"#추모공간-사이트-제작\" class=\"headerlink\" title=\"추모공간 사이트 제작\"></a>추모공간 사이트 제작</h4><ul>\n<li>개발 목적 : 어머니를 위한 온라인 추모 공간</li>\n<li>Framework : SpringBoot + BootStrap을 활용(Web + Mobile 모두 최적화 화된 화면에서 볼 수 있도록)</li>\n<li>IDE : JetBrains 제품인 Intellij Ultimate 버전 사용 예정</li>\n<li>DB : MySQL(인아워넷 후원 계정을 활용)  </li>\n<li>참고 사이트 : <a href=\"http://media.daum.net/sewolferry/memorial/\" target=\"_blank\" rel=\"noopener\">세월호 추모 관련 다음 페이지</a></li>\n</ul>\n<h4 id=\"애니메이션-UCC-사이트-제작\"><a href=\"#애니메이션-UCC-사이트-제작\" class=\"headerlink\" title=\"애니메이션 UCC 사이트 제작\"></a>애니메이션 UCC 사이트 제작</h4><ul>\n<li>티비플 같은 UCC 사이트를 목표로 제작  </li>\n<li>구름 이라는 시스템을 어떻게 구현할 수 있을지 방법 확인 필요  </li>\n<li>올해 말에 방법에 대해 알아보고 구상까지 목표로  </li>\n</ul>\n","categories":["Life","Doodle"],"tags":[]},{"title":"2017년 목표 계획(update 2017. 09. 04)","url":"https://yeop-blog.github.io/2017/08/04/2017-08-04-2017_goals/","content":"<p><strong>개인 포트폴리오</strong><br><del>PPT 파일을 재정비 하는 방향 or 포트폴리오를 위한 간단한 사이트 제작</del><br><del>5번 목표로 통일하여 진행. PPT는 다른 템플릿을 검색해서 보완할 예정</del><br><del>전에 경재씨가 보여준 웹 포트폴리오 방식으로 간단하게 구현하는 것으로</del><br>무무님 프로젝트 참여하면서 자연스럽게 진행하게 될 듯~!! 좋은 기회.</p>\n<p><strong>영어 회화</strong><br><del>5월중으로 회화, 토익에 대한 스터디 목표 확정</del><br><del>Tella 라는 카톡 영어회화 알아보는 중.(기본 지식 쌓고 내년에 한번 신청..)</del><br>올해는 조영주 부장님이 추천하신 책 + 원승스님 PDF 브로셔 독해 정도?</p>\n<p><strong>정보보안기사 자격증 취득</strong><br>8월 필기 시험 응시를 위해 지속적으로 준비</p>\n<p><strong>블로그 개발</strong><br><del>php 습득, 활용하여 커스터마이징 + 플러그인 활용</del><br><del>현재 무난하게 진행중이며, 큰 기능 추가 없이 블로그 내용을 채워가며 진행할 예정</del><br>블로그 개발은 Github를 이용하여 간단하게 구성하는 방향으로 전환</p>\n<p><strong>온라인추모공간 개발</strong><br><del>개인적으로 어머니를 위해 하고 싶은 일.. 올해 말까지 간단하게 개발</del><br>현재까지 진척사항이 없음.. 9월내 자격증 시험 떨어지면 해볼 생각..ㅠㅠ  </p>\n<p><strong>티비플 같은 애니메이션 UCC 커뮤니티 개발</strong><br>애니메이션을 좋아하는 다양한 사용자들이 같이 편하게 즐길 수 있는 공간을<br>만들고 싶다는 생각이 들어서 생각만 해봄~</p>\n<p><strong>주기적인 운동 계획 + 진행</strong><br>8/10일 인바디 측정(체성분) 결과 체지방량이 표준 이상으로 나오는 끔직한 결과가..<br>앞으로 주기적으로 헬스 하면서 표준 이하로 갈 수 있도록..ㅠㅠ</p>\n","categories":["Life","Goal"],"tags":[]},{"title":"블로그 이전했습니다","url":"https://yeop-blog.github.io/2017/08/03/2017-08-03-blog_start/","content":"<p>블로그 이전했습니다.</p>\n<p>처음에 티스토리에서 시작했다가.. 영구정지를 먹고..<br>그 다음에 겨우 겨우 백업 받아서 네이버에서 블로그로 임시 운영하다가..<br>서버를 하나 구해서 워드프레스로 좀 해보려고 했으나..<br>결국 불편해서 이렇게 깃허브 블로그까지 오게 되었습니다.</p>\n<p>더는 이제 이동 안하려고요..ㅠㅠ</p>\n<p><strong>잘 부탁드립니다 :)</strong></p>\n","categories":["Life","Doodle"],"tags":[]},{"title":"APAC 머신러닝 & Data Science Community Summit 세미나 참석 정리","url":"https://yeop-blog.github.io/2017/05/20/2017-05-20-APAC-Seminar/","content":"<ul>\n<li>TensorFlow / Caffe2 → 가장 활발하게 개발 진행되고 있음(그 외 MxNet)</li>\n<li>Neural Networks</li>\n<li>Decision Tree(많이 쓰고 있는 모델 방법)</li>\n<li>앙상블.. Ensembles(1987) → 사용하여 나온 다양한 모델들을 엮어서 만들고 있음</li>\n<li>Global Models VS Local Models</li>\n<li>개인의 정보는 온프라미스, 클라우드, 개인 모바일 장비 등 다양하게 저장(모든 데이터는 나만 확인하고 쓰는..)</li>\n<li>정보를 다른쪽이 아닌 내가 직접 받아 확인하고 서로 공유하는.. + AI(Machine Learning) 활용하는 방향..</li>\n</ul>\n<p><strong>* Ditfalls fo Machine Learning(머신러닝의 함정)</strong>  </p>\n<blockquote>\n<p>모든 문제는 기술쪽에 문제가 아니다</p>\n</blockquote>\n<ul>\n<li>LGD, PD(금융 부도 관련 단어)</li>\n<li>집 값을 예상하는 부분에 대해 계산하는 Machine Learning 구현</li>\n<li>Machine Learning이 자신의 문제 해결에 적합한 것인가?</li>\n<li>Data의 적정성(Validation)</li>\n<li>Data Science가 먼저 나와야 한다(Machine Learning 보다)</li>\n<li>Governance.. 많은 단계를 거쳐야 하지만 그 방법이 현재 Best Practice</li>\n<li>Machine Learning은 답을 주지는 않는다.</li>\n</ul>\n<p><strong>* Fun With TensorFlow</strong>  </p>\n<ul>\n<li>Deep Learning Machine Setup이 어려운 점이 있다.</li>\n<li>Google의 Tacotron</li>\n<li>pix2pix</li>\n<li>Facebook : CNN for tracstion</li>\n<li>강화학습(Reinforcement learning) → 구글, 아마존에서 활용하는 다양한 방법</li>\n<li>Q-Learning</li>\n<li>Bubble Braker 게임에 대해 Learning to Play(그나마 쉽게 공부 시킬 수 있는)</li>\n<li>데모는 Phyton 으로 제작</li>\n<li>자신의 PC에서 직접 확인하고 결과를 확인해 볼 것</li>\n<li>MOOCS 광장 참고해도 좋긴 함 → Data Science</li>\n</ul>\n<p><strong>* Apache Spark</strong>  </p>\n<ul>\n<li>Spark 특징<ul>\n<li>Scala, Java, Phyton, R 언어 사용 가능</li>\n<li>분산 Data 처리, 분산 자료구조</li>\n</ul>\n</li>\n<li>Apache Zepplin on Spark<ul>\n<li>시각화</li>\n<li>Jupiter와 차이점은 대용량 처리가 가능</li>\n</ul>\n</li>\n<li>BigData &amp; Spark Data Science Approach</li>\n<li>Spark Machine Learning(Mllib)</li>\n</ul>\n","categories":["Study"],"tags":[]},{"title":"2014년도 목표 진행 체크.(Update 2014.6.25)","url":"https://yeop-blog.github.io/2014/06/25/2014-12-01-2014-golas/","content":"<h4 id=\"2014-1-3\"><a href=\"#2014-1-3\" class=\"headerlink\" title=\"2014.1.3\"></a>2014.1.3</h4><p>1.올해 초 운전면허 학원 등록 및 면허 따기.<br>2.일본어 책 1번은 제대로 독학 하기.<br>3.현재 사용하고 있는 티스토리 블로그를 모바일 앱으로 만들어보기.<br>4.영빈,재범과 같이 하고 있는 토익 스터디 성과 거두기.(현재 목표는 700점)<br>5.회사 생활 제대로 하기! (적어도 현재 쓰고 있는 aof 프레임워크는 잘 다룰줄 알기)<br>6.자격증 관련해서 검색해보고 올해도 하나쯤은 따 놓을것.<br><del>7.1월달 한달 동안 꾸준히 헬스장 가서 운동하기.</del>-&gt; <strong>실패</strong>.(잦은 스케쥴 변경 및 감기 몸살로 인해..)<br>: 1월달 한달에서 이번달 6월까지 꾸준히 할 수 있을때 운동하는 방향으로 진행.<br>(적어도 6월까지는 예전 헬스 할 당시 몸으로 만들기를 목표로..) -&gt; <strong>실패</strong>.<br>: 집에서 시간이 될 때 마다 하루에 꾸준히 팔굽혀펴기, 윗몸일으키기 정도의 기본적인 운동 유지</p>\n<h4 id=\"2014-1-6\"><a href=\"#2014-1-6\" class=\"headerlink\" title=\"2014.1.6\"></a>2014.1.6</h4><p>1.이번주말에 1월달에 토익 시험을 위해 준비..및 접수 진행..시험은 2월달 말에 볼 예정.<br><del>2.작년에 보다만 모바일웹 관련해서 책 공부하면서 모바일 앱 개발을 위한 준비 시작.</del>  </p>\n<h4 id=\"2014-1-20\"><a href=\"#2014-1-20\" class=\"headerlink\" title=\"2014.1.20\"></a>2014.1.20</h4><p>1.토익 리스닝을 위한 책 구매..일요일날 구매해서 스터디 시작.다음주 사용할 리스닝 20문제 제작할 것.<br>2.연말정산 준비 오늘안으로 마무리.(집에서 준비할것)</p>\n<h4 id=\"2014-6-25\"><a href=\"#2014-6-25\" class=\"headerlink\" title=\"2014.6.25\"></a>2014.6.25</h4><p>1.올해 초 운전면허 학원 등록 및 면허 따기 무조건 다음달 안으로 실행.<br>2.영어 토익부터 제대로 다시 준비.(현재 집에 있는 기본 문제지부터 다시 복습 진행)<br>3.주말마다 모바일웹 책으로 안드로이드 공부.</p>\n","categories":["Life","Goal"],"tags":[]},{"title":"2013년도 목표 진행 체크.(4개 목표중 1개만 성공)","url":"https://yeop-blog.github.io/2013/12/01/2013-12-01-2013-golas/","content":"<h4 id=\"2013-01-02\"><a href=\"#2013-01-02\" class=\"headerlink\" title=\"2013.01.02\"></a>2013.01.02</h4><p>1.<del>정보처리기사 실기 시험 마무리.</del> -&gt; <strong>2013.05.31일 기사 최종 합격.</strong><br>2.영어 관련 공부 목표 설정.<br>3.Web + 모바일 개인 프로젝트 진행.<br>4.일본어 공부.  </p>\n<h4 id=\"2013-01-03\"><a href=\"#2013-01-03\" class=\"headerlink\" title=\"2013.01.03\"></a>2013.01.03</h4><p>1.모바일웹 책(강요천 강사님 저자) 01장.모바일웹의 이해 부분까지 공부 완료.<br>2.개인 블로그 카테고리 및 글 분류 정리.<br>3.기존 메일함 정리.  </p>\n<h4 id=\"2013-01-28\"><a href=\"#2013-01-28\" class=\"headerlink\" title=\"2013.01.28\"></a>2013.01.28</h4><p>1.정보처리기사 2013년도 시험일정 공개.  </p>\n<h4 id=\"2013-01-30\"><a href=\"#2013-01-30\" class=\"headerlink\" title=\"2013.01.30\"></a>2013.01.30</h4><p>1.모바일웹 책 03장까지 공부 완료.</p>\n<h4 id=\"2013-03-28\"><a href=\"#2013-03-28\" class=\"headerlink\" title=\"2013.03.28\"></a>2013.03.28</h4><p>1.정보처리기사 실기 시험 접수 완료.(시험일자 : 4월 20일)</p>\n<h4 id=\"2013-04-08\"><a href=\"#2013-04-08\" class=\"headerlink\" title=\"2013.04.08\"></a>2013.04.08</h4><p>1.성훈씨와 같이 모바일웹 프로젝트 시작하기로 결정.관련된 사항은 네이버 개발자센터를 통해 공유.<br>(<a href=\"http://dev.naver.com/projects/are\" target=\"_blank\" rel=\"noopener\">http://dev.naver.com/projects/are</a>)<br>2.위 프로젝트를 겸해서 경재씨와 같이 프로젝트를 합쳐서 할지는 추후 논의.-&gt; 만약 합쳐서 하게 된다면 경재씨 서버를 이용해서 좀 더 쾌적한 개발환경을 마련할 수 있다는 장점이 있음.  </p>\n<h4 id=\"2013-04-21\"><a href=\"#2013-04-21\" class=\"headerlink\" title=\"2013.04.21\"></a>2013.04.21</h4><p>1.정보처리기사 실기 시험 응시 결과<br>– 알고리즘 : 30 / 데이터베이스 : 18 / 업무프로세스 : 5 / 신기술 : 4 / 전산영어 : 4 = 61점.<br>– 위 결과는 현재 가답안을 기준으로 채점된 부분이라..차후 결과 발표를 기다려봐야 알 수 있을듯.<br>2.Web + 모바일 프로젝트 성훈씨와 이번주 부터 진행 예정.<br>– DB 설계부터 시작해서 2-3주짜리 프로젝트로 마무리 진행할 계획에 있으나 아직은 미정.</p>\n<h4 id=\"2013-04-25\"><a href=\"#2013-04-25\" class=\"headerlink\" title=\"2013.04.25\"></a>2013.04.25</h4><p>1.개인적으로 성훈씨와 같이 하는 프로젝트 외 영빈, 재범과 같이 프로젝트를 5월달부터 하나 시작할 예정.<br>– 상황을 보고 판단하여 프로젝트 진행 여부 결정.<br>2.5월달부터 외국어 관련 공부 재개.<br>– 일본어 : 기존에 공부하던 부분 부터 다시 시작하여 계획적으로 맞춰서 진행할 예정.계획에 관해서는 다시 정리.<br>– 영어 : 우선은 TOEIC시험을 기준으로 기존 구입했던 서적을 마무리 하는 방향으로 진행할 예정.이 부분 역시 계획을 짜고 실행할 수 있게끔 정리해서 다시 블로그에 기재.<br><del>– 일본어, 영어 관련된 계획은 이번주 주말전까지 마무리하여 블로그에 업로드.<br>– 내 스스로 계획에 실천하지 못하는 경우 스스로에게 어느정도 페널티를..페널티 부분은 다시 생각해서 같이 업로드.</del></p>\n<h4 id=\"2013-05-06\"><a href=\"#2013-05-06\" class=\"headerlink\" title=\"2013.05.06\"></a>2013.05.06</h4><p>1.이번주 주말(일요일) 성훈씨와 만나서 모바일웹 프로젝트 DB설계 이후 부분 과정 진행.<br>– 현재 네이버 개발자센터에 모바일웹 프로젝트로 생성.<br>2.영빈,재범과 같이 WOP 프로젝트 계획.진행 예정.<br>– 현재 네이버 개발자센터에 WOP 프로젝트로 생성.<br>3.외국어 관련 공부(일본어, 영어) 관해서는 우선 2개 프로젝트 어느정도 초기 부분이 정리가 된 이후 계획을 잡아서 시작하도록 하는 방향으로 함.늦어도 이번 5월달안에 계획을 잡고 시작.</p>\n<h4 id=\"2013-05-23\"><a href=\"#2013-05-23\" class=\"headerlink\" title=\"2013.05.23\"></a>2013.05.23</h4><p>1.프로젝트 진행 과정.<br>– WOP 프로젝트(영빈,재범) : 현재 문서화 단계 진행중.기초 회원가입,로그인쪽 개발 구현 진행.Cafe24서비스 신청 완료.<br>– 모바일웹 프로젝트(성훈) : 업무적인 부분 및 기본 스프링 구조로 웹을 구현해야 하는데 그 부분이 쉽게 진행이 안되는 중.<br>2.외국어 관련.<br><del>– 이번 주말에 무슨 일이 있어도 계획 설정 및 다음달부터 진행 할 예정.</del></p>\n<h4 id=\"2013-05-31\"><a href=\"#2013-05-31\" class=\"headerlink\" title=\"2013.05.31\"></a>2013.05.31</h4><p>1.정보처리기사 최종 합격.자격증은 배송으로 신청.(올해 목표 1번째 완료)<br>2.외국어 관련<br><del>– 이번 주말에 목표 설정 후 6월달부터 진행.지난주 계획을 잡으려 했으나 결국 하지 않고 넘어감..이번에는 꼭 계획 잡고 다음달부터 시작하는거로.제발!!</del></p>\n<h4 id=\"2013-07-01\"><a href=\"#2013-07-01\" class=\"headerlink\" title=\"2013.07.01\"></a>2013.07.01</h4><p>1.WOP 프로젝트 팀에서 임시 자진탈퇴.<br>– 현재 노트북 성능이 너무 안 좋아서 카페에서 모여서 할때 문제가 되기도 하고..우선 노트북 업그레이드 가능한지 알아봐야 하는 점이 첫번째 이유.두 번째는 다음달 프로젝트 관련해서 같이 병행해서 진행이 가능할지 불가능할지 미확정인 부분이 많아서 좀 더 지켜보고 결정.<br>2.외국어 관련 공부 계획은 정하게 되면 업데이트 하는거로 함.이 부분은 내 스스로 실망한 부분임.</p>\n<h4 id=\"2013-07-05\"><a href=\"#2013-07-05\" class=\"headerlink\" title=\"2013.07.05\"></a>2013.07.05</h4><p>1.향후 계획을 위해 이번 주말 계획 설정.<br>– 이력서 및 자기소개서 수정.(앞으로 이 2가지 문서에 대해서는 1년마다 업데이트 할 예정.)<br>– 현재 사용중인 Cafe24 서버에 소스 반영하는 법 숙지 및 방법에 대한 글 작성.<br>– 고급반때 작성했던 기록한 노트 다시 한번 숙지하고 복습.</p>\n","categories":["Life","Goal"],"tags":[]},{"title":"2012년도 목표 진행 체크.(4개중 1개 진행중, 3개 실패)","url":"https://yeop-blog.github.io/2012/12/01/2012-12-01-2012-golas/","content":"<h4 id=\"2012-05-20\"><a href=\"#2012-05-20\" class=\"headerlink\" title=\"2012.05.20\"></a>2012.05.20</h4><p>1.정보처리기사 자격증 시험 응시<br>– 당연히 필기, 실기 합격을 목표로.<br>2.Web 개발<br>– 기존 ShowPrice 프로젝트에서 미흡한 부분 보완 개발.<br>– Cafe24 호스팅 업체에 업로드 작업.<br>3.Android App 개발<br>– 현재 티스토리 블로그 글을 읽고 댓글 기능까지 가능한 App 개발<br>4.Toeic 시험 응시 및 점수 600-700점 이상 목표로.<br>(내 실력이 지금 형펀없는걸 보자면.. 이 점수도 상당히 힘들지만 말이다..ㄱ-)</p>\n<h4 id=\"2012-05-22\"><a href=\"#2012-05-22\" class=\"headerlink\" title=\"2012.05.22\"></a>2012.05.22</h4><p>1.Cafe24 호스팅 업체 서비스 2가지중 하나를 선택해야 되는데 고민중.<br>가격차이가 2배가 나버리네.. 헐..<br>1) 64bit JSP 광호스팅<br>– 장점 : 가격이 오라클 호스팅에 비하면 싸다. 64bit에다가 JSP가 지원이 된다.<br>– 단점 : DB가 MySQL이기 때문에 기존 프로젝트에서 사용했던 Oracle DB를 사용할 수 없다.<br>2) 오라클 호스팅<br>– 장점 : JSP가 지원이 되고 기존에 사용했던 Oracle DB가 사용이 가능하다.<br>– 단점 : 가격이 JSP 광호스팅에 비하면 비싸다.<br>3) 가격비교(1년 기준으로, 일반형으로 선택시)<br>– JSP 광호스팅 : 사용료 단가(1,100원) x 12 = 13,200원 (할인율 10% 추가) = 11,880원 + 설치비 11,000원 = 22,880원<br>– Oracle 호스팅 : 사용료 단가(2,200원) x 12 = 26,400원 (할인율 10% 추가) = 23,760원 + 설치비 22,000원 = 45,760원<br>– 차이 비용 : 45,760 – 22,880 = 22,880원(약 2배가 차이…= ㅅ=;;)</p>\n<p>2.ShowPrice 프로젝트 관련 진행사항<br>&lt;확인 및 완료 사항&gt;<br>– 아직은 Cafe24 호스팅 서비스를 신청하지 않은 관계로 Local에서 테스트 수정중.<br>– Naver지도 API키 Local IP주소에 맞게 키 값 변경 후 확인 완료.<br>– Naver Me2Day API키 IP주소에 맞게 키 값 변경 후 확인 완료.<br>– 자유게시판 카테고리(자유, 삽니다, 팝니다. 교환, 불만) 표시가 제대로 되게끔 설정 완료.<br>&lt;수정이 필요한 사항&gt;<br><del>– 소셜커머스 사이트 티켓몬스터, 그루폰, 쿠팡 이 3개의 사이트는 값을 제대로 받아오는데 위메프가 문제.</del><br>-&gt; 위메프가 문제가 아닌 Data양이 많아 제대로 각 사이트별로 받아오지 못하는 부분인거 같음.. 차후 소셜Data를 갖고 오는 부분에 있어서 처리를 다시 구현해야할거 같음.<br>– 티켓몬스터와 쿠팡은 자세한 상품 클릭할 경우 큰 이미지가 나타나지 않음.<br>&lt;해결 방안&gt;<br>– 이미지를 제대로 갖고 오지 않는 부분은 각 해당 페이지의 HTML요소를 Parsing해오는 방식이기 때문에 기존에 어떤 id, class명이 매칭이 됐었는지부터 확인을 하는 작업이 필요하다.<br><del>– 위메프 XML 데이터는 정상적으로 받아오기 때문에 받아오는 부분에 있어서는 문제가 없어보이지만.. 이미지 부분부터 해결을 하고 나서 이 부분을 진행할 예정.</del><br>-&gt; 데이터 처리 부분에 있어서는 다시 구현을 해야 할거 같음. 현재 Data의 양이 많아 받아오는데 제대로 처리가 안되는것 같음.</p>\n<h4 id=\"2012-05-23\"><a href=\"#2012-05-23\" class=\"headerlink\" title=\"2012.05.23\"></a>2012.05.23</h4><p>1.ShowPrice 기존 프로젝트를 업데이트 하려던 계획에서 처음부터 다시 갈아엎어 <strong>새롭게 DB설계부터 시작하기로 결정.</strong><br>– 새롭게 시작하기로 한 부분에 대한 이유는 아래와 같다.<br>1) 현재의 ShowPrice는 Web Application + Mobile Application의 형태로 되어 있다.<br>따라서 Web Application으로만 구성이 된 ShowPrice를 구성하고 싶은것이 첫번째 이유이다.<br>(차후 해당 Web Page가 모바일로 접속시 모바일 환경에 맞는 웹페이지를 구성할지는 제대로 Web이 구현후 결정)<br>2) 시간에 쫓겨 프로젝트를 진행하다 보니 미숙한 부분이 많은 Spring 프레임워크구조이다.<br>그냥 까놓고 이야기해서 Spring 프레임워크를 제대로 활용했나? 의구심이 들기까지 한다;;<br>그 중 제일 못한 부분은 역시나 쪽지 쪽이다. (내가 맡은 부분… 에휴..)<br>그에 따라 제대로 된 Spring 프레임워크 구조로 다시 만들어볼 생각이다.<br>3) 기존 소셜커머스 XML파싱 데이터를 받아오는 부분 및 이미지 처리가 많아 바뀌거나 안 되는 부분이 많아서 전반적으로 수정이 필요하다고 판단이 됐다.</p>\n<p>2.<strong>현재 새로운 ShowPrice 대략적인 개발 계획</strong>은 아래와 같다.<br>– 사용할 프레임워크 : Spring Framework 3.0(어노테이션 기반으로 작성할 예정)<br>– 사용될 주요 기술 언어 : Java, JSP, JavaScript, JSTL, Tomcat6.0, Oracle 또는 MySQL<br>– 가능하다면 추가로 사용하고 싶은 언어 : jQuery, Ajax, HTML5, CSS3, Tiles<br>– 사용할 Tools : Eclipse, SQLGate, EditPlus, PhotoShop CS<br>– <strong>진행일정</strong>  </p>\n<ul>\n<li>05월 현재 시점부터 ~ 06월 말 : 호스팅 업체 선정 및 DB설계 및 스토리보드 구성.</li>\n<li>07월 초 ~ 07월 중 : 1차 점검 기간(DB설계 최종 점검 및 스토리보드 확정)</li>\n<li>07월 중 ~ 08월 중 : 1차 개발(전반적인 구현 진행)  </li>\n<li>08월 중 ~ 08월 말 : 2차 점검 기간(미흡한 개발 부분 점검 및 수정)</li>\n<li>09월 초 ~ 10월 중 : 2차 개발(미진한 부분 개발 진행 + 디자인 이미지 생성)</li>\n<li>10월 중 ~ 10월 말 : 최종 점검 기간(미흡한 개발 최종 마무리 점검 및 수정)</li>\n<li>11월 초 ~ 11월 중 : CBT, OBT</li>\n<li>11월 중 ~ 11월 말 : 모든 일정 개발 최종 점검 및 수정 .. 완료.</li>\n</ul>\n<p>3.차후 변동사항이 생기면 이 페이지에 언급할 예정.</p>\n<h4 id=\"2012-05-30\"><a href=\"#2012-05-30\" class=\"headerlink\" title=\"2012.05.30\"></a>2012.05.30</h4><p>1.ShowPrice 프로젝트 기존 Database파악.  </p>\n<ul>\n<li>시퀀스<br>– bbs_seq_no<br>– comment_seq_no<br>– file_seq_no<br>– message_seq_no<br>– spam_seq_no<br>– coupon_seq_no<br>– coupon_no<br>– coupon_file_seq_no  </li>\n<li>테이블<br>– bbs / bbs_categorys / bbs_comments / bbs_files / bbs_name<br>– message / message_spam / spam<br>– users / friends<br>– products / detailimg / vote / p_lowprice / search_product<br>– coupon / coupon_files  </li>\n<li>수정사항<br>1) 기존의 쿠폰 테이블 및 시퀀스는 사용하지 않기로 한다.<br>(기존 ShowPrice는 쿠폰에 대한 저장 공간을 마련한다고 했지만실질적으로 웹에서 사용을 할지 생각을 한다면 사용을 하지 않기 때문에 없어도 상관이 없을거 같아 위와 같이 결정)<br>2) 기존의 상품 관련된 테이블 명의 일관성을 고려하여 다시 명명할 예정.<br>(products, detailimg 등.. 관련이 있음에도 불구하고 일정하지 않은 테이블 명칭으로 혼란을 가져올 수 있음)<br>3) 쪽지 부분은 게시판과 마찬가지로 기본적인 웹 사이트 기능중 한가지 이므로 그대로 유지하되 버그 및 기능향상 필요.<br>(당시 적용하지 못했던 Ajax부분 및 잔재하는 버그 수정이 필요. 우선 버그 해결 후 Ajax가 가능하다면 구현 예정)</li>\n</ul>\n<h4 id=\"2012-06-04\"><a href=\"#2012-06-04\" class=\"headerlink\" title=\"2012.06.04\"></a>2012.06.04</h4><p>1.DB를 기존에 사용했던 <strong>Oracle에서 MySQL로 변경</strong>하기로 결정.<br>– 기존에 DB를 다시 작성해 햐는 부분과 함께 Cafe24에서 Oracle로 DB를 하기에는 비용이 2배 이상 차이가 나기 때문에<br>MySQL로 가기로 결정. (실질적인 쿼리에서 큰 차이가 없고 있다 하더라도 배우면서 또 하는 부분도 있으니..ㅎㅎ)<br>2.<strong>MySQL Workbench를 통해 Database Modeling</strong>을 하기로 결정.<br>– 좀 더 나은 툴이 있다면 그 툴을 이용해 해보겠지만.. 아직은 저 툴 밖에 모르기 때문에 저걸로 우선 하기로 결정.<br>3.개인적인 사정으로 인해 앞으로 계획이 약 1-2개월 미뤄질 가능성이 있음.<br>– 어머니 수술 및 병원 입원으로 인한 개인적인 스케쥴 조정을 해야 함.<br>4.다음주 주말(06/17)까지 ShowPrice의 전반적인 기능 소개 및 Database Modeling을 목표로 설정.</p>\n<p>– ShowPrice 전반적인 기능 소개<br><strong>1) 대표적인 소셜커머스의 상품들을 한 곳에서 확인해볼 수 있다.</strong><br>– 티켓몬스터, 위메이크프라이스, 그루폰, 쿠팡. 대한민국 소셜커머스 이용하는 사람이라면 다 들어봤을만한 사이트 4군데에서 상품 데이터를 모두 갖고와 ShowPrice라는 하나의 사이트에서 볼 수 있다는 편의성을 제공. 해당 데이터는 소셜포탈(<a href=\"http://www.socialportal.co.kr/\" target=\"_blank\" rel=\"noopener\">http://www.socialportal.co.kr/</a>) 이라는 XML데이터를 제공해주는 곳에서 갖고오는게 위주이지만 이 곳에서 제공해주지 않는 이미지 파일이나 기타 다른 필요한 정보의 경우 직접 가져와 써야 할 경우도 있다.<br>– 해당하는 상품을 클릭할 경우 상세한 이미지 정보를 받아오고 그에 대한 블로그 정보, 가격 비교 정보, 지도 정보를 확인해 볼 수 있게끔 한다. 이 부분은 기존 ShowPrice에서 구현한 기능 그대로 유지한다.<br><strong>2) 네이버의 미투데이 서비스를 이용한 운영방식으로 회원가입이 별도 필요 없다.</strong><br>– ShowPrice는 회원 가입이 별도로 필요 없이 Naver에서 제공하는 Me2Day아이디를 갖고 있으면 누구나 쉽게 우리 사이트의 모든 기능을 이용할 수 있게끔 할 예정임. (즉, 회원과 비회원의 차이를 두게끔은 한다는 이야기)<br><strong>3) 자유게시판 및 거래게시판.. .쪽지, 댓글, 답글등의 기본 적인 커뮤니티 공간을 마련.</strong><br>– ShowPrice에서 보여지는 정보들을 보고 그 정보에 대한 부분을 바로바로 의견을 나눌 수 있게끔 공간을 마련한다.<br>– 자유게시판이나 거래게시판의 경우 기존의 게시판 형식 그대로 유지하여 일반적인 게시판으로 만든다.<br>– 쪽지의 경우 기존에 구현했던 쪽지 기능을 그대로 살리되, 가능하면 Ajax방식을 사용하여 바로바로 사용자 눈에 CRUD가 보여지게끔 구현을 해 볼 예정.<br>– 댓글과 답글의 경우 좀 더 가독성을 높여 쉽게 읽을 수 있게끔 할 예정.<br>(기존의 댓글 경우 너무 붙어서 나와 답답한 면이 없지 않아 있었음)<br>– Me2Day뿐만이 아닌 Facebook, Twitter등 대표적인 SNS서비스를 연동하여 실시간의견이 공유 가능하게끔 할 예정.(우선은 Me2Day, Facebook, Twitter 이 3가지 SNS서비스만을 목표로 한다)<br><strong>4) Naver쇼핑 데이터를 이용해서 소셜커머스 상품과의 최저가 비교 서비스를 제공 예정.</strong><br>– 해당 부분은 기존 ShowPrice 개발 당시 논의가 됐던 부분으로 상품 데이터를 얻어오는데 있어 먹는 상품이나 예매권 등 가격비교가 힘들다는 점이 가장 큰 문제점이었기 때문에 이 부분을 어떻게 보완해나아갈지 고민중. 실질적으로 자동으로 매칭되어 검색 비교 한다는 것은 무리가 있기에 우선은 기존 방식대로 유지하되 계속 보완책을 강구해볼 예정.<br><strong>5) 지도 서비스를 통해 내 위치 주변에 어떠한 소셜 커머스 상품들이 있는지 확인해주는 서비스 제공 예정.</strong><br>– 이 부분 역시 소셜커머스 Data를 뿌려주는 부분에서 진행이 되지 않았던 부분으로 이번 프로젝트에서는 완성 예정.<br><strong>6) 자신이 가입한 사이트의 마이페이지를 링크 연결시켜 보여주는 ShowPrice 마이페이지를 추가 예정.</strong><br>– 이번에 새롭게 추가 되는 부분으로 ShowPrice 마이페이지라는 하나의 공간을 통해 그 공간에서 각 가입한 사이트에서 내가 주문한 상품에 대한 정보나 배송 조회를 바로 확인해 볼 수 있게끔 할 예정.(아마 직접적인 정보를 갖고 오기 힘들 거라 예상이 되기 때문에 링크 연결해주는 식으로만 하지 않을까 생각해본다)  </p>\n<p>Database Modeling은 MySQL Workbench를 통해 작성하여 완성되면 여기에다가 추가 할 예정.</p>\n<h4 id=\"2012-08-10\"><a href=\"#2012-08-10\" class=\"headerlink\" title=\"2012.08.10\"></a>2012.08.10</h4><p><del>1.ShowPrice 프로젝트 계획 9월달부터 다시 재시작.</del><br>2.9월전까지는 정보처리기사 자격증 + 영어 공부에 전념.  </p>\n<h4 id=\"2012-10-14\"><a href=\"#2012-10-14\" class=\"headerlink\" title=\"2012.10.14\"></a>2012.10.14</h4><p>1.정보처리기사 실기 불합격. 내년에는 반드시 합격을 목표로…<br>2.토익 공부 매일 지하철 출, 퇴근시 암기. 매일 50단어씩 한달에 1500단어 암기를 목표로 시작.<br>3.모바일 웹(안드로이드 관련) 공부 재개.<br>– 목표 : 현재 엽이군 티스토리 블로그 앱 개발.<br>– 교재 : 1) 강요천 선생님 책 ‘상상력과 HTML5, CSS3, JavaScript로 빚는 모바일 웹’<br>2) 모바일 웹 개발<br>3) 안드로이드 앱 프로그래밍.<br>4.ShowPrice 프로젝트 임시 무기한 보류.<br>5.운동 하루에 30분 ~ 1시간씩 꾸준히.. 주말에는 가능하면 헬스장 이용해서 운동하는 방향으로.  </p>\n<h4 id=\"2012-11-05\"><a href=\"#2012-11-05\" class=\"headerlink\" title=\"2012.11.05\"></a>2012.11.05</h4><p>1.토익 단어 매일 50단어에서 10단어로 변경. 300단어 암기를 목표로 11월 06일부터 시작.</p>\n<h4 id=\"2013-01-02\"><a href=\"#2013-01-02\" class=\"headerlink\" title=\"2013.01.02\"></a>2013.01.02</h4><p>다시 목표 설정.</p>\n","categories":["Life","Goal"],"tags":[]}]